// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IbcApplicationsTransferV1Params Params defines the set of IBC transfer parameters.
// NOTE: To prevent a single token from being transferred, set the
// TransfersEnabled parameter to true and then set the bank module's SendEnabled
// parameter for the denomination to false.
//
// swagger:model ibc.applications.transfer.v1.Params
type IbcApplicationsTransferV1Params struct {

	// receive_enabled enables or disables all cross-chain token transfers to this
	// chain.
	ReceiveEnabled bool `json:"receive_enabled,omitempty"`

	// send_enabled enables or disables all cross-chain token transfers from this
	// chain.
	SendEnabled bool `json:"send_enabled,omitempty"`
}

// Validate validates this ibc applications transfer v1 params
func (m *IbcApplicationsTransferV1Params) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ibc applications transfer v1 params based on context it is used
func (m *IbcApplicationsTransferV1Params) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IbcApplicationsTransferV1Params) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IbcApplicationsTransferV1Params) UnmarshalBinary(b []byte) error {
	var res IbcApplicationsTransferV1Params
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
