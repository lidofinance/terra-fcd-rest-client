// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CosmosBankV1beta1DenomUnit DenomUnit represents a struct that describes a given
// denomination unit of the basic token.
//
// swagger:model cosmos.bank.v1beta1.DenomUnit
type CosmosBankV1beta1DenomUnit struct {

	// aliases is a list of string aliases for the given denom
	Aliases []string `json:"aliases"`

	// denom represents the string name of the given denom unit (e.g uatom).
	Denom string `json:"denom,omitempty"`

	// exponent represents power of 10 exponent that one must
	// raise the base_denom to in order to equal the given DenomUnit's denom
	// 1 denom = 1^exponent base_denom
	// (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
	// exponent = 6, thus: 1 atom = 10^6 uatom).
	Exponent int64 `json:"exponent,omitempty"`
}

// Validate validates this cosmos bank v1beta1 denom unit
func (m *CosmosBankV1beta1DenomUnit) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cosmos bank v1beta1 denom unit based on context it is used
func (m *CosmosBankV1beta1DenomUnit) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CosmosBankV1beta1DenomUnit) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CosmosBankV1beta1DenomUnit) UnmarshalBinary(b []byte) error {
	var res CosmosBankV1beta1DenomUnit
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
