// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CosmosCryptoMultisigV1beta1CompactBitArray CompactBitArray is an implementation of a space efficient bit array.
// This is used to ensure that the encoded data takes up a minimal amount of
// space after proto encoding.
// This is not thread safe, and is not intended for concurrent usage.
//
// swagger:model cosmos.crypto.multisig.v1beta1.CompactBitArray
type CosmosCryptoMultisigV1beta1CompactBitArray struct {

	// elems
	// Format: byte
	Elems strfmt.Base64 `json:"elems,omitempty"`

	// extra bits stored
	ExtraBitsStored int64 `json:"extra_bits_stored,omitempty"`
}

// Validate validates this cosmos crypto multisig v1beta1 compact bit array
func (m *CosmosCryptoMultisigV1beta1CompactBitArray) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cosmos crypto multisig v1beta1 compact bit array based on context it is used
func (m *CosmosCryptoMultisigV1beta1CompactBitArray) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CosmosCryptoMultisigV1beta1CompactBitArray) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CosmosCryptoMultisigV1beta1CompactBitArray) UnmarshalBinary(b []byte) error {
	var res CosmosCryptoMultisigV1beta1CompactBitArray
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
