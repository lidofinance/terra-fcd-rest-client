// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// StakingHistory staking history
//
// swagger:model stakingHistory
type StakingHistory struct {

	// unix timestamp
	// Required: true
	Datetime *float64 `json:"datetime"`

	// staking ratio
	// Required: true
	StakingRatio *string `json:"stakingRatio"`
}

// Validate validates this staking history
func (m *StakingHistory) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDatetime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStakingRatio(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StakingHistory) validateDatetime(formats strfmt.Registry) error {

	if err := validate.Required("datetime", "body", m.Datetime); err != nil {
		return err
	}

	return nil
}

func (m *StakingHistory) validateStakingRatio(formats strfmt.Registry) error {

	if err := validate.Required("stakingRatio", "body", m.StakingRatio); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this staking history based on context it is used
func (m *StakingHistory) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StakingHistory) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StakingHistory) UnmarshalBinary(b []byte) error {
	var res StakingHistory
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
