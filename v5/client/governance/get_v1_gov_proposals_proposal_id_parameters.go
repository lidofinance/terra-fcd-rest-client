// Code generated by go-swagger; DO NOT EDIT.

package governance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetV1GovProposalsProposalIDParams creates a new GetV1GovProposalsProposalIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetV1GovProposalsProposalIDParams() *GetV1GovProposalsProposalIDParams {
	return &GetV1GovProposalsProposalIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1GovProposalsProposalIDParamsWithTimeout creates a new GetV1GovProposalsProposalIDParams object
// with the ability to set a timeout on a request.
func NewGetV1GovProposalsProposalIDParamsWithTimeout(timeout time.Duration) *GetV1GovProposalsProposalIDParams {
	return &GetV1GovProposalsProposalIDParams{
		timeout: timeout,
	}
}

// NewGetV1GovProposalsProposalIDParamsWithContext creates a new GetV1GovProposalsProposalIDParams object
// with the ability to set a context for a request.
func NewGetV1GovProposalsProposalIDParamsWithContext(ctx context.Context) *GetV1GovProposalsProposalIDParams {
	return &GetV1GovProposalsProposalIDParams{
		Context: ctx,
	}
}

// NewGetV1GovProposalsProposalIDParamsWithHTTPClient creates a new GetV1GovProposalsProposalIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetV1GovProposalsProposalIDParamsWithHTTPClient(client *http.Client) *GetV1GovProposalsProposalIDParams {
	return &GetV1GovProposalsProposalIDParams{
		HTTPClient: client,
	}
}

/* GetV1GovProposalsProposalIDParams contains all the parameters to send to the API endpoint
   for the get v1 gov proposals proposal ID operation.

   Typically these are written to a http.Request.
*/
type GetV1GovProposalsProposalIDParams struct {

	/* Account.

	   User account
	*/
	Account *string

	/* ProposalID.

	   Proposal id
	*/
	ProposalID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get v1 gov proposals proposal ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1GovProposalsProposalIDParams) WithDefaults() *GetV1GovProposalsProposalIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get v1 gov proposals proposal ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1GovProposalsProposalIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get v1 gov proposals proposal ID params
func (o *GetV1GovProposalsProposalIDParams) WithTimeout(timeout time.Duration) *GetV1GovProposalsProposalIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 gov proposals proposal ID params
func (o *GetV1GovProposalsProposalIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 gov proposals proposal ID params
func (o *GetV1GovProposalsProposalIDParams) WithContext(ctx context.Context) *GetV1GovProposalsProposalIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 gov proposals proposal ID params
func (o *GetV1GovProposalsProposalIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v1 gov proposals proposal ID params
func (o *GetV1GovProposalsProposalIDParams) WithHTTPClient(client *http.Client) *GetV1GovProposalsProposalIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v1 gov proposals proposal ID params
func (o *GetV1GovProposalsProposalIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccount adds the account to the get v1 gov proposals proposal ID params
func (o *GetV1GovProposalsProposalIDParams) WithAccount(account *string) *GetV1GovProposalsProposalIDParams {
	o.SetAccount(account)
	return o
}

// SetAccount adds the account to the get v1 gov proposals proposal ID params
func (o *GetV1GovProposalsProposalIDParams) SetAccount(account *string) {
	o.Account = account
}

// WithProposalID adds the proposalID to the get v1 gov proposals proposal ID params
func (o *GetV1GovProposalsProposalIDParams) WithProposalID(proposalID string) *GetV1GovProposalsProposalIDParams {
	o.SetProposalID(proposalID)
	return o
}

// SetProposalID adds the proposalId to the get v1 gov proposals proposal ID params
func (o *GetV1GovProposalsProposalIDParams) SetProposalID(proposalID string) {
	o.ProposalID = proposalID
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1GovProposalsProposalIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Account != nil {

		// query param account
		var qrAccount string

		if o.Account != nil {
			qrAccount = *o.Account
		}
		qAccount := qrAccount
		if qAccount != "" {

			if err := r.SetQueryParam("account", qAccount); err != nil {
				return err
			}
		}
	}

	// path param proposalId
	if err := r.SetPathParam("proposalId", o.ProposalID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
