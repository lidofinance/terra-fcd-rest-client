// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewConsensusStateParams creates a new ConsensusStateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewConsensusStateParams() *ConsensusStateParams {
	return &ConsensusStateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewConsensusStateParamsWithTimeout creates a new ConsensusStateParams object
// with the ability to set a timeout on a request.
func NewConsensusStateParamsWithTimeout(timeout time.Duration) *ConsensusStateParams {
	return &ConsensusStateParams{
		timeout: timeout,
	}
}

// NewConsensusStateParamsWithContext creates a new ConsensusStateParams object
// with the ability to set a context for a request.
func NewConsensusStateParamsWithContext(ctx context.Context) *ConsensusStateParams {
	return &ConsensusStateParams{
		Context: ctx,
	}
}

// NewConsensusStateParamsWithHTTPClient creates a new ConsensusStateParams object
// with the ability to set a custom HTTPClient for a request.
func NewConsensusStateParamsWithHTTPClient(client *http.Client) *ConsensusStateParams {
	return &ConsensusStateParams{
		HTTPClient: client,
	}
}

/* ConsensusStateParams contains all the parameters to send to the API endpoint
   for the consensus state operation.

   Typically these are written to a http.Request.
*/
type ConsensusStateParams struct {

	/* ClientID.

	   client identifier
	*/
	ClientID string

	/* LatestHeight.

	     latest_height overrrides the height field and queries the latest stored
	ConsensusState.

	     Format: boolean
	*/
	LatestHeight *bool

	/* RevisionHeight.

	   consensus state revision height

	   Format: uint64
	*/
	RevisionHeight string

	/* RevisionNumber.

	   consensus state revision number

	   Format: uint64
	*/
	RevisionNumber string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the consensus state params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ConsensusStateParams) WithDefaults() *ConsensusStateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the consensus state params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ConsensusStateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the consensus state params
func (o *ConsensusStateParams) WithTimeout(timeout time.Duration) *ConsensusStateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the consensus state params
func (o *ConsensusStateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the consensus state params
func (o *ConsensusStateParams) WithContext(ctx context.Context) *ConsensusStateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the consensus state params
func (o *ConsensusStateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the consensus state params
func (o *ConsensusStateParams) WithHTTPClient(client *http.Client) *ConsensusStateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the consensus state params
func (o *ConsensusStateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClientID adds the clientID to the consensus state params
func (o *ConsensusStateParams) WithClientID(clientID string) *ConsensusStateParams {
	o.SetClientID(clientID)
	return o
}

// SetClientID adds the clientId to the consensus state params
func (o *ConsensusStateParams) SetClientID(clientID string) {
	o.ClientID = clientID
}

// WithLatestHeight adds the latestHeight to the consensus state params
func (o *ConsensusStateParams) WithLatestHeight(latestHeight *bool) *ConsensusStateParams {
	o.SetLatestHeight(latestHeight)
	return o
}

// SetLatestHeight adds the latestHeight to the consensus state params
func (o *ConsensusStateParams) SetLatestHeight(latestHeight *bool) {
	o.LatestHeight = latestHeight
}

// WithRevisionHeight adds the revisionHeight to the consensus state params
func (o *ConsensusStateParams) WithRevisionHeight(revisionHeight string) *ConsensusStateParams {
	o.SetRevisionHeight(revisionHeight)
	return o
}

// SetRevisionHeight adds the revisionHeight to the consensus state params
func (o *ConsensusStateParams) SetRevisionHeight(revisionHeight string) {
	o.RevisionHeight = revisionHeight
}

// WithRevisionNumber adds the revisionNumber to the consensus state params
func (o *ConsensusStateParams) WithRevisionNumber(revisionNumber string) *ConsensusStateParams {
	o.SetRevisionNumber(revisionNumber)
	return o
}

// SetRevisionNumber adds the revisionNumber to the consensus state params
func (o *ConsensusStateParams) SetRevisionNumber(revisionNumber string) {
	o.RevisionNumber = revisionNumber
}

// WriteToRequest writes these params to a swagger request
func (o *ConsensusStateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param client_id
	if err := r.SetPathParam("client_id", o.ClientID); err != nil {
		return err
	}

	if o.LatestHeight != nil {

		// query param latest_height
		var qrLatestHeight bool

		if o.LatestHeight != nil {
			qrLatestHeight = *o.LatestHeight
		}
		qLatestHeight := swag.FormatBool(qrLatestHeight)
		if qLatestHeight != "" {

			if err := r.SetQueryParam("latest_height", qLatestHeight); err != nil {
				return err
			}
		}
	}

	// path param revision_height
	if err := r.SetPathParam("revision_height", o.RevisionHeight); err != nil {
		return err
	}

	// path param revision_number
	if err := r.SetPathParam("revision_number", o.RevisionNumber); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
