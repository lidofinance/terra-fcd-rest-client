// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewModuleVersionsParams creates a new ModuleVersionsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewModuleVersionsParams() *ModuleVersionsParams {
	return &ModuleVersionsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewModuleVersionsParamsWithTimeout creates a new ModuleVersionsParams object
// with the ability to set a timeout on a request.
func NewModuleVersionsParamsWithTimeout(timeout time.Duration) *ModuleVersionsParams {
	return &ModuleVersionsParams{
		timeout: timeout,
	}
}

// NewModuleVersionsParamsWithContext creates a new ModuleVersionsParams object
// with the ability to set a context for a request.
func NewModuleVersionsParamsWithContext(ctx context.Context) *ModuleVersionsParams {
	return &ModuleVersionsParams{
		Context: ctx,
	}
}

// NewModuleVersionsParamsWithHTTPClient creates a new ModuleVersionsParams object
// with the ability to set a custom HTTPClient for a request.
func NewModuleVersionsParamsWithHTTPClient(client *http.Client) *ModuleVersionsParams {
	return &ModuleVersionsParams{
		HTTPClient: client,
	}
}

/* ModuleVersionsParams contains all the parameters to send to the API endpoint
   for the module versions operation.

   Typically these are written to a http.Request.
*/
type ModuleVersionsParams struct {

	/* ModuleName.

	     module_name is a field to query a specific module
	consensus version from state. Leaving this empty will
	fetch the full list of module versions from state.
	*/
	ModuleName *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the module versions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ModuleVersionsParams) WithDefaults() *ModuleVersionsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the module versions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ModuleVersionsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the module versions params
func (o *ModuleVersionsParams) WithTimeout(timeout time.Duration) *ModuleVersionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the module versions params
func (o *ModuleVersionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the module versions params
func (o *ModuleVersionsParams) WithContext(ctx context.Context) *ModuleVersionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the module versions params
func (o *ModuleVersionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the module versions params
func (o *ModuleVersionsParams) WithHTTPClient(client *http.Client) *ModuleVersionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the module versions params
func (o *ModuleVersionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithModuleName adds the moduleName to the module versions params
func (o *ModuleVersionsParams) WithModuleName(moduleName *string) *ModuleVersionsParams {
	o.SetModuleName(moduleName)
	return o
}

// SetModuleName adds the moduleName to the module versions params
func (o *ModuleVersionsParams) SetModuleName(moduleName *string) {
	o.ModuleName = moduleName
}

// WriteToRequest writes these params to a swagger request
func (o *ModuleVersionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ModuleName != nil {

		// query param module_name
		var qrModuleName string

		if o.ModuleName != nil {
			qrModuleName = *o.ModuleName
		}
		qModuleName := qrModuleName
		if qModuleName != "" {

			if err := r.SetQueryParam("module_name", qModuleName); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
