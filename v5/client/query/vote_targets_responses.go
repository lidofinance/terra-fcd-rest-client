// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VoteTargetsReader is a Reader for the VoteTargets structure.
type VoteTargetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VoteTargetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVoteTargetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewVoteTargetsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVoteTargetsOK creates a VoteTargetsOK with default headers values
func NewVoteTargetsOK() *VoteTargetsOK {
	return &VoteTargetsOK{}
}

/* VoteTargetsOK describes a response with status code 200, with default header values.

A successful response.
*/
type VoteTargetsOK struct {
	Payload *VoteTargetsOKBody
}

func (o *VoteTargetsOK) Error() string {
	return fmt.Sprintf("[GET /terra/oracle/v1beta1/denoms/vote_targets][%d] voteTargetsOK  %+v", 200, o.Payload)
}
func (o *VoteTargetsOK) GetPayload() *VoteTargetsOKBody {
	return o.Payload
}

func (o *VoteTargetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(VoteTargetsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVoteTargetsDefault creates a VoteTargetsDefault with default headers values
func NewVoteTargetsDefault(code int) *VoteTargetsDefault {
	return &VoteTargetsDefault{
		_statusCode: code,
	}
}

/* VoteTargetsDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type VoteTargetsDefault struct {
	_statusCode int

	Payload *VoteTargetsDefaultBody
}

// Code gets the status code for the vote targets default response
func (o *VoteTargetsDefault) Code() int {
	return o._statusCode
}

func (o *VoteTargetsDefault) Error() string {
	return fmt.Sprintf("[GET /terra/oracle/v1beta1/denoms/vote_targets][%d] VoteTargets default  %+v", o._statusCode, o.Payload)
}
func (o *VoteTargetsDefault) GetPayload() *VoteTargetsDefaultBody {
	return o.Payload
}

func (o *VoteTargetsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(VoteTargetsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*VoteTargetsDefaultBody vote targets default body
swagger:model VoteTargetsDefaultBody
*/
type VoteTargetsDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*VoteTargetsDefaultBodyDetailsItems0 `json:"details"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this vote targets default body
func (o *VoteTargetsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *VoteTargetsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("VoteTargets default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("VoteTargets default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this vote targets default body based on the context it is used
func (o *VoteTargetsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *VoteTargetsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("VoteTargets default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("VoteTargets default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *VoteTargetsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *VoteTargetsDefaultBody) UnmarshalBinary(b []byte) error {
	var res VoteTargetsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*VoteTargetsDefaultBodyDetailsItems0 vote targets default body details items0
swagger:model VoteTargetsDefaultBodyDetailsItems0
*/
type VoteTargetsDefaultBodyDetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this vote targets default body details items0
func (o *VoteTargetsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this vote targets default body details items0 based on context it is used
func (o *VoteTargetsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *VoteTargetsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *VoteTargetsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res VoteTargetsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*VoteTargetsOKBody QueryVoteTargetsResponse is response type for the
// Query/VoteTargets RPC method.
swagger:model VoteTargetsOKBody
*/
type VoteTargetsOKBody struct {

	// vote_targets defines a list of the denomination in which everyone
	// should vote in the current vote period.
	VoteTargets []string `json:"vote_targets"`
}

// Validate validates this vote targets o k body
func (o *VoteTargetsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this vote targets o k body based on context it is used
func (o *VoteTargetsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *VoteTargetsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *VoteTargetsOKBody) UnmarshalBinary(b []byte) error {
	var res VoteTargetsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
