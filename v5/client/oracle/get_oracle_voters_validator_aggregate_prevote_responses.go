// Code generated by go-swagger; DO NOT EDIT.

package oracle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetOracleVotersValidatorAggregatePrevoteReader is a Reader for the GetOracleVotersValidatorAggregatePrevote structure.
type GetOracleVotersValidatorAggregatePrevoteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOracleVotersValidatorAggregatePrevoteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOracleVotersValidatorAggregatePrevoteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOracleVotersValidatorAggregatePrevoteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOracleVotersValidatorAggregatePrevoteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOracleVotersValidatorAggregatePrevoteOK creates a GetOracleVotersValidatorAggregatePrevoteOK with default headers values
func NewGetOracleVotersValidatorAggregatePrevoteOK() *GetOracleVotersValidatorAggregatePrevoteOK {
	return &GetOracleVotersValidatorAggregatePrevoteOK{}
}

/* GetOracleVotersValidatorAggregatePrevoteOK describes a response with status code 200, with default header values.

OK
*/
type GetOracleVotersValidatorAggregatePrevoteOK struct {
	Payload *GetOracleVotersValidatorAggregatePrevoteOKBody
}

func (o *GetOracleVotersValidatorAggregatePrevoteOK) Error() string {
	return fmt.Sprintf("[GET /oracle/voters/{validator}/aggregate_prevote][%d] getOracleVotersValidatorAggregatePrevoteOK  %+v", 200, o.Payload)
}
func (o *GetOracleVotersValidatorAggregatePrevoteOK) GetPayload() *GetOracleVotersValidatorAggregatePrevoteOKBody {
	return o.Payload
}

func (o *GetOracleVotersValidatorAggregatePrevoteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetOracleVotersValidatorAggregatePrevoteOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOracleVotersValidatorAggregatePrevoteBadRequest creates a GetOracleVotersValidatorAggregatePrevoteBadRequest with default headers values
func NewGetOracleVotersValidatorAggregatePrevoteBadRequest() *GetOracleVotersValidatorAggregatePrevoteBadRequest {
	return &GetOracleVotersValidatorAggregatePrevoteBadRequest{}
}

/* GetOracleVotersValidatorAggregatePrevoteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetOracleVotersValidatorAggregatePrevoteBadRequest struct {
}

func (o *GetOracleVotersValidatorAggregatePrevoteBadRequest) Error() string {
	return fmt.Sprintf("[GET /oracle/voters/{validator}/aggregate_prevote][%d] getOracleVotersValidatorAggregatePrevoteBadRequest ", 400)
}

func (o *GetOracleVotersValidatorAggregatePrevoteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOracleVotersValidatorAggregatePrevoteInternalServerError creates a GetOracleVotersValidatorAggregatePrevoteInternalServerError with default headers values
func NewGetOracleVotersValidatorAggregatePrevoteInternalServerError() *GetOracleVotersValidatorAggregatePrevoteInternalServerError {
	return &GetOracleVotersValidatorAggregatePrevoteInternalServerError{}
}

/* GetOracleVotersValidatorAggregatePrevoteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOracleVotersValidatorAggregatePrevoteInternalServerError struct {
}

func (o *GetOracleVotersValidatorAggregatePrevoteInternalServerError) Error() string {
	return fmt.Sprintf("[GET /oracle/voters/{validator}/aggregate_prevote][%d] getOracleVotersValidatorAggregatePrevoteInternalServerError ", 500)
}

func (o *GetOracleVotersValidatorAggregatePrevoteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetOracleVotersValidatorAggregatePrevoteOKBody get oracle voters validator aggregate prevote o k body
swagger:model GetOracleVotersValidatorAggregatePrevoteOKBody
*/
type GetOracleVotersValidatorAggregatePrevoteOKBody struct {

	// hash
	// Example: 061bf1e27dfff121f40c826e593c8a28ec299a02
	Hash string `json:"hash,omitempty"`

	// submit block
	// Example: 1
	SubmitBlock float64 `json:"submit_block,omitempty"`

	// bech32 encoded address
	// Example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
	Voter string `json:"voter,omitempty"`
}

// Validate validates this get oracle voters validator aggregate prevote o k body
func (o *GetOracleVotersValidatorAggregatePrevoteOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get oracle voters validator aggregate prevote o k body based on context it is used
func (o *GetOracleVotersValidatorAggregatePrevoteOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOracleVotersValidatorAggregatePrevoteOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOracleVotersValidatorAggregatePrevoteOKBody) UnmarshalBinary(b []byte) error {
	var res GetOracleVotersValidatorAggregatePrevoteOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
