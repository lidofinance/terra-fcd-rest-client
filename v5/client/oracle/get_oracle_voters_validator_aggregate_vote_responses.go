// Code generated by go-swagger; DO NOT EDIT.

package oracle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetOracleVotersValidatorAggregateVoteReader is a Reader for the GetOracleVotersValidatorAggregateVote structure.
type GetOracleVotersValidatorAggregateVoteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOracleVotersValidatorAggregateVoteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOracleVotersValidatorAggregateVoteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOracleVotersValidatorAggregateVoteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOracleVotersValidatorAggregateVoteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOracleVotersValidatorAggregateVoteOK creates a GetOracleVotersValidatorAggregateVoteOK with default headers values
func NewGetOracleVotersValidatorAggregateVoteOK() *GetOracleVotersValidatorAggregateVoteOK {
	return &GetOracleVotersValidatorAggregateVoteOK{}
}

/* GetOracleVotersValidatorAggregateVoteOK describes a response with status code 200, with default header values.

OK
*/
type GetOracleVotersValidatorAggregateVoteOK struct {
	Payload *GetOracleVotersValidatorAggregateVoteOKBody
}

func (o *GetOracleVotersValidatorAggregateVoteOK) Error() string {
	return fmt.Sprintf("[GET /oracle/voters/{validator}/aggregate_vote][%d] getOracleVotersValidatorAggregateVoteOK  %+v", 200, o.Payload)
}
func (o *GetOracleVotersValidatorAggregateVoteOK) GetPayload() *GetOracleVotersValidatorAggregateVoteOKBody {
	return o.Payload
}

func (o *GetOracleVotersValidatorAggregateVoteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetOracleVotersValidatorAggregateVoteOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOracleVotersValidatorAggregateVoteBadRequest creates a GetOracleVotersValidatorAggregateVoteBadRequest with default headers values
func NewGetOracleVotersValidatorAggregateVoteBadRequest() *GetOracleVotersValidatorAggregateVoteBadRequest {
	return &GetOracleVotersValidatorAggregateVoteBadRequest{}
}

/* GetOracleVotersValidatorAggregateVoteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetOracleVotersValidatorAggregateVoteBadRequest struct {
}

func (o *GetOracleVotersValidatorAggregateVoteBadRequest) Error() string {
	return fmt.Sprintf("[GET /oracle/voters/{validator}/aggregate_vote][%d] getOracleVotersValidatorAggregateVoteBadRequest ", 400)
}

func (o *GetOracleVotersValidatorAggregateVoteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOracleVotersValidatorAggregateVoteInternalServerError creates a GetOracleVotersValidatorAggregateVoteInternalServerError with default headers values
func NewGetOracleVotersValidatorAggregateVoteInternalServerError() *GetOracleVotersValidatorAggregateVoteInternalServerError {
	return &GetOracleVotersValidatorAggregateVoteInternalServerError{}
}

/* GetOracleVotersValidatorAggregateVoteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOracleVotersValidatorAggregateVoteInternalServerError struct {
}

func (o *GetOracleVotersValidatorAggregateVoteInternalServerError) Error() string {
	return fmt.Sprintf("[GET /oracle/voters/{validator}/aggregate_vote][%d] getOracleVotersValidatorAggregateVoteInternalServerError ", 500)
}

func (o *GetOracleVotersValidatorAggregateVoteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetOracleVotersValidatorAggregateVoteOKBody get oracle voters validator aggregate vote o k body
swagger:model GetOracleVotersValidatorAggregateVoteOKBody
*/
type GetOracleVotersValidatorAggregateVoteOKBody struct {

	// exchange rates
	ExchangeRates []*GetOracleVotersValidatorAggregateVoteOKBodyExchangeRatesItems0 `json:"exchange_rates"`

	// bech32 encoded address
	// Example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
	Voter string `json:"voter,omitempty"`
}

// Validate validates this get oracle voters validator aggregate vote o k body
func (o *GetOracleVotersValidatorAggregateVoteOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExchangeRates(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOracleVotersValidatorAggregateVoteOKBody) validateExchangeRates(formats strfmt.Registry) error {
	if swag.IsZero(o.ExchangeRates) { // not required
		return nil
	}

	for i := 0; i < len(o.ExchangeRates); i++ {
		if swag.IsZero(o.ExchangeRates[i]) { // not required
			continue
		}

		if o.ExchangeRates[i] != nil {
			if err := o.ExchangeRates[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOracleVotersValidatorAggregateVoteOK" + "." + "exchange_rates" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOracleVotersValidatorAggregateVoteOK" + "." + "exchange_rates" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get oracle voters validator aggregate vote o k body based on the context it is used
func (o *GetOracleVotersValidatorAggregateVoteOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateExchangeRates(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOracleVotersValidatorAggregateVoteOKBody) contextValidateExchangeRates(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.ExchangeRates); i++ {

		if o.ExchangeRates[i] != nil {
			if err := o.ExchangeRates[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOracleVotersValidatorAggregateVoteOK" + "." + "exchange_rates" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOracleVotersValidatorAggregateVoteOK" + "." + "exchange_rates" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOracleVotersValidatorAggregateVoteOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOracleVotersValidatorAggregateVoteOKBody) UnmarshalBinary(b []byte) error {
	var res GetOracleVotersValidatorAggregateVoteOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetOracleVotersValidatorAggregateVoteOKBodyExchangeRatesItems0 get oracle voters validator aggregate vote o k body exchange rates items0
swagger:model GetOracleVotersValidatorAggregateVoteOKBodyExchangeRatesItems0
*/
type GetOracleVotersValidatorAggregateVoteOKBodyExchangeRatesItems0 struct {

	// amount
	// Example: 50.000
	Amount string `json:"amount,omitempty"`

	// denom
	// Example: ukrw
	Denom string `json:"denom,omitempty"`
}

// Validate validates this get oracle voters validator aggregate vote o k body exchange rates items0
func (o *GetOracleVotersValidatorAggregateVoteOKBodyExchangeRatesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get oracle voters validator aggregate vote o k body exchange rates items0 based on context it is used
func (o *GetOracleVotersValidatorAggregateVoteOKBodyExchangeRatesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOracleVotersValidatorAggregateVoteOKBodyExchangeRatesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOracleVotersValidatorAggregateVoteOKBodyExchangeRatesItems0) UnmarshalBinary(b []byte) error {
	var res GetOracleVotersValidatorAggregateVoteOKBodyExchangeRatesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
