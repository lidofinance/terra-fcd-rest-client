// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDenomMetadataParams creates a new DenomMetadataParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDenomMetadataParams() *DenomMetadataParams {
	return &DenomMetadataParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDenomMetadataParamsWithTimeout creates a new DenomMetadataParams object
// with the ability to set a timeout on a request.
func NewDenomMetadataParamsWithTimeout(timeout time.Duration) *DenomMetadataParams {
	return &DenomMetadataParams{
		timeout: timeout,
	}
}

// NewDenomMetadataParamsWithContext creates a new DenomMetadataParams object
// with the ability to set a context for a request.
func NewDenomMetadataParamsWithContext(ctx context.Context) *DenomMetadataParams {
	return &DenomMetadataParams{
		Context: ctx,
	}
}

// NewDenomMetadataParamsWithHTTPClient creates a new DenomMetadataParams object
// with the ability to set a custom HTTPClient for a request.
func NewDenomMetadataParamsWithHTTPClient(client *http.Client) *DenomMetadataParams {
	return &DenomMetadataParams{
		HTTPClient: client,
	}
}

/* DenomMetadataParams contains all the parameters to send to the API endpoint
   for the denom metadata operation.

   Typically these are written to a http.Request.
*/
type DenomMetadataParams struct {

	/* Denom.

	   denom is the coin denom to query the metadata for.
	*/
	Denom string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the denom metadata params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DenomMetadataParams) WithDefaults() *DenomMetadataParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the denom metadata params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DenomMetadataParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the denom metadata params
func (o *DenomMetadataParams) WithTimeout(timeout time.Duration) *DenomMetadataParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the denom metadata params
func (o *DenomMetadataParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the denom metadata params
func (o *DenomMetadataParams) WithContext(ctx context.Context) *DenomMetadataParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the denom metadata params
func (o *DenomMetadataParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the denom metadata params
func (o *DenomMetadataParams) WithHTTPClient(client *http.Client) *DenomMetadataParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the denom metadata params
func (o *DenomMetadataParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDenom adds the denom to the denom metadata params
func (o *DenomMetadataParams) WithDenom(denom string) *DenomMetadataParams {
	o.SetDenom(denom)
	return o
}

// SetDenom adds the denom to the denom metadata params
func (o *DenomMetadataParams) SetDenom(denom string) {
	o.Denom = denom
}

// WriteToRequest writes these params to a swagger request
func (o *DenomMetadataParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param denom
	if err := r.SetPathParam("denom", o.Denom); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
