// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ActivesReader is a Reader for the Actives structure.
type ActivesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ActivesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewActivesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewActivesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewActivesOK creates a ActivesOK with default headers values
func NewActivesOK() *ActivesOK {
	return &ActivesOK{}
}

/* ActivesOK describes a response with status code 200, with default header values.

A successful response.
*/
type ActivesOK struct {
	Payload *ActivesOKBody
}

func (o *ActivesOK) Error() string {
	return fmt.Sprintf("[GET /terra/oracle/v1beta1/denoms/actives][%d] activesOK  %+v", 200, o.Payload)
}
func (o *ActivesOK) GetPayload() *ActivesOKBody {
	return o.Payload
}

func (o *ActivesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ActivesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActivesDefault creates a ActivesDefault with default headers values
func NewActivesDefault(code int) *ActivesDefault {
	return &ActivesDefault{
		_statusCode: code,
	}
}

/* ActivesDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type ActivesDefault struct {
	_statusCode int

	Payload *ActivesDefaultBody
}

// Code gets the status code for the actives default response
func (o *ActivesDefault) Code() int {
	return o._statusCode
}

func (o *ActivesDefault) Error() string {
	return fmt.Sprintf("[GET /terra/oracle/v1beta1/denoms/actives][%d] Actives default  %+v", o._statusCode, o.Payload)
}
func (o *ActivesDefault) GetPayload() *ActivesDefaultBody {
	return o.Payload
}

func (o *ActivesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ActivesDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ActivesDefaultBody actives default body
swagger:model ActivesDefaultBody
*/
type ActivesDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*ActivesDefaultBodyDetailsItems0 `json:"details"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this actives default body
func (o *ActivesDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ActivesDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Actives default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("Actives default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this actives default body based on the context it is used
func (o *ActivesDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ActivesDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Actives default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("Actives default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ActivesDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ActivesDefaultBody) UnmarshalBinary(b []byte) error {
	var res ActivesDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ActivesDefaultBodyDetailsItems0 actives default body details items0
swagger:model ActivesDefaultBodyDetailsItems0
*/
type ActivesDefaultBodyDetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this actives default body details items0
func (o *ActivesDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this actives default body details items0 based on context it is used
func (o *ActivesDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ActivesDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ActivesDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res ActivesDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ActivesOKBody QueryActivesResponse is response type for the
// Query/Actives RPC method.
swagger:model ActivesOKBody
*/
type ActivesOKBody struct {

	// actives defines a list of the denomination which oracle prices aggreed upon.
	Actives []string `json:"actives"`
}

// Validate validates this actives o k body
func (o *ActivesOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this actives o k body based on context it is used
func (o *ActivesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ActivesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ActivesOKBody) UnmarshalBinary(b []byte) error {
	var res ActivesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
