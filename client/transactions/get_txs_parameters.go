// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetTxsParams creates a new GetTxsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetTxsParams() *GetTxsParams {
	return &GetTxsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetTxsParamsWithTimeout creates a new GetTxsParams object
// with the ability to set a timeout on a request.
func NewGetTxsParamsWithTimeout(timeout time.Duration) *GetTxsParams {
	return &GetTxsParams{
		timeout: timeout,
	}
}

// NewGetTxsParamsWithContext creates a new GetTxsParams object
// with the ability to set a context for a request.
func NewGetTxsParamsWithContext(ctx context.Context) *GetTxsParams {
	return &GetTxsParams{
		Context: ctx,
	}
}

// NewGetTxsParamsWithHTTPClient creates a new GetTxsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetTxsParamsWithHTTPClient(client *http.Client) *GetTxsParams {
	return &GetTxsParams{
		HTTPClient: client,
	}
}

/* GetTxsParams contains all the parameters to send to the API endpoint
   for the get txs operation.

   Typically these are written to a http.Request.
*/
type GetTxsParams struct {

	/* Limit.

	   Maximum number of items per page
	*/
	Limit *int64

	/* MessageAction.

	   transaction events such as 'message.action=send' which results in the following endpoint: 'GET /txs?message.action=send'. note that each module documents its own events. look for xx_events.md in the corresponding cosmos-sdk/docs/spec directory
	*/
	MessageAction *string

	/* MessageSender.

	   transaction events with sender: 'GET /txs?message.action=send&message.sender=terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv'
	*/
	MessageSender *string

	/* Page.

	   Page number
	*/
	Page *int64

	/* TxMaxheight.

	   transactions on blocks with height less than or equal this value
	*/
	TxMaxheight *int64

	/* TxMinheight.

	   transactions on blocks with height greater or equal this value
	*/
	TxMinheight *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get txs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTxsParams) WithDefaults() *GetTxsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get txs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTxsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get txs params
func (o *GetTxsParams) WithTimeout(timeout time.Duration) *GetTxsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get txs params
func (o *GetTxsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get txs params
func (o *GetTxsParams) WithContext(ctx context.Context) *GetTxsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get txs params
func (o *GetTxsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get txs params
func (o *GetTxsParams) WithHTTPClient(client *http.Client) *GetTxsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get txs params
func (o *GetTxsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the get txs params
func (o *GetTxsParams) WithLimit(limit *int64) *GetTxsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get txs params
func (o *GetTxsParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithMessageAction adds the messageAction to the get txs params
func (o *GetTxsParams) WithMessageAction(messageAction *string) *GetTxsParams {
	o.SetMessageAction(messageAction)
	return o
}

// SetMessageAction adds the messageAction to the get txs params
func (o *GetTxsParams) SetMessageAction(messageAction *string) {
	o.MessageAction = messageAction
}

// WithMessageSender adds the messageSender to the get txs params
func (o *GetTxsParams) WithMessageSender(messageSender *string) *GetTxsParams {
	o.SetMessageSender(messageSender)
	return o
}

// SetMessageSender adds the messageSender to the get txs params
func (o *GetTxsParams) SetMessageSender(messageSender *string) {
	o.MessageSender = messageSender
}

// WithPage adds the page to the get txs params
func (o *GetTxsParams) WithPage(page *int64) *GetTxsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get txs params
func (o *GetTxsParams) SetPage(page *int64) {
	o.Page = page
}

// WithTxMaxheight adds the txMaxheight to the get txs params
func (o *GetTxsParams) WithTxMaxheight(txMaxheight *int64) *GetTxsParams {
	o.SetTxMaxheight(txMaxheight)
	return o
}

// SetTxMaxheight adds the txMaxheight to the get txs params
func (o *GetTxsParams) SetTxMaxheight(txMaxheight *int64) {
	o.TxMaxheight = txMaxheight
}

// WithTxMinheight adds the txMinheight to the get txs params
func (o *GetTxsParams) WithTxMinheight(txMinheight *int64) *GetTxsParams {
	o.SetTxMinheight(txMinheight)
	return o
}

// SetTxMinheight adds the txMinheight to the get txs params
func (o *GetTxsParams) SetTxMinheight(txMinheight *int64) {
	o.TxMinheight = txMinheight
}

// WriteToRequest writes these params to a swagger request
func (o *GetTxsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.MessageAction != nil {

		// query param message.action
		var qrMessageAction string

		if o.MessageAction != nil {
			qrMessageAction = *o.MessageAction
		}
		qMessageAction := qrMessageAction
		if qMessageAction != "" {

			if err := r.SetQueryParam("message.action", qMessageAction); err != nil {
				return err
			}
		}
	}

	if o.MessageSender != nil {

		// query param message.sender
		var qrMessageSender string

		if o.MessageSender != nil {
			qrMessageSender = *o.MessageSender
		}
		qMessageSender := qrMessageSender
		if qMessageSender != "" {

			if err := r.SetQueryParam("message.sender", qMessageSender); err != nil {
				return err
			}
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage int64

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.TxMaxheight != nil {

		// query param tx.maxheight
		var qrTxMaxheight int64

		if o.TxMaxheight != nil {
			qrTxMaxheight = *o.TxMaxheight
		}
		qTxMaxheight := swag.FormatInt64(qrTxMaxheight)
		if qTxMaxheight != "" {

			if err := r.SetQueryParam("tx.maxheight", qTxMaxheight); err != nil {
				return err
			}
		}
	}

	if o.TxMinheight != nil {

		// query param tx.minheight
		var qrTxMinheight int64

		if o.TxMinheight != nil {
			qrTxMinheight = *o.TxMinheight
		}
		qTxMinheight := swag.FormatInt64(qrTxMinheight)
		if qTxMinheight != "" {

			if err := r.SetQueryParam("tx.minheight", qTxMinheight); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
