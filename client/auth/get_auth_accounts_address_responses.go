// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetAuthAccountsAddressReader is a Reader for the GetAuthAccountsAddress structure.
type GetAuthAccountsAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthAccountsAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthAccountsAddressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetAuthAccountsAddressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuthAccountsAddressOK creates a GetAuthAccountsAddressOK with default headers values
func NewGetAuthAccountsAddressOK() *GetAuthAccountsAddressOK {
	return &GetAuthAccountsAddressOK{}
}

/* GetAuthAccountsAddressOK describes a response with status code 200, with default header values.

Account information on the blockchain
*/
type GetAuthAccountsAddressOK struct {
	Payload *GetAuthAccountsAddressOKBody
}

func (o *GetAuthAccountsAddressOK) Error() string {
	return fmt.Sprintf("[GET /auth/accounts/{address}][%d] getAuthAccountsAddressOK  %+v", 200, o.Payload)
}
func (o *GetAuthAccountsAddressOK) GetPayload() *GetAuthAccountsAddressOKBody {
	return o.Payload
}

func (o *GetAuthAccountsAddressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAuthAccountsAddressOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthAccountsAddressInternalServerError creates a GetAuthAccountsAddressInternalServerError with default headers values
func NewGetAuthAccountsAddressInternalServerError() *GetAuthAccountsAddressInternalServerError {
	return &GetAuthAccountsAddressInternalServerError{}
}

/* GetAuthAccountsAddressInternalServerError describes a response with status code 500, with default header values.

Server internal error
*/
type GetAuthAccountsAddressInternalServerError struct {
}

func (o *GetAuthAccountsAddressInternalServerError) Error() string {
	return fmt.Sprintf("[GET /auth/accounts/{address}][%d] getAuthAccountsAddressInternalServerError ", 500)
}

func (o *GetAuthAccountsAddressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetAuthAccountsAddressOKBody get auth accounts address o k body
swagger:model GetAuthAccountsAddressOKBody
*/
type GetAuthAccountsAddressOKBody struct {

	// account
	Account *GetAuthAccountsAddressOKBodyAccount `json:"Account,omitempty"`

	// lazy graded vesting account
	LazyGradedVestingAccount *GetAuthAccountsAddressOKBodyLazyGradedVestingAccount `json:"LazyGradedVestingAccount,omitempty"`
}

// Validate validates this get auth accounts address o k body
func (o *GetAuthAccountsAddressOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLazyGradedVestingAccount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthAccountsAddressOKBody) validateAccount(formats strfmt.Registry) error {
	if swag.IsZero(o.Account) { // not required
		return nil
	}

	if o.Account != nil {
		if err := o.Account.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthAccountsAddressOK" + "." + "Account")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAuthAccountsAddressOK" + "." + "Account")
			}
			return err
		}
	}

	return nil
}

func (o *GetAuthAccountsAddressOKBody) validateLazyGradedVestingAccount(formats strfmt.Registry) error {
	if swag.IsZero(o.LazyGradedVestingAccount) { // not required
		return nil
	}

	if o.LazyGradedVestingAccount != nil {
		if err := o.LazyGradedVestingAccount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get auth accounts address o k body based on the context it is used
func (o *GetAuthAccountsAddressOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAccount(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateLazyGradedVestingAccount(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthAccountsAddressOKBody) contextValidateAccount(ctx context.Context, formats strfmt.Registry) error {

	if o.Account != nil {
		if err := o.Account.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthAccountsAddressOK" + "." + "Account")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAuthAccountsAddressOK" + "." + "Account")
			}
			return err
		}
	}

	return nil
}

func (o *GetAuthAccountsAddressOKBody) contextValidateLazyGradedVestingAccount(ctx context.Context, formats strfmt.Registry) error {

	if o.LazyGradedVestingAccount != nil {
		if err := o.LazyGradedVestingAccount.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBody) UnmarshalBinary(b []byte) error {
	var res GetAuthAccountsAddressOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAuthAccountsAddressOKBodyAccount get auth accounts address o k body account
swagger:model GetAuthAccountsAddressOKBodyAccount
*/
type GetAuthAccountsAddressOKBodyAccount struct {

	// type
	// Example: core/Account
	Type string `json:"type,omitempty"`

	// value
	Value *GetAuthAccountsAddressOKBodyAccountValue `json:"value,omitempty"`
}

// Validate validates this get auth accounts address o k body account
func (o *GetAuthAccountsAddressOKBodyAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthAccountsAddressOKBodyAccount) validateValue(formats strfmt.Registry) error {
	if swag.IsZero(o.Value) { // not required
		return nil
	}

	if o.Value != nil {
		if err := o.Value.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthAccountsAddressOK" + "." + "Account" + "." + "value")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAuthAccountsAddressOK" + "." + "Account" + "." + "value")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get auth accounts address o k body account based on the context it is used
func (o *GetAuthAccountsAddressOKBodyAccount) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateValue(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthAccountsAddressOKBodyAccount) contextValidateValue(ctx context.Context, formats strfmt.Registry) error {

	if o.Value != nil {
		if err := o.Value.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthAccountsAddressOK" + "." + "Account" + "." + "value")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAuthAccountsAddressOK" + "." + "Account" + "." + "value")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyAccount) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyAccount) UnmarshalBinary(b []byte) error {
	var res GetAuthAccountsAddressOKBodyAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAuthAccountsAddressOKBodyAccountValue get auth accounts address o k body account value
swagger:model GetAuthAccountsAddressOKBodyAccountValue
*/
type GetAuthAccountsAddressOKBodyAccountValue struct {

	// account number
	AccountNumber string `json:"account_number,omitempty"`

	// address
	Address string `json:"address,omitempty"`

	// public key
	PublicKey string `json:"public_key,omitempty"`

	// sequence
	Sequence string `json:"sequence,omitempty"`
}

// Validate validates this get auth accounts address o k body account value
func (o *GetAuthAccountsAddressOKBodyAccountValue) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get auth accounts address o k body account value based on context it is used
func (o *GetAuthAccountsAddressOKBodyAccountValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyAccountValue) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyAccountValue) UnmarshalBinary(b []byte) error {
	var res GetAuthAccountsAddressOKBodyAccountValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAuthAccountsAddressOKBodyLazyGradedVestingAccount get auth accounts address o k body lazy graded vesting account
swagger:model GetAuthAccountsAddressOKBodyLazyGradedVestingAccount
*/
type GetAuthAccountsAddressOKBodyLazyGradedVestingAccount struct {

	// type
	// Example: core/LazyGradedVestingAccount
	Type string `json:"type,omitempty"`

	// value
	Value *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue `json:"value,omitempty"`
}

// Validate validates this get auth accounts address o k body lazy graded vesting account
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccount) validateValue(formats strfmt.Registry) error {
	if swag.IsZero(o.Value) { // not required
		return nil
	}

	if o.Value != nil {
		if err := o.Value.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get auth accounts address o k body lazy graded vesting account based on the context it is used
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccount) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateValue(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccount) contextValidateValue(ctx context.Context, formats strfmt.Registry) error {

	if o.Value != nil {
		if err := o.Value.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccount) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccount) UnmarshalBinary(b []byte) error {
	var res GetAuthAccountsAddressOKBodyLazyGradedVestingAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue get auth accounts address o k body lazy graded vesting account value
swagger:model GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue
*/
type GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue struct {

	// base vesting account
	BaseVestingAccount *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount `json:"BaseVestingAccount,omitempty"`

	// vesting schedules
	VestingSchedules []*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0 `json:"vesting_schedules"`
}

// Validate validates this get auth accounts address o k body lazy graded vesting account value
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBaseVestingAccount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVestingSchedules(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue) validateBaseVestingAccount(formats strfmt.Registry) error {
	if swag.IsZero(o.BaseVestingAccount) { // not required
		return nil
	}

	if o.BaseVestingAccount != nil {
		if err := o.BaseVestingAccount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount")
			}
			return err
		}
	}

	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue) validateVestingSchedules(formats strfmt.Registry) error {
	if swag.IsZero(o.VestingSchedules) { // not required
		return nil
	}

	for i := 0; i < len(o.VestingSchedules); i++ {
		if swag.IsZero(o.VestingSchedules[i]) { // not required
			continue
		}

		if o.VestingSchedules[i] != nil {
			if err := o.VestingSchedules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "vesting_schedules" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "vesting_schedules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get auth accounts address o k body lazy graded vesting account value based on the context it is used
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateBaseVestingAccount(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateVestingSchedules(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue) contextValidateBaseVestingAccount(ctx context.Context, formats strfmt.Registry) error {

	if o.BaseVestingAccount != nil {
		if err := o.BaseVestingAccount.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount")
			}
			return err
		}
	}

	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue) contextValidateVestingSchedules(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.VestingSchedules); i++ {

		if o.VestingSchedules[i] != nil {
			if err := o.VestingSchedules[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "vesting_schedules" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "vesting_schedules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue) UnmarshalBinary(b []byte) error {
	var res GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount get auth accounts address o k body lazy graded vesting account value base vesting account
swagger:model GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount
*/
type GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount struct {

	// base account
	BaseAccount *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountBaseAccount `json:"BaseAccount,omitempty"`

	// delegated free
	DelegatedFree []*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedFreeItems0 `json:"delegated_free"`

	// delegated vesting
	DelegatedVesting []*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedVestingItems0 `json:"delegated_vesting"`

	// end time
	// Example: 0
	EndTime string `json:"end_time,omitempty"`

	// original vesting
	OriginalVesting []*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountOriginalVestingItems0 `json:"original_vesting"`
}

// Validate validates this get auth accounts address o k body lazy graded vesting account value base vesting account
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBaseAccount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDelegatedFree(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDelegatedVesting(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOriginalVesting(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount) validateBaseAccount(formats strfmt.Registry) error {
	if swag.IsZero(o.BaseAccount) { // not required
		return nil
	}

	if o.BaseAccount != nil {
		if err := o.BaseAccount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "BaseAccount")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "BaseAccount")
			}
			return err
		}
	}

	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount) validateDelegatedFree(formats strfmt.Registry) error {
	if swag.IsZero(o.DelegatedFree) { // not required
		return nil
	}

	for i := 0; i < len(o.DelegatedFree); i++ {
		if swag.IsZero(o.DelegatedFree[i]) { // not required
			continue
		}

		if o.DelegatedFree[i] != nil {
			if err := o.DelegatedFree[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "delegated_free" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "delegated_free" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount) validateDelegatedVesting(formats strfmt.Registry) error {
	if swag.IsZero(o.DelegatedVesting) { // not required
		return nil
	}

	for i := 0; i < len(o.DelegatedVesting); i++ {
		if swag.IsZero(o.DelegatedVesting[i]) { // not required
			continue
		}

		if o.DelegatedVesting[i] != nil {
			if err := o.DelegatedVesting[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "delegated_vesting" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "delegated_vesting" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount) validateOriginalVesting(formats strfmt.Registry) error {
	if swag.IsZero(o.OriginalVesting) { // not required
		return nil
	}

	for i := 0; i < len(o.OriginalVesting); i++ {
		if swag.IsZero(o.OriginalVesting[i]) { // not required
			continue
		}

		if o.OriginalVesting[i] != nil {
			if err := o.OriginalVesting[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "original_vesting" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "original_vesting" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get auth accounts address o k body lazy graded vesting account value base vesting account based on the context it is used
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateBaseAccount(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateDelegatedFree(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateDelegatedVesting(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateOriginalVesting(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount) contextValidateBaseAccount(ctx context.Context, formats strfmt.Registry) error {

	if o.BaseAccount != nil {
		if err := o.BaseAccount.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "BaseAccount")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "BaseAccount")
			}
			return err
		}
	}

	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount) contextValidateDelegatedFree(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.DelegatedFree); i++ {

		if o.DelegatedFree[i] != nil {
			if err := o.DelegatedFree[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "delegated_free" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "delegated_free" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount) contextValidateDelegatedVesting(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.DelegatedVesting); i++ {

		if o.DelegatedVesting[i] != nil {
			if err := o.DelegatedVesting[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "delegated_vesting" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "delegated_vesting" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount) contextValidateOriginalVesting(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.OriginalVesting); i++ {

		if o.OriginalVesting[i] != nil {
			if err := o.OriginalVesting[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "original_vesting" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getAuthAccountsAddressOK" + "." + "LazyGradedVestingAccount" + "." + "value" + "." + "BaseVestingAccount" + "." + "original_vesting" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount) UnmarshalBinary(b []byte) error {
	var res GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountBaseAccount get auth accounts address o k body lazy graded vesting account value base vesting account base account
swagger:model GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountBaseAccount
*/
type GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountBaseAccount struct {

	// account number
	AccountNumber string `json:"account_number,omitempty"`

	// address
	Address string `json:"address,omitempty"`

	// public key
	PublicKey string `json:"public_key,omitempty"`

	// sequence
	Sequence string `json:"sequence,omitempty"`
}

// Validate validates this get auth accounts address o k body lazy graded vesting account value base vesting account base account
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountBaseAccount) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get auth accounts address o k body lazy graded vesting account value base vesting account base account based on context it is used
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountBaseAccount) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountBaseAccount) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountBaseAccount) UnmarshalBinary(b []byte) error {
	var res GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountBaseAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedFreeItems0 get auth accounts address o k body lazy graded vesting account value base vesting account delegated free items0
swagger:model GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedFreeItems0
*/
type GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedFreeItems0 struct {

	// amount
	// Example: 50
	Amount string `json:"amount,omitempty"`

	// denom
	// Example: uluna
	Denom string `json:"denom,omitempty"`
}

// Validate validates this get auth accounts address o k body lazy graded vesting account value base vesting account delegated free items0
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedFreeItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get auth accounts address o k body lazy graded vesting account value base vesting account delegated free items0 based on context it is used
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedFreeItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedFreeItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedFreeItems0) UnmarshalBinary(b []byte) error {
	var res GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedFreeItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedVestingItems0 get auth accounts address o k body lazy graded vesting account value base vesting account delegated vesting items0
swagger:model GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedVestingItems0
*/
type GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedVestingItems0 struct {

	// amount
	// Example: 50
	Amount string `json:"amount,omitempty"`

	// denom
	// Example: uluna
	Denom string `json:"denom,omitempty"`
}

// Validate validates this get auth accounts address o k body lazy graded vesting account value base vesting account delegated vesting items0
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedVestingItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get auth accounts address o k body lazy graded vesting account value base vesting account delegated vesting items0 based on context it is used
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedVestingItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedVestingItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedVestingItems0) UnmarshalBinary(b []byte) error {
	var res GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountDelegatedVestingItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountOriginalVestingItems0 get auth accounts address o k body lazy graded vesting account value base vesting account original vesting items0
swagger:model GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountOriginalVestingItems0
*/
type GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountOriginalVestingItems0 struct {

	// amount
	// Example: 50
	Amount string `json:"amount,omitempty"`

	// denom
	// Example: uluna
	Denom string `json:"denom,omitempty"`
}

// Validate validates this get auth accounts address o k body lazy graded vesting account value base vesting account original vesting items0
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountOriginalVestingItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get auth accounts address o k body lazy graded vesting account value base vesting account original vesting items0 based on context it is used
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountOriginalVestingItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountOriginalVestingItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountOriginalVestingItems0) UnmarshalBinary(b []byte) error {
	var res GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueBaseVestingAccountOriginalVestingItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0 get auth accounts address o k body lazy graded vesting account value vesting schedules items0
swagger:model GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0
*/
type GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0 struct {

	// denom
	// Example: usdr
	Denom string `json:"denom,omitempty"`

	// lazy schedules
	LazySchedules []*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0LazySchedulesItems0 `json:"lazy_schedules"`
}

// Validate validates this get auth accounts address o k body lazy graded vesting account value vesting schedules items0
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLazySchedules(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0) validateLazySchedules(formats strfmt.Registry) error {
	if swag.IsZero(o.LazySchedules) { // not required
		return nil
	}

	for i := 0; i < len(o.LazySchedules); i++ {
		if swag.IsZero(o.LazySchedules[i]) { // not required
			continue
		}

		if o.LazySchedules[i] != nil {
			if err := o.LazySchedules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("lazy_schedules" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("lazy_schedules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get auth accounts address o k body lazy graded vesting account value vesting schedules items0 based on the context it is used
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLazySchedules(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0) contextValidateLazySchedules(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.LazySchedules); i++ {

		if o.LazySchedules[i] != nil {
			if err := o.LazySchedules[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("lazy_schedules" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("lazy_schedules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0) UnmarshalBinary(b []byte) error {
	var res GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0LazySchedulesItems0 get auth accounts address o k body lazy graded vesting account value vesting schedules items0 lazy schedules items0
swagger:model GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0LazySchedulesItems0
*/
type GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0LazySchedulesItems0 struct {

	// end time
	// Example: 1556085600
	EndTime string `json:"end_time,omitempty"`

	// ratio
	// Example: 0.100000000000000000
	Ratio string `json:"ratio,omitempty"`

	// start time
	// Example: 1556085600
	StartTime string `json:"start_time,omitempty"`
}

// Validate validates this get auth accounts address o k body lazy graded vesting account value vesting schedules items0 lazy schedules items0
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0LazySchedulesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get auth accounts address o k body lazy graded vesting account value vesting schedules items0 lazy schedules items0 based on context it is used
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0LazySchedulesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0LazySchedulesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0LazySchedulesItems0) UnmarshalBinary(b []byte) error {
	var res GetAuthAccountsAddressOKBodyLazyGradedVestingAccountValueVestingSchedulesItems0LazySchedulesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
