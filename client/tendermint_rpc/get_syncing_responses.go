// Code generated by go-swagger; DO NOT EDIT.

package tendermint_rpc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetSyncingReader is a Reader for the GetSyncing structure.
type GetSyncingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSyncingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSyncingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetSyncingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSyncingOK creates a GetSyncingOK with default headers values
func NewGetSyncingOK() *GetSyncingOK {
	return &GetSyncingOK{}
}

/* GetSyncingOK describes a response with status code 200, with default header values.

Node syncing status
*/
type GetSyncingOK struct {
	Payload *GetSyncingOKBody
}

func (o *GetSyncingOK) Error() string {
	return fmt.Sprintf("[GET /syncing][%d] getSyncingOK  %+v", 200, o.Payload)
}
func (o *GetSyncingOK) GetPayload() *GetSyncingOKBody {
	return o.Payload
}

func (o *GetSyncingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetSyncingOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSyncingInternalServerError creates a GetSyncingInternalServerError with default headers values
func NewGetSyncingInternalServerError() *GetSyncingInternalServerError {
	return &GetSyncingInternalServerError{}
}

/* GetSyncingInternalServerError describes a response with status code 500, with default header values.

Server internal error
*/
type GetSyncingInternalServerError struct {
}

func (o *GetSyncingInternalServerError) Error() string {
	return fmt.Sprintf("[GET /syncing][%d] getSyncingInternalServerError ", 500)
}

func (o *GetSyncingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetSyncingOKBody get syncing o k body
swagger:model GetSyncingOKBody
*/
type GetSyncingOKBody struct {

	// syncing
	Syncing bool `json:"syncing,omitempty"`
}

// Validate validates this get syncing o k body
func (o *GetSyncingOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get syncing o k body based on context it is used
func (o *GetSyncingOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetSyncingOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSyncingOKBody) UnmarshalBinary(b []byte) error {
	var res GetSyncingOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
