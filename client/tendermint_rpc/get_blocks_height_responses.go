// Code generated by go-swagger; DO NOT EDIT.

package tendermint_rpc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetBlocksHeightReader is a Reader for the GetBlocksHeight structure.
type GetBlocksHeightReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBlocksHeightReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBlocksHeightOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBlocksHeightBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBlocksHeightNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBlocksHeightInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBlocksHeightOK creates a GetBlocksHeightOK with default headers values
func NewGetBlocksHeightOK() *GetBlocksHeightOK {
	return &GetBlocksHeightOK{}
}

/* GetBlocksHeightOK describes a response with status code 200, with default header values.

The block at a specific height
*/
type GetBlocksHeightOK struct {
	Payload *GetBlocksHeightOKBody
}

func (o *GetBlocksHeightOK) Error() string {
	return fmt.Sprintf("[GET /blocks/{height}][%d] getBlocksHeightOK  %+v", 200, o.Payload)
}
func (o *GetBlocksHeightOK) GetPayload() *GetBlocksHeightOKBody {
	return o.Payload
}

func (o *GetBlocksHeightOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetBlocksHeightOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBlocksHeightBadRequest creates a GetBlocksHeightBadRequest with default headers values
func NewGetBlocksHeightBadRequest() *GetBlocksHeightBadRequest {
	return &GetBlocksHeightBadRequest{}
}

/* GetBlocksHeightBadRequest describes a response with status code 400, with default header values.

Invalid height
*/
type GetBlocksHeightBadRequest struct {
}

func (o *GetBlocksHeightBadRequest) Error() string {
	return fmt.Sprintf("[GET /blocks/{height}][%d] getBlocksHeightBadRequest ", 400)
}

func (o *GetBlocksHeightBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBlocksHeightNotFound creates a GetBlocksHeightNotFound with default headers values
func NewGetBlocksHeightNotFound() *GetBlocksHeightNotFound {
	return &GetBlocksHeightNotFound{}
}

/* GetBlocksHeightNotFound describes a response with status code 404, with default header values.

Request block height doesn't
*/
type GetBlocksHeightNotFound struct {
}

func (o *GetBlocksHeightNotFound) Error() string {
	return fmt.Sprintf("[GET /blocks/{height}][%d] getBlocksHeightNotFound ", 404)
}

func (o *GetBlocksHeightNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBlocksHeightInternalServerError creates a GetBlocksHeightInternalServerError with default headers values
func NewGetBlocksHeightInternalServerError() *GetBlocksHeightInternalServerError {
	return &GetBlocksHeightInternalServerError{}
}

/* GetBlocksHeightInternalServerError describes a response with status code 500, with default header values.

Server internal error
*/
type GetBlocksHeightInternalServerError struct {
}

func (o *GetBlocksHeightInternalServerError) Error() string {
	return fmt.Sprintf("[GET /blocks/{height}][%d] getBlocksHeightInternalServerError ", 500)
}

func (o *GetBlocksHeightInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetBlocksHeightOKBody get blocks height o k body
swagger:model GetBlocksHeightOKBody
*/
type GetBlocksHeightOKBody struct {

	// block
	Block *GetBlocksHeightOKBodyBlock `json:"block,omitempty"`

	// block meta
	BlockMeta *GetBlocksHeightOKBodyBlockMeta `json:"block_meta,omitempty"`
}

// Validate validates this get blocks height o k body
func (o *GetBlocksHeightOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBlock(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBlockMeta(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBody) validateBlock(formats strfmt.Registry) error {
	if swag.IsZero(o.Block) { // not required
		return nil
	}

	if o.Block != nil {
		if err := o.Block.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block")
			}
			return err
		}
	}

	return nil
}

func (o *GetBlocksHeightOKBody) validateBlockMeta(formats strfmt.Registry) error {
	if swag.IsZero(o.BlockMeta) { // not required
		return nil
	}

	if o.BlockMeta != nil {
		if err := o.BlockMeta.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get blocks height o k body based on the context it is used
func (o *GetBlocksHeightOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateBlock(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateBlockMeta(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBody) contextValidateBlock(ctx context.Context, formats strfmt.Registry) error {

	if o.Block != nil {
		if err := o.Block.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block")
			}
			return err
		}
	}

	return nil
}

func (o *GetBlocksHeightOKBody) contextValidateBlockMeta(ctx context.Context, formats strfmt.Registry) error {

	if o.BlockMeta != nil {
		if err := o.BlockMeta.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBody) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlock get blocks height o k body block
swagger:model GetBlocksHeightOKBodyBlock
*/
type GetBlocksHeightOKBodyBlock struct {

	// evidence
	Evidence []string `json:"evidence"`

	// header
	Header *GetBlocksHeightOKBodyBlockHeader `json:"header,omitempty"`

	// last commit
	LastCommit *GetBlocksHeightOKBodyBlockLastCommit `json:"last_commit,omitempty"`

	// txs
	Txs []string `json:"txs"`
}

// Validate validates this get blocks height o k body block
func (o *GetBlocksHeightOKBodyBlock) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHeader(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastCommit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlock) validateHeader(formats strfmt.Registry) error {
	if swag.IsZero(o.Header) { // not required
		return nil
	}

	if o.Header != nil {
		if err := o.Header.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header")
			}
			return err
		}
	}

	return nil
}

func (o *GetBlocksHeightOKBodyBlock) validateLastCommit(formats strfmt.Registry) error {
	if swag.IsZero(o.LastCommit) { // not required
		return nil
	}

	if o.LastCommit != nil {
		if err := o.LastCommit.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get blocks height o k body block based on the context it is used
func (o *GetBlocksHeightOKBodyBlock) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateHeader(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateLastCommit(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlock) contextValidateHeader(ctx context.Context, formats strfmt.Registry) error {

	if o.Header != nil {
		if err := o.Header.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header")
			}
			return err
		}
	}

	return nil
}

func (o *GetBlocksHeightOKBodyBlock) contextValidateLastCommit(ctx context.Context, formats strfmt.Registry) error {

	if o.LastCommit != nil {
		if err := o.LastCommit.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlock) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlock) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlock
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockHeader get blocks height o k body block header
swagger:model GetBlocksHeightOKBodyBlockHeader
*/
type GetBlocksHeightOKBodyBlockHeader struct {

	// app hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	AppHash string `json:"app_hash,omitempty"`

	// chain id
	// Example: columbus-5
	ChainID string `json:"chain_id,omitempty"`

	// consensus hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	ConsensusHash string `json:"consensus_hash,omitempty"`

	// data hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	DataHash string `json:"data_hash,omitempty"`

	// evidence hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	EvidenceHash string `json:"evidence_hash,omitempty"`

	// height
	// Example: 1
	Height float64 `json:"height,omitempty"`

	// last block id
	LastBlockID *GetBlocksHeightOKBodyBlockHeaderLastBlockID `json:"last_block_id,omitempty"`

	// last commit hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	LastCommitHash string `json:"last_commit_hash,omitempty"`

	// last results hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	LastResultsHash string `json:"last_results_hash,omitempty"`

	// next validators hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	NextValidatorsHash string `json:"next_validators_hash,omitempty"`

	// num txs
	// Example: 0
	NumTxs float64 `json:"num_txs,omitempty"`

	// bech32 encoded address
	// Example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
	ProposerAddress string `json:"proposer_address,omitempty"`

	// time
	// Example: 2017-12-30T05:53:09.287+01:00
	Time string `json:"time,omitempty"`

	// total txs
	// Example: 35
	TotalTxs float64 `json:"total_txs,omitempty"`

	// validators hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	ValidatorsHash string `json:"validators_hash,omitempty"`

	// version
	Version *GetBlocksHeightOKBodyBlockHeaderVersion `json:"version,omitempty"`
}

// Validate validates this get blocks height o k body block header
func (o *GetBlocksHeightOKBodyBlockHeader) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLastBlockID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockHeader) validateLastBlockID(formats strfmt.Registry) error {
	if swag.IsZero(o.LastBlockID) { // not required
		return nil
	}

	if o.LastBlockID != nil {
		if err := o.LastBlockID.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header" + "." + "last_block_id")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header" + "." + "last_block_id")
			}
			return err
		}
	}

	return nil
}

func (o *GetBlocksHeightOKBodyBlockHeader) validateVersion(formats strfmt.Registry) error {
	if swag.IsZero(o.Version) { // not required
		return nil
	}

	if o.Version != nil {
		if err := o.Version.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header" + "." + "version")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header" + "." + "version")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get blocks height o k body block header based on the context it is used
func (o *GetBlocksHeightOKBodyBlockHeader) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLastBlockID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateVersion(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockHeader) contextValidateLastBlockID(ctx context.Context, formats strfmt.Registry) error {

	if o.LastBlockID != nil {
		if err := o.LastBlockID.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header" + "." + "last_block_id")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header" + "." + "last_block_id")
			}
			return err
		}
	}

	return nil
}

func (o *GetBlocksHeightOKBodyBlockHeader) contextValidateVersion(ctx context.Context, formats strfmt.Registry) error {

	if o.Version != nil {
		if err := o.Version.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header" + "." + "version")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header" + "." + "version")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockHeader) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockHeader) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockHeader
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockHeaderLastBlockID get blocks height o k body block header last block ID
swagger:model GetBlocksHeightOKBodyBlockHeaderLastBlockID
*/
type GetBlocksHeightOKBodyBlockHeaderLastBlockID struct {

	// hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	Hash string `json:"hash,omitempty"`

	// parts
	Parts *GetBlocksHeightOKBodyBlockHeaderLastBlockIDParts `json:"parts,omitempty"`
}

// Validate validates this get blocks height o k body block header last block ID
func (o *GetBlocksHeightOKBodyBlockHeaderLastBlockID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockHeaderLastBlockID) validateParts(formats strfmt.Registry) error {
	if swag.IsZero(o.Parts) { // not required
		return nil
	}

	if o.Parts != nil {
		if err := o.Parts.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header" + "." + "last_block_id" + "." + "parts")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header" + "." + "last_block_id" + "." + "parts")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get blocks height o k body block header last block ID based on the context it is used
func (o *GetBlocksHeightOKBodyBlockHeaderLastBlockID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateParts(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockHeaderLastBlockID) contextValidateParts(ctx context.Context, formats strfmt.Registry) error {

	if o.Parts != nil {
		if err := o.Parts.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header" + "." + "last_block_id" + "." + "parts")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "header" + "." + "last_block_id" + "." + "parts")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockHeaderLastBlockID) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockHeaderLastBlockID) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockHeaderLastBlockID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockHeaderLastBlockIDParts get blocks height o k body block header last block ID parts
swagger:model GetBlocksHeightOKBodyBlockHeaderLastBlockIDParts
*/
type GetBlocksHeightOKBodyBlockHeaderLastBlockIDParts struct {

	// hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	Hash string `json:"hash,omitempty"`

	// total
	// Example: 0
	Total float64 `json:"total,omitempty"`
}

// Validate validates this get blocks height o k body block header last block ID parts
func (o *GetBlocksHeightOKBodyBlockHeaderLastBlockIDParts) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get blocks height o k body block header last block ID parts based on context it is used
func (o *GetBlocksHeightOKBodyBlockHeaderLastBlockIDParts) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockHeaderLastBlockIDParts) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockHeaderLastBlockIDParts) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockHeaderLastBlockIDParts
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockHeaderVersion get blocks height o k body block header version
swagger:model GetBlocksHeightOKBodyBlockHeaderVersion
*/
type GetBlocksHeightOKBodyBlockHeaderVersion struct {

	// app
	// Example: 0
	App string `json:"app,omitempty"`

	// block
	// Example: 10
	Block string `json:"block,omitempty"`
}

// Validate validates this get blocks height o k body block header version
func (o *GetBlocksHeightOKBodyBlockHeaderVersion) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get blocks height o k body block header version based on context it is used
func (o *GetBlocksHeightOKBodyBlockHeaderVersion) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockHeaderVersion) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockHeaderVersion) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockHeaderVersion
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockLastCommit get blocks height o k body block last commit
swagger:model GetBlocksHeightOKBodyBlockLastCommit
*/
type GetBlocksHeightOKBodyBlockLastCommit struct {

	// block id
	BlockID *GetBlocksHeightOKBodyBlockLastCommitBlockID `json:"block_id,omitempty"`

	// precommits
	Precommits []*GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0 `json:"precommits"`
}

// Validate validates this get blocks height o k body block last commit
func (o *GetBlocksHeightOKBodyBlockLastCommit) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBlockID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrecommits(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockLastCommit) validateBlockID(formats strfmt.Registry) error {
	if swag.IsZero(o.BlockID) { // not required
		return nil
	}

	if o.BlockID != nil {
		if err := o.BlockID.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit" + "." + "block_id")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit" + "." + "block_id")
			}
			return err
		}
	}

	return nil
}

func (o *GetBlocksHeightOKBodyBlockLastCommit) validatePrecommits(formats strfmt.Registry) error {
	if swag.IsZero(o.Precommits) { // not required
		return nil
	}

	for i := 0; i < len(o.Precommits); i++ {
		if swag.IsZero(o.Precommits[i]) { // not required
			continue
		}

		if o.Precommits[i] != nil {
			if err := o.Precommits[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit" + "." + "precommits" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit" + "." + "precommits" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get blocks height o k body block last commit based on the context it is used
func (o *GetBlocksHeightOKBodyBlockLastCommit) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateBlockID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidatePrecommits(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockLastCommit) contextValidateBlockID(ctx context.Context, formats strfmt.Registry) error {

	if o.BlockID != nil {
		if err := o.BlockID.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit" + "." + "block_id")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit" + "." + "block_id")
			}
			return err
		}
	}

	return nil
}

func (o *GetBlocksHeightOKBodyBlockLastCommit) contextValidatePrecommits(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Precommits); i++ {

		if o.Precommits[i] != nil {
			if err := o.Precommits[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit" + "." + "precommits" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit" + "." + "precommits" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockLastCommit) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockLastCommit) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockLastCommit
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockLastCommitBlockID get blocks height o k body block last commit block ID
swagger:model GetBlocksHeightOKBodyBlockLastCommitBlockID
*/
type GetBlocksHeightOKBodyBlockLastCommitBlockID struct {

	// hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	Hash string `json:"hash,omitempty"`

	// parts
	Parts *GetBlocksHeightOKBodyBlockLastCommitBlockIDParts `json:"parts,omitempty"`
}

// Validate validates this get blocks height o k body block last commit block ID
func (o *GetBlocksHeightOKBodyBlockLastCommitBlockID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockLastCommitBlockID) validateParts(formats strfmt.Registry) error {
	if swag.IsZero(o.Parts) { // not required
		return nil
	}

	if o.Parts != nil {
		if err := o.Parts.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit" + "." + "block_id" + "." + "parts")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit" + "." + "block_id" + "." + "parts")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get blocks height o k body block last commit block ID based on the context it is used
func (o *GetBlocksHeightOKBodyBlockLastCommitBlockID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateParts(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockLastCommitBlockID) contextValidateParts(ctx context.Context, formats strfmt.Registry) error {

	if o.Parts != nil {
		if err := o.Parts.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit" + "." + "block_id" + "." + "parts")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block" + "." + "last_commit" + "." + "block_id" + "." + "parts")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockLastCommitBlockID) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockLastCommitBlockID) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockLastCommitBlockID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockLastCommitBlockIDParts get blocks height o k body block last commit block ID parts
swagger:model GetBlocksHeightOKBodyBlockLastCommitBlockIDParts
*/
type GetBlocksHeightOKBodyBlockLastCommitBlockIDParts struct {

	// hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	Hash string `json:"hash,omitempty"`

	// total
	// Example: 0
	Total float64 `json:"total,omitempty"`
}

// Validate validates this get blocks height o k body block last commit block ID parts
func (o *GetBlocksHeightOKBodyBlockLastCommitBlockIDParts) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get blocks height o k body block last commit block ID parts based on context it is used
func (o *GetBlocksHeightOKBodyBlockLastCommitBlockIDParts) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockLastCommitBlockIDParts) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockLastCommitBlockIDParts) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockLastCommitBlockIDParts
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0 get blocks height o k body block last commit precommits items0
swagger:model GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0
*/
type GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0 struct {

	// block id
	BlockID *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockID `json:"block_id,omitempty"`

	// height
	// Example: 0
	Height string `json:"height,omitempty"`

	// round
	// Example: 0
	Round string `json:"round,omitempty"`

	// signature
	// Example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
	Signature string `json:"signature,omitempty"`

	// timestamp
	// Example: 2017-12-30T05:53:09.287+01:00
	Timestamp string `json:"timestamp,omitempty"`

	// type
	// Example: 2
	Type float64 `json:"type,omitempty"`

	// validator address
	ValidatorAddress string `json:"validator_address,omitempty"`

	// validator index
	// Example: 0
	ValidatorIndex string `json:"validator_index,omitempty"`
}

// Validate validates this get blocks height o k body block last commit precommits items0
func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBlockID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0) validateBlockID(formats strfmt.Registry) error {
	if swag.IsZero(o.BlockID) { // not required
		return nil
	}

	if o.BlockID != nil {
		if err := o.BlockID.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("block_id")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("block_id")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get blocks height o k body block last commit precommits items0 based on the context it is used
func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateBlockID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0) contextValidateBlockID(ctx context.Context, formats strfmt.Registry) error {

	if o.BlockID != nil {
		if err := o.BlockID.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("block_id")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("block_id")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockID get blocks height o k body block last commit precommits items0 block ID
swagger:model GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockID
*/
type GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockID struct {

	// hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	Hash string `json:"hash,omitempty"`

	// parts
	Parts *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockIDParts `json:"parts,omitempty"`
}

// Validate validates this get blocks height o k body block last commit precommits items0 block ID
func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockID) validateParts(formats strfmt.Registry) error {
	if swag.IsZero(o.Parts) { // not required
		return nil
	}

	if o.Parts != nil {
		if err := o.Parts.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("block_id" + "." + "parts")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("block_id" + "." + "parts")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get blocks height o k body block last commit precommits items0 block ID based on the context it is used
func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateParts(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockID) contextValidateParts(ctx context.Context, formats strfmt.Registry) error {

	if o.Parts != nil {
		if err := o.Parts.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("block_id" + "." + "parts")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("block_id" + "." + "parts")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockID) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockID) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockIDParts get blocks height o k body block last commit precommits items0 block ID parts
swagger:model GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockIDParts
*/
type GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockIDParts struct {

	// hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	Hash string `json:"hash,omitempty"`

	// total
	// Example: 0
	Total float64 `json:"total,omitempty"`
}

// Validate validates this get blocks height o k body block last commit precommits items0 block ID parts
func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockIDParts) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get blocks height o k body block last commit precommits items0 block ID parts based on context it is used
func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockIDParts) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockIDParts) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockIDParts) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockLastCommitPrecommitsItems0BlockIDParts
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockMeta get blocks height o k body block meta
swagger:model GetBlocksHeightOKBodyBlockMeta
*/
type GetBlocksHeightOKBodyBlockMeta struct {

	// block id
	BlockID *GetBlocksHeightOKBodyBlockMetaBlockID `json:"block_id,omitempty"`

	// header
	Header *GetBlocksHeightOKBodyBlockMetaHeader `json:"header,omitempty"`
}

// Validate validates this get blocks height o k body block meta
func (o *GetBlocksHeightOKBodyBlockMeta) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBlockID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateHeader(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockMeta) validateBlockID(formats strfmt.Registry) error {
	if swag.IsZero(o.BlockID) { // not required
		return nil
	}

	if o.BlockID != nil {
		if err := o.BlockID.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "block_id")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "block_id")
			}
			return err
		}
	}

	return nil
}

func (o *GetBlocksHeightOKBodyBlockMeta) validateHeader(formats strfmt.Registry) error {
	if swag.IsZero(o.Header) { // not required
		return nil
	}

	if o.Header != nil {
		if err := o.Header.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get blocks height o k body block meta based on the context it is used
func (o *GetBlocksHeightOKBodyBlockMeta) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateBlockID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateHeader(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockMeta) contextValidateBlockID(ctx context.Context, formats strfmt.Registry) error {

	if o.BlockID != nil {
		if err := o.BlockID.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "block_id")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "block_id")
			}
			return err
		}
	}

	return nil
}

func (o *GetBlocksHeightOKBodyBlockMeta) contextValidateHeader(ctx context.Context, formats strfmt.Registry) error {

	if o.Header != nil {
		if err := o.Header.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMeta) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMeta) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockMeta
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockMetaBlockID get blocks height o k body block meta block ID
swagger:model GetBlocksHeightOKBodyBlockMetaBlockID
*/
type GetBlocksHeightOKBodyBlockMetaBlockID struct {

	// hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	Hash string `json:"hash,omitempty"`

	// parts
	Parts *GetBlocksHeightOKBodyBlockMetaBlockIDParts `json:"parts,omitempty"`
}

// Validate validates this get blocks height o k body block meta block ID
func (o *GetBlocksHeightOKBodyBlockMetaBlockID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockMetaBlockID) validateParts(formats strfmt.Registry) error {
	if swag.IsZero(o.Parts) { // not required
		return nil
	}

	if o.Parts != nil {
		if err := o.Parts.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "block_id" + "." + "parts")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "block_id" + "." + "parts")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get blocks height o k body block meta block ID based on the context it is used
func (o *GetBlocksHeightOKBodyBlockMetaBlockID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateParts(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockMetaBlockID) contextValidateParts(ctx context.Context, formats strfmt.Registry) error {

	if o.Parts != nil {
		if err := o.Parts.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "block_id" + "." + "parts")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "block_id" + "." + "parts")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMetaBlockID) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMetaBlockID) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockMetaBlockID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockMetaBlockIDParts get blocks height o k body block meta block ID parts
swagger:model GetBlocksHeightOKBodyBlockMetaBlockIDParts
*/
type GetBlocksHeightOKBodyBlockMetaBlockIDParts struct {

	// hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	Hash string `json:"hash,omitempty"`

	// total
	// Example: 0
	Total float64 `json:"total,omitempty"`
}

// Validate validates this get blocks height o k body block meta block ID parts
func (o *GetBlocksHeightOKBodyBlockMetaBlockIDParts) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get blocks height o k body block meta block ID parts based on context it is used
func (o *GetBlocksHeightOKBodyBlockMetaBlockIDParts) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMetaBlockIDParts) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMetaBlockIDParts) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockMetaBlockIDParts
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockMetaHeader get blocks height o k body block meta header
swagger:model GetBlocksHeightOKBodyBlockMetaHeader
*/
type GetBlocksHeightOKBodyBlockMetaHeader struct {

	// app hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	AppHash string `json:"app_hash,omitempty"`

	// chain id
	// Example: columbus-5
	ChainID string `json:"chain_id,omitempty"`

	// consensus hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	ConsensusHash string `json:"consensus_hash,omitempty"`

	// data hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	DataHash string `json:"data_hash,omitempty"`

	// evidence hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	EvidenceHash string `json:"evidence_hash,omitempty"`

	// height
	// Example: 1
	Height float64 `json:"height,omitempty"`

	// last block id
	LastBlockID *GetBlocksHeightOKBodyBlockMetaHeaderLastBlockID `json:"last_block_id,omitempty"`

	// last commit hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	LastCommitHash string `json:"last_commit_hash,omitempty"`

	// last results hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	LastResultsHash string `json:"last_results_hash,omitempty"`

	// next validators hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	NextValidatorsHash string `json:"next_validators_hash,omitempty"`

	// num txs
	// Example: 0
	NumTxs float64 `json:"num_txs,omitempty"`

	// bech32 encoded address
	// Example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
	ProposerAddress string `json:"proposer_address,omitempty"`

	// time
	// Example: 2017-12-30T05:53:09.287+01:00
	Time string `json:"time,omitempty"`

	// total txs
	// Example: 35
	TotalTxs float64 `json:"total_txs,omitempty"`

	// validators hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	ValidatorsHash string `json:"validators_hash,omitempty"`

	// version
	Version *GetBlocksHeightOKBodyBlockMetaHeaderVersion `json:"version,omitempty"`
}

// Validate validates this get blocks height o k body block meta header
func (o *GetBlocksHeightOKBodyBlockMetaHeader) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLastBlockID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockMetaHeader) validateLastBlockID(formats strfmt.Registry) error {
	if swag.IsZero(o.LastBlockID) { // not required
		return nil
	}

	if o.LastBlockID != nil {
		if err := o.LastBlockID.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header" + "." + "last_block_id")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header" + "." + "last_block_id")
			}
			return err
		}
	}

	return nil
}

func (o *GetBlocksHeightOKBodyBlockMetaHeader) validateVersion(formats strfmt.Registry) error {
	if swag.IsZero(o.Version) { // not required
		return nil
	}

	if o.Version != nil {
		if err := o.Version.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header" + "." + "version")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header" + "." + "version")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get blocks height o k body block meta header based on the context it is used
func (o *GetBlocksHeightOKBodyBlockMetaHeader) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLastBlockID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateVersion(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockMetaHeader) contextValidateLastBlockID(ctx context.Context, formats strfmt.Registry) error {

	if o.LastBlockID != nil {
		if err := o.LastBlockID.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header" + "." + "last_block_id")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header" + "." + "last_block_id")
			}
			return err
		}
	}

	return nil
}

func (o *GetBlocksHeightOKBodyBlockMetaHeader) contextValidateVersion(ctx context.Context, formats strfmt.Registry) error {

	if o.Version != nil {
		if err := o.Version.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header" + "." + "version")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header" + "." + "version")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMetaHeader) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMetaHeader) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockMetaHeader
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockMetaHeaderLastBlockID get blocks height o k body block meta header last block ID
swagger:model GetBlocksHeightOKBodyBlockMetaHeaderLastBlockID
*/
type GetBlocksHeightOKBodyBlockMetaHeaderLastBlockID struct {

	// hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	Hash string `json:"hash,omitempty"`

	// parts
	Parts *GetBlocksHeightOKBodyBlockMetaHeaderLastBlockIDParts `json:"parts,omitempty"`
}

// Validate validates this get blocks height o k body block meta header last block ID
func (o *GetBlocksHeightOKBodyBlockMetaHeaderLastBlockID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockMetaHeaderLastBlockID) validateParts(formats strfmt.Registry) error {
	if swag.IsZero(o.Parts) { // not required
		return nil
	}

	if o.Parts != nil {
		if err := o.Parts.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header" + "." + "last_block_id" + "." + "parts")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header" + "." + "last_block_id" + "." + "parts")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get blocks height o k body block meta header last block ID based on the context it is used
func (o *GetBlocksHeightOKBodyBlockMetaHeaderLastBlockID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateParts(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBlocksHeightOKBodyBlockMetaHeaderLastBlockID) contextValidateParts(ctx context.Context, formats strfmt.Registry) error {

	if o.Parts != nil {
		if err := o.Parts.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header" + "." + "last_block_id" + "." + "parts")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBlocksHeightOK" + "." + "block_meta" + "." + "header" + "." + "last_block_id" + "." + "parts")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMetaHeaderLastBlockID) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMetaHeaderLastBlockID) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockMetaHeaderLastBlockID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockMetaHeaderLastBlockIDParts get blocks height o k body block meta header last block ID parts
swagger:model GetBlocksHeightOKBodyBlockMetaHeaderLastBlockIDParts
*/
type GetBlocksHeightOKBodyBlockMetaHeaderLastBlockIDParts struct {

	// hash
	// Example: EE5F3404034C524501629B56E0DDC38FAD651F04
	Hash string `json:"hash,omitempty"`

	// total
	// Example: 0
	Total float64 `json:"total,omitempty"`
}

// Validate validates this get blocks height o k body block meta header last block ID parts
func (o *GetBlocksHeightOKBodyBlockMetaHeaderLastBlockIDParts) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get blocks height o k body block meta header last block ID parts based on context it is used
func (o *GetBlocksHeightOKBodyBlockMetaHeaderLastBlockIDParts) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMetaHeaderLastBlockIDParts) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMetaHeaderLastBlockIDParts) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockMetaHeaderLastBlockIDParts
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetBlocksHeightOKBodyBlockMetaHeaderVersion get blocks height o k body block meta header version
swagger:model GetBlocksHeightOKBodyBlockMetaHeaderVersion
*/
type GetBlocksHeightOKBodyBlockMetaHeaderVersion struct {

	// app
	// Example: 0
	App string `json:"app,omitempty"`

	// block
	// Example: 10
	Block string `json:"block,omitempty"`
}

// Validate validates this get blocks height o k body block meta header version
func (o *GetBlocksHeightOKBodyBlockMetaHeaderVersion) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get blocks height o k body block meta header version based on context it is used
func (o *GetBlocksHeightOKBodyBlockMetaHeaderVersion) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMetaHeaderVersion) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBlocksHeightOKBodyBlockMetaHeaderVersion) UnmarshalBinary(b []byte) error {
	var res GetBlocksHeightOKBodyBlockMetaHeaderVersion
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
