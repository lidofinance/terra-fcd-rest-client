// Code generated by go-swagger; DO NOT EDIT.

package distribution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetDistributionParametersReader is a Reader for the GetDistributionParameters structure.
type GetDistributionParametersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDistributionParametersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDistributionParametersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetDistributionParametersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDistributionParametersOK creates a GetDistributionParametersOK with default headers values
func NewGetDistributionParametersOK() *GetDistributionParametersOK {
	return &GetDistributionParametersOK{}
}

/* GetDistributionParametersOK describes a response with status code 200, with default header values.

OK
*/
type GetDistributionParametersOK struct {
	Payload *GetDistributionParametersOKBody
}

func (o *GetDistributionParametersOK) Error() string {
	return fmt.Sprintf("[GET /distribution/parameters][%d] getDistributionParametersOK  %+v", 200, o.Payload)
}
func (o *GetDistributionParametersOK) GetPayload() *GetDistributionParametersOKBody {
	return o.Payload
}

func (o *GetDistributionParametersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetDistributionParametersOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDistributionParametersInternalServerError creates a GetDistributionParametersInternalServerError with default headers values
func NewGetDistributionParametersInternalServerError() *GetDistributionParametersInternalServerError {
	return &GetDistributionParametersInternalServerError{}
}

/* GetDistributionParametersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDistributionParametersInternalServerError struct {
}

func (o *GetDistributionParametersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /distribution/parameters][%d] getDistributionParametersInternalServerError ", 500)
}

func (o *GetDistributionParametersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetDistributionParametersOKBody get distribution parameters o k body
swagger:model GetDistributionParametersOKBody
*/
type GetDistributionParametersOKBody struct {

	// base proposer reward
	BaseProposerReward string `json:"base_proposer_reward,omitempty"`

	// bonus proposer reward
	BonusProposerReward string `json:"bonus_proposer_reward,omitempty"`

	// community tax
	CommunityTax string `json:"community_tax,omitempty"`
}

// Validate validates this get distribution parameters o k body
func (o *GetDistributionParametersOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get distribution parameters o k body based on context it is used
func (o *GetDistributionParametersOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetDistributionParametersOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDistributionParametersOKBody) UnmarshalBinary(b []byte) error {
	var res GetDistributionParametersOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
