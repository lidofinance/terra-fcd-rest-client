// Code generated by go-swagger; DO NOT EDIT.

package distribution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetDistributionValidatorsValidatorAddrRewardsReader is a Reader for the GetDistributionValidatorsValidatorAddrRewards structure.
type GetDistributionValidatorsValidatorAddrRewardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDistributionValidatorsValidatorAddrRewardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDistributionValidatorsValidatorAddrRewardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDistributionValidatorsValidatorAddrRewardsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDistributionValidatorsValidatorAddrRewardsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDistributionValidatorsValidatorAddrRewardsOK creates a GetDistributionValidatorsValidatorAddrRewardsOK with default headers values
func NewGetDistributionValidatorsValidatorAddrRewardsOK() *GetDistributionValidatorsValidatorAddrRewardsOK {
	return &GetDistributionValidatorsValidatorAddrRewardsOK{}
}

/* GetDistributionValidatorsValidatorAddrRewardsOK describes a response with status code 200, with default header values.

OK
*/
type GetDistributionValidatorsValidatorAddrRewardsOK struct {
	Payload []*GetDistributionValidatorsValidatorAddrRewardsOKBodyItems0
}

func (o *GetDistributionValidatorsValidatorAddrRewardsOK) Error() string {
	return fmt.Sprintf("[GET /distribution/validators/{validatorAddr}/rewards][%d] getDistributionValidatorsValidatorAddrRewardsOK  %+v", 200, o.Payload)
}
func (o *GetDistributionValidatorsValidatorAddrRewardsOK) GetPayload() []*GetDistributionValidatorsValidatorAddrRewardsOKBodyItems0 {
	return o.Payload
}

func (o *GetDistributionValidatorsValidatorAddrRewardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDistributionValidatorsValidatorAddrRewardsBadRequest creates a GetDistributionValidatorsValidatorAddrRewardsBadRequest with default headers values
func NewGetDistributionValidatorsValidatorAddrRewardsBadRequest() *GetDistributionValidatorsValidatorAddrRewardsBadRequest {
	return &GetDistributionValidatorsValidatorAddrRewardsBadRequest{}
}

/* GetDistributionValidatorsValidatorAddrRewardsBadRequest describes a response with status code 400, with default header values.

Invalid validator address
*/
type GetDistributionValidatorsValidatorAddrRewardsBadRequest struct {
}

func (o *GetDistributionValidatorsValidatorAddrRewardsBadRequest) Error() string {
	return fmt.Sprintf("[GET /distribution/validators/{validatorAddr}/rewards][%d] getDistributionValidatorsValidatorAddrRewardsBadRequest ", 400)
}

func (o *GetDistributionValidatorsValidatorAddrRewardsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDistributionValidatorsValidatorAddrRewardsInternalServerError creates a GetDistributionValidatorsValidatorAddrRewardsInternalServerError with default headers values
func NewGetDistributionValidatorsValidatorAddrRewardsInternalServerError() *GetDistributionValidatorsValidatorAddrRewardsInternalServerError {
	return &GetDistributionValidatorsValidatorAddrRewardsInternalServerError{}
}

/* GetDistributionValidatorsValidatorAddrRewardsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDistributionValidatorsValidatorAddrRewardsInternalServerError struct {
}

func (o *GetDistributionValidatorsValidatorAddrRewardsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /distribution/validators/{validatorAddr}/rewards][%d] getDistributionValidatorsValidatorAddrRewardsInternalServerError ", 500)
}

func (o *GetDistributionValidatorsValidatorAddrRewardsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetDistributionValidatorsValidatorAddrRewardsOKBodyItems0 get distribution validators validator addr rewards o k body items0
swagger:model GetDistributionValidatorsValidatorAddrRewardsOKBodyItems0
*/
type GetDistributionValidatorsValidatorAddrRewardsOKBodyItems0 struct {

	// amount
	// Example: 50
	Amount string `json:"amount,omitempty"`

	// denom
	// Example: uluna
	Denom string `json:"denom,omitempty"`
}

// Validate validates this get distribution validators validator addr rewards o k body items0
func (o *GetDistributionValidatorsValidatorAddrRewardsOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get distribution validators validator addr rewards o k body items0 based on context it is used
func (o *GetDistributionValidatorsValidatorAddrRewardsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetDistributionValidatorsValidatorAddrRewardsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDistributionValidatorsValidatorAddrRewardsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetDistributionValidatorsValidatorAddrRewardsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
