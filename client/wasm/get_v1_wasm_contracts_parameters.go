// Code generated by go-swagger; DO NOT EDIT.

package wasm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetV1WasmContractsParams creates a new GetV1WasmContractsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetV1WasmContractsParams() *GetV1WasmContractsParams {
	return &GetV1WasmContractsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1WasmContractsParamsWithTimeout creates a new GetV1WasmContractsParams object
// with the ability to set a timeout on a request.
func NewGetV1WasmContractsParamsWithTimeout(timeout time.Duration) *GetV1WasmContractsParams {
	return &GetV1WasmContractsParams{
		timeout: timeout,
	}
}

// NewGetV1WasmContractsParamsWithContext creates a new GetV1WasmContractsParams object
// with the ability to set a context for a request.
func NewGetV1WasmContractsParamsWithContext(ctx context.Context) *GetV1WasmContractsParams {
	return &GetV1WasmContractsParams{
		Context: ctx,
	}
}

// NewGetV1WasmContractsParamsWithHTTPClient creates a new GetV1WasmContractsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetV1WasmContractsParamsWithHTTPClient(client *http.Client) *GetV1WasmContractsParams {
	return &GetV1WasmContractsParams{
		HTTPClient: client,
	}
}

/* GetV1WasmContractsParams contains all the parameters to send to the API endpoint
   for the get v1 wasm contracts operation.

   Typically these are written to a http.Request.
*/
type GetV1WasmContractsParams struct {

	/* CodeID.

	   code id
	*/
	CodeID *float64

	/* Limit.

	   Limit
	*/
	Limit *string

	/* Owner.

	   contract owner Account address
	*/
	Owner *string

	/* Page.

	   Page
	*/
	Page *string

	/* Search.

	   full text search query in name and description
	*/
	Search *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get v1 wasm contracts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1WasmContractsParams) WithDefaults() *GetV1WasmContractsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get v1 wasm contracts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1WasmContractsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) WithTimeout(timeout time.Duration) *GetV1WasmContractsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) WithContext(ctx context.Context) *GetV1WasmContractsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) WithHTTPClient(client *http.Client) *GetV1WasmContractsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCodeID adds the codeID to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) WithCodeID(codeID *float64) *GetV1WasmContractsParams {
	o.SetCodeID(codeID)
	return o
}

// SetCodeID adds the codeId to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) SetCodeID(codeID *float64) {
	o.CodeID = codeID
}

// WithLimit adds the limit to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) WithLimit(limit *string) *GetV1WasmContractsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) SetLimit(limit *string) {
	o.Limit = limit
}

// WithOwner adds the owner to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) WithOwner(owner *string) *GetV1WasmContractsParams {
	o.SetOwner(owner)
	return o
}

// SetOwner adds the owner to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) SetOwner(owner *string) {
	o.Owner = owner
}

// WithPage adds the page to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) WithPage(page *string) *GetV1WasmContractsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) SetPage(page *string) {
	o.Page = page
}

// WithSearch adds the search to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) WithSearch(search *string) *GetV1WasmContractsParams {
	o.SetSearch(search)
	return o
}

// SetSearch adds the search to the get v1 wasm contracts params
func (o *GetV1WasmContractsParams) SetSearch(search *string) {
	o.Search = search
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1WasmContractsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CodeID != nil {

		// query param codeId
		var qrCodeID float64

		if o.CodeID != nil {
			qrCodeID = *o.CodeID
		}
		qCodeID := swag.FormatFloat64(qrCodeID)
		if qCodeID != "" {

			if err := r.SetQueryParam("codeId", qCodeID); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit string

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := qrLimit
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Owner != nil {

		// query param owner
		var qrOwner string

		if o.Owner != nil {
			qrOwner = *o.Owner
		}
		qOwner := qrOwner
		if qOwner != "" {

			if err := r.SetQueryParam("owner", qOwner); err != nil {
				return err
			}
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage string

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.Search != nil {

		// query param search
		var qrSearch string

		if o.Search != nil {
			qrSearch = *o.Search
		}
		qSearch := qrSearch
		if qSearch != "" {

			if err := r.SetQueryParam("search", qSearch); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
