// Code generated by go-swagger; DO NOT EDIT.

package governance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetGovProposalsProposalIDReader is a Reader for the GetGovProposalsProposalID structure.
type GetGovProposalsProposalIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGovProposalsProposalIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGovProposalsProposalIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGovProposalsProposalIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGovProposalsProposalIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGovProposalsProposalIDOK creates a GetGovProposalsProposalIDOK with default headers values
func NewGetGovProposalsProposalIDOK() *GetGovProposalsProposalIDOK {
	return &GetGovProposalsProposalIDOK{}
}

/* GetGovProposalsProposalIDOK describes a response with status code 200, with default header values.

OK
*/
type GetGovProposalsProposalIDOK struct {
	Payload *GetGovProposalsProposalIDOKBody
}

func (o *GetGovProposalsProposalIDOK) Error() string {
	return fmt.Sprintf("[GET /gov/proposals/{proposalId}][%d] getGovProposalsProposalIdOK  %+v", 200, o.Payload)
}
func (o *GetGovProposalsProposalIDOK) GetPayload() *GetGovProposalsProposalIDOKBody {
	return o.Payload
}

func (o *GetGovProposalsProposalIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetGovProposalsProposalIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGovProposalsProposalIDBadRequest creates a GetGovProposalsProposalIDBadRequest with default headers values
func NewGetGovProposalsProposalIDBadRequest() *GetGovProposalsProposalIDBadRequest {
	return &GetGovProposalsProposalIDBadRequest{}
}

/* GetGovProposalsProposalIDBadRequest describes a response with status code 400, with default header values.

Invalid proposal id
*/
type GetGovProposalsProposalIDBadRequest struct {
}

func (o *GetGovProposalsProposalIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /gov/proposals/{proposalId}][%d] getGovProposalsProposalIdBadRequest ", 400)
}

func (o *GetGovProposalsProposalIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGovProposalsProposalIDInternalServerError creates a GetGovProposalsProposalIDInternalServerError with default headers values
func NewGetGovProposalsProposalIDInternalServerError() *GetGovProposalsProposalIDInternalServerError {
	return &GetGovProposalsProposalIDInternalServerError{}
}

/* GetGovProposalsProposalIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetGovProposalsProposalIDInternalServerError struct {
}

func (o *GetGovProposalsProposalIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /gov/proposals/{proposalId}][%d] getGovProposalsProposalIdInternalServerError ", 500)
}

func (o *GetGovProposalsProposalIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetGovProposalsProposalIDOKBody get gov proposals proposal ID o k body
swagger:model GetGovProposalsProposalIDOKBody
*/
type GetGovProposalsProposalIDOKBody struct {

	// content
	Content *GetGovProposalsProposalIDOKBodyContent `json:"content,omitempty"`

	// deposit end time
	DepositEndTime string `json:"deposit_end_time,omitempty"`

	// final tally result
	FinalTallyResult *GetGovProposalsProposalIDOKBodyFinalTallyResult `json:"final_tally_result,omitempty"`

	// id
	// Example: 1
	ID string `json:"id,omitempty"`

	// status
	Status float64 `json:"status,omitempty"`

	// submit time
	SubmitTime string `json:"submit_time,omitempty"`

	// total deposit
	TotalDeposit []*GetGovProposalsProposalIDOKBodyTotalDepositItems0 `json:"total_deposit"`

	// voting end time
	VotingEndTime string `json:"voting_end_time,omitempty"`

	// voting start time
	VotingStartTime string `json:"voting_start_time,omitempty"`
}

// Validate validates this get gov proposals proposal ID o k body
func (o *GetGovProposalsProposalIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateContent(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFinalTallyResult(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTotalDeposit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGovProposalsProposalIDOKBody) validateContent(formats strfmt.Registry) error {
	if swag.IsZero(o.Content) { // not required
		return nil
	}

	if o.Content != nil {
		if err := o.Content.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getGovProposalsProposalIdOK" + "." + "content")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getGovProposalsProposalIdOK" + "." + "content")
			}
			return err
		}
	}

	return nil
}

func (o *GetGovProposalsProposalIDOKBody) validateFinalTallyResult(formats strfmt.Registry) error {
	if swag.IsZero(o.FinalTallyResult) { // not required
		return nil
	}

	if o.FinalTallyResult != nil {
		if err := o.FinalTallyResult.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getGovProposalsProposalIdOK" + "." + "final_tally_result")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getGovProposalsProposalIdOK" + "." + "final_tally_result")
			}
			return err
		}
	}

	return nil
}

func (o *GetGovProposalsProposalIDOKBody) validateTotalDeposit(formats strfmt.Registry) error {
	if swag.IsZero(o.TotalDeposit) { // not required
		return nil
	}

	for i := 0; i < len(o.TotalDeposit); i++ {
		if swag.IsZero(o.TotalDeposit[i]) { // not required
			continue
		}

		if o.TotalDeposit[i] != nil {
			if err := o.TotalDeposit[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getGovProposalsProposalIdOK" + "." + "total_deposit" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getGovProposalsProposalIdOK" + "." + "total_deposit" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get gov proposals proposal ID o k body based on the context it is used
func (o *GetGovProposalsProposalIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateContent(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateFinalTallyResult(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateTotalDeposit(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGovProposalsProposalIDOKBody) contextValidateContent(ctx context.Context, formats strfmt.Registry) error {

	if o.Content != nil {
		if err := o.Content.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getGovProposalsProposalIdOK" + "." + "content")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getGovProposalsProposalIdOK" + "." + "content")
			}
			return err
		}
	}

	return nil
}

func (o *GetGovProposalsProposalIDOKBody) contextValidateFinalTallyResult(ctx context.Context, formats strfmt.Registry) error {

	if o.FinalTallyResult != nil {
		if err := o.FinalTallyResult.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getGovProposalsProposalIdOK" + "." + "final_tally_result")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getGovProposalsProposalIdOK" + "." + "final_tally_result")
			}
			return err
		}
	}

	return nil
}

func (o *GetGovProposalsProposalIDOKBody) contextValidateTotalDeposit(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.TotalDeposit); i++ {

		if o.TotalDeposit[i] != nil {
			if err := o.TotalDeposit[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getGovProposalsProposalIdOK" + "." + "total_deposit" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getGovProposalsProposalIdOK" + "." + "total_deposit" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetGovProposalsProposalIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGovProposalsProposalIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetGovProposalsProposalIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGovProposalsProposalIDOKBodyContent get gov proposals proposal ID o k body content
swagger:model GetGovProposalsProposalIDOKBodyContent
*/
type GetGovProposalsProposalIDOKBodyContent struct {

	// type
	// Example: gov/TextProposal
	Type string `json:"type,omitempty"`

	// value
	Value *GetGovProposalsProposalIDOKBodyContentValue `json:"value,omitempty"`
}

// Validate validates this get gov proposals proposal ID o k body content
func (o *GetGovProposalsProposalIDOKBodyContent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGovProposalsProposalIDOKBodyContent) validateValue(formats strfmt.Registry) error {
	if swag.IsZero(o.Value) { // not required
		return nil
	}

	if o.Value != nil {
		if err := o.Value.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getGovProposalsProposalIdOK" + "." + "content" + "." + "value")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getGovProposalsProposalIdOK" + "." + "content" + "." + "value")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get gov proposals proposal ID o k body content based on the context it is used
func (o *GetGovProposalsProposalIDOKBodyContent) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateValue(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGovProposalsProposalIDOKBodyContent) contextValidateValue(ctx context.Context, formats strfmt.Registry) error {

	if o.Value != nil {
		if err := o.Value.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getGovProposalsProposalIdOK" + "." + "content" + "." + "value")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getGovProposalsProposalIdOK" + "." + "content" + "." + "value")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetGovProposalsProposalIDOKBodyContent) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGovProposalsProposalIDOKBodyContent) UnmarshalBinary(b []byte) error {
	var res GetGovProposalsProposalIDOKBodyContent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGovProposalsProposalIDOKBodyContentValue get gov proposals proposal ID o k body content value
swagger:model GetGovProposalsProposalIDOKBodyContentValue
*/
type GetGovProposalsProposalIDOKBodyContentValue struct {

	// description
	Description string `json:"description,omitempty"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this get gov proposals proposal ID o k body content value
func (o *GetGovProposalsProposalIDOKBodyContentValue) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get gov proposals proposal ID o k body content value based on context it is used
func (o *GetGovProposalsProposalIDOKBodyContentValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetGovProposalsProposalIDOKBodyContentValue) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGovProposalsProposalIDOKBodyContentValue) UnmarshalBinary(b []byte) error {
	var res GetGovProposalsProposalIDOKBodyContentValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGovProposalsProposalIDOKBodyFinalTallyResult get gov proposals proposal ID o k body final tally result
swagger:model GetGovProposalsProposalIDOKBodyFinalTallyResult
*/
type GetGovProposalsProposalIDOKBodyFinalTallyResult struct {

	// abstain
	// Example: 0.0000000000
	Abstain string `json:"abstain,omitempty"`

	// no
	// Example: 0.0000000000
	No string `json:"no,omitempty"`

	// no with veto
	// Example: 0.0000000000
	NoWithVeto string `json:"no_with_veto,omitempty"`

	// yes
	// Example: 0.0000000000
	Yes string `json:"yes,omitempty"`
}

// Validate validates this get gov proposals proposal ID o k body final tally result
func (o *GetGovProposalsProposalIDOKBodyFinalTallyResult) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get gov proposals proposal ID o k body final tally result based on context it is used
func (o *GetGovProposalsProposalIDOKBodyFinalTallyResult) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetGovProposalsProposalIDOKBodyFinalTallyResult) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGovProposalsProposalIDOKBodyFinalTallyResult) UnmarshalBinary(b []byte) error {
	var res GetGovProposalsProposalIDOKBodyFinalTallyResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGovProposalsProposalIDOKBodyTotalDepositItems0 get gov proposals proposal ID o k body total deposit items0
swagger:model GetGovProposalsProposalIDOKBodyTotalDepositItems0
*/
type GetGovProposalsProposalIDOKBodyTotalDepositItems0 struct {

	// amount
	// Example: 50
	Amount string `json:"amount,omitempty"`

	// denom
	// Example: uluna
	Denom string `json:"denom,omitempty"`
}

// Validate validates this get gov proposals proposal ID o k body total deposit items0
func (o *GetGovProposalsProposalIDOKBodyTotalDepositItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get gov proposals proposal ID o k body total deposit items0 based on context it is used
func (o *GetGovProposalsProposalIDOKBodyTotalDepositItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetGovProposalsProposalIDOKBodyTotalDepositItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGovProposalsProposalIDOKBodyTotalDepositItems0) UnmarshalBinary(b []byte) error {
	var res GetGovProposalsProposalIDOKBodyTotalDepositItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
