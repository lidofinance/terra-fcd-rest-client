// Code generated by go-swagger; DO NOT EDIT.

package oracle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetOracleParametersReader is a Reader for the GetOracleParameters structure.
type GetOracleParametersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOracleParametersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOracleParametersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOracleParametersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOracleParametersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOracleParametersOK creates a GetOracleParametersOK with default headers values
func NewGetOracleParametersOK() *GetOracleParametersOK {
	return &GetOracleParametersOK{}
}

/* GetOracleParametersOK describes a response with status code 200, with default header values.

OK
*/
type GetOracleParametersOK struct {
	Payload *GetOracleParametersOKBody
}

func (o *GetOracleParametersOK) Error() string {
	return fmt.Sprintf("[GET /oracle/parameters][%d] getOracleParametersOK  %+v", 200, o.Payload)
}
func (o *GetOracleParametersOK) GetPayload() *GetOracleParametersOKBody {
	return o.Payload
}

func (o *GetOracleParametersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetOracleParametersOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOracleParametersBadRequest creates a GetOracleParametersBadRequest with default headers values
func NewGetOracleParametersBadRequest() *GetOracleParametersBadRequest {
	return &GetOracleParametersBadRequest{}
}

/* GetOracleParametersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetOracleParametersBadRequest struct {
}

func (o *GetOracleParametersBadRequest) Error() string {
	return fmt.Sprintf("[GET /oracle/parameters][%d] getOracleParametersBadRequest ", 400)
}

func (o *GetOracleParametersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOracleParametersInternalServerError creates a GetOracleParametersInternalServerError with default headers values
func NewGetOracleParametersInternalServerError() *GetOracleParametersInternalServerError {
	return &GetOracleParametersInternalServerError{}
}

/* GetOracleParametersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOracleParametersInternalServerError struct {
}

func (o *GetOracleParametersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /oracle/parameters][%d] getOracleParametersInternalServerError ", 500)
}

func (o *GetOracleParametersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetOracleParametersOKBody get oracle parameters o k body
swagger:model GetOracleParametersOKBody
*/
type GetOracleParametersOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result *GetOracleParametersOKBodyResult `json:"result,omitempty"`
}

// Validate validates this get oracle parameters o k body
func (o *GetOracleParametersOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOracleParametersOKBody) validateResult(formats strfmt.Registry) error {
	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getOracleParametersOK" + "." + "result")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getOracleParametersOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get oracle parameters o k body based on the context it is used
func (o *GetOracleParametersOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateResult(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOracleParametersOKBody) contextValidateResult(ctx context.Context, formats strfmt.Registry) error {

	if o.Result != nil {
		if err := o.Result.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getOracleParametersOK" + "." + "result")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getOracleParametersOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOracleParametersOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOracleParametersOKBody) UnmarshalBinary(b []byte) error {
	var res GetOracleParametersOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetOracleParametersOKBodyResult get oracle parameters o k body result
swagger:model GetOracleParametersOKBodyResult
*/
type GetOracleParametersOKBodyResult struct {

	// drop threshold
	// Example: 10
	DropThreshold string `json:"drop_threshold,omitempty"`

	// oracle reward band
	// Example: 0.02
	OracleRewardBand string `json:"oracle_reward_band,omitempty"`

	// slash window
	// Example: 43200
	SlashWindow string `json:"slash_window,omitempty"`

	// vote period
	// Example: 900
	VotePeriod string `json:"vote_period,omitempty"`

	// vote threshold
	// Example: 0.67
	VoteThreshold string `json:"vote_threshold,omitempty"`
}

// Validate validates this get oracle parameters o k body result
func (o *GetOracleParametersOKBodyResult) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get oracle parameters o k body result based on context it is used
func (o *GetOracleParametersOKBodyResult) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOracleParametersOKBodyResult) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOracleParametersOKBodyResult) UnmarshalBinary(b []byte) error {
	var res GetOracleParametersOKBodyResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
