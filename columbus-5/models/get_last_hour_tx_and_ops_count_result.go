// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetLastHourTxAndOpsCountResult get last hour tx and ops count result
//
// swagger:model getLastHourTxAndOpsCountResult
type GetLastHourTxAndOpsCountResult struct {

	// total ops count in last hour
	// Required: true
	Last1hOp *float64 `json:"last_1h_op"`

	// total txs count in last hour
	// Required: true
	Last1hTx *float64 `json:"last_1h_tx"`
}

// Validate validates this get last hour tx and ops count result
func (m *GetLastHourTxAndOpsCountResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLast1hOp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLast1hTx(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetLastHourTxAndOpsCountResult) validateLast1hOp(formats strfmt.Registry) error {

	if err := validate.Required("last_1h_op", "body", m.Last1hOp); err != nil {
		return err
	}

	return nil
}

func (m *GetLastHourTxAndOpsCountResult) validateLast1hTx(formats strfmt.Registry) error {

	if err := validate.Required("last_1h_tx", "body", m.Last1hTx); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get last hour tx and ops count result based on context it is used
func (m *GetLastHourTxAndOpsCountResult) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetLastHourTxAndOpsCountResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetLastHourTxAndOpsCountResult) UnmarshalBinary(b []byte) error {
	var res GetLastHourTxAndOpsCountResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
