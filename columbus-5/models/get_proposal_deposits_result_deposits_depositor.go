// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetProposalDepositsResultDepositsDepositor get proposal deposits result deposits depositor
//
// swagger:model getProposalDepositsResult.deposits.depositor
type GetProposalDepositsResultDepositsDepositor struct {

	// account address
	// Required: true
	AccountAddress *string `json:"accountAddress"`

	// moniker
	// Required: true
	Moniker *string `json:"moniker"`

	// operator address
	// Required: true
	OperatorAddress *string `json:"operatorAddress"`
}

// Validate validates this get proposal deposits result deposits depositor
func (m *GetProposalDepositsResultDepositsDepositor) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMoniker(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperatorAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetProposalDepositsResultDepositsDepositor) validateAccountAddress(formats strfmt.Registry) error {

	if err := validate.Required("accountAddress", "body", m.AccountAddress); err != nil {
		return err
	}

	return nil
}

func (m *GetProposalDepositsResultDepositsDepositor) validateMoniker(formats strfmt.Registry) error {

	if err := validate.Required("moniker", "body", m.Moniker); err != nil {
		return err
	}

	return nil
}

func (m *GetProposalDepositsResultDepositsDepositor) validateOperatorAddress(formats strfmt.Registry) error {

	if err := validate.Required("operatorAddress", "body", m.OperatorAddress); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get proposal deposits result deposits depositor based on context it is used
func (m *GetProposalDepositsResultDepositsDepositor) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetProposalDepositsResultDepositsDepositor) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetProposalDepositsResultDepositsDepositor) UnmarshalBinary(b []byte) error {
	var res GetProposalDepositsResultDepositsDepositor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
