// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetDashboardResultTaxCaps get dashboard result tax caps
//
// swagger:model getDashboardResult.taxCaps
type GetDashboardResultTaxCaps struct {

	// denom name
	// Required: true
	Denom *string `json:"denom"`

	// tax cap amount
	// Required: true
	TaxCap *string `json:"taxCap"`
}

// Validate validates this get dashboard result tax caps
func (m *GetDashboardResultTaxCaps) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDenom(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTaxCap(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetDashboardResultTaxCaps) validateDenom(formats strfmt.Registry) error {

	if err := validate.Required("denom", "body", m.Denom); err != nil {
		return err
	}

	return nil
}

func (m *GetDashboardResultTaxCaps) validateTaxCap(formats strfmt.Registry) error {

	if err := validate.Required("taxCap", "body", m.TaxCap); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get dashboard result tax caps based on context it is used
func (m *GetDashboardResultTaxCaps) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetDashboardResultTaxCaps) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetDashboardResultTaxCaps) UnmarshalBinary(b []byte) error {
	var res GetDashboardResultTaxCaps
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
