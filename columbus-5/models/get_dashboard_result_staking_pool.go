// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetDashboardResultStakingPool get dashboard result staking pool
//
// swagger:model getDashboardResult.stakingPool
type GetDashboardResultStakingPool struct {

	// bonded token amount
	// Required: true
	BondedTokens *string `json:"bondedTokens"`

	// not bonded token amount
	// Required: true
	NotBondedTokens *string `json:"notBondedTokens"`

	// staking ratio
	// Required: true
	StakingRatio *string `json:"stakingRatio"`
}

// Validate validates this get dashboard result staking pool
func (m *GetDashboardResultStakingPool) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBondedTokens(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNotBondedTokens(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStakingRatio(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetDashboardResultStakingPool) validateBondedTokens(formats strfmt.Registry) error {

	if err := validate.Required("bondedTokens", "body", m.BondedTokens); err != nil {
		return err
	}

	return nil
}

func (m *GetDashboardResultStakingPool) validateNotBondedTokens(formats strfmt.Registry) error {

	if err := validate.Required("notBondedTokens", "body", m.NotBondedTokens); err != nil {
		return err
	}

	return nil
}

func (m *GetDashboardResultStakingPool) validateStakingRatio(formats strfmt.Registry) error {

	if err := validate.Required("stakingRatio", "body", m.StakingRatio); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get dashboard result staking pool based on context it is used
func (m *GetDashboardResultStakingPool) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetDashboardResultStakingPool) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetDashboardResultStakingPool) UnmarshalBinary(b []byte) error {
	var res GetDashboardResultStakingPool
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
