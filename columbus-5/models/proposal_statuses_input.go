// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ProposalStatusesInput ProposalStatus enumerates the valid statuses of a proposal.
//
//  - PROPOSAL_STATUS_UNSPECIFIED: "0" defines the default propopsal status.
//  - PROPOSAL_STATUS_DEPOSIT_PERIOD: "1" defines a proposal status during the deposit
// period.
//  - PROPOSAL_STATUS_VOTING_PERIOD: "2" defines a proposal status during the voting
// period.
//  - PROPOSAL_STATUS_PASSED: "3" defines a proposal status of a proposal that has
// passed.
// # TODO: check this
//  - PROPOSAL_STATUS_REJECTED: "4" defines a proposal status of a proposal that has
// been rejected.
// # TODO: check this
//  - PROPOSAL_STATUS_FAILED: "5" defines a proposal status of a proposal that has
// failed.
//
// swagger:model proposalStatusesInput
type ProposalStatusesInput string

func NewProposalStatusesInput(value ProposalStatusesInput) *ProposalStatusesInput {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ProposalStatusesInput.
func (m ProposalStatusesInput) Pointer() *ProposalStatusesInput {
	return &m
}

const (

	// ProposalStatusesInputNr0 captures enum value "0"
	ProposalStatusesInputNr0 ProposalStatusesInput = "0"

	// ProposalStatusesInputNr1 captures enum value "1"
	ProposalStatusesInputNr1 ProposalStatusesInput = "1"

	// ProposalStatusesInputNr2 captures enum value "2"
	ProposalStatusesInputNr2 ProposalStatusesInput = "2"

	// ProposalStatusesInputNr3 captures enum value "3"
	ProposalStatusesInputNr3 ProposalStatusesInput = "3"

	// ProposalStatusesInputNr4 captures enum value "4"
	ProposalStatusesInputNr4 ProposalStatusesInput = "4"

	// ProposalStatusesInputNr5 captures enum value "5"
	ProposalStatusesInputNr5 ProposalStatusesInput = "5"
)

// for schema
var proposalStatusesInputEnum []interface{}

func init() {
	var res []ProposalStatusesInput
	if err := json.Unmarshal([]byte(`["0","1","2","3","4","5"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		proposalStatusesInputEnum = append(proposalStatusesInputEnum, v)
	}
}

func (m ProposalStatusesInput) validateProposalStatusesInputEnum(path, location string, value ProposalStatusesInput) error {
	if err := validate.EnumCase(path, location, value, proposalStatusesInputEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this proposal statuses input
func (m ProposalStatusesInput) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProposalStatusesInputEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this proposal statuses input based on context it is used
func (m ProposalStatusesInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
