// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// TendermintTypesBlockIDFlag BlockIdFlag indicates which BlcokID the signature is for
//
// swagger:model tendermint.types.BlockIDFlag
type TendermintTypesBlockIDFlag string

func NewTendermintTypesBlockIDFlag(value TendermintTypesBlockIDFlag) *TendermintTypesBlockIDFlag {
	v := value
	return &v
}

const (

	// TendermintTypesBlockIDFlagBLOCKIDFLAGUNKNOWN captures enum value "BLOCK_ID_FLAG_UNKNOWN"
	TendermintTypesBlockIDFlagBLOCKIDFLAGUNKNOWN TendermintTypesBlockIDFlag = "BLOCK_ID_FLAG_UNKNOWN"

	// TendermintTypesBlockIDFlagBLOCKIDFLAGABSENT captures enum value "BLOCK_ID_FLAG_ABSENT"
	TendermintTypesBlockIDFlagBLOCKIDFLAGABSENT TendermintTypesBlockIDFlag = "BLOCK_ID_FLAG_ABSENT"

	// TendermintTypesBlockIDFlagBLOCKIDFLAGCOMMIT captures enum value "BLOCK_ID_FLAG_COMMIT"
	TendermintTypesBlockIDFlagBLOCKIDFLAGCOMMIT TendermintTypesBlockIDFlag = "BLOCK_ID_FLAG_COMMIT"

	// TendermintTypesBlockIDFlagBLOCKIDFLAGNIL captures enum value "BLOCK_ID_FLAG_NIL"
	TendermintTypesBlockIDFlagBLOCKIDFLAGNIL TendermintTypesBlockIDFlag = "BLOCK_ID_FLAG_NIL"
)

// for schema
var tendermintTypesBlockIdFlagEnum []interface{}

func init() {
	var res []TendermintTypesBlockIDFlag
	if err := json.Unmarshal([]byte(`["BLOCK_ID_FLAG_UNKNOWN","BLOCK_ID_FLAG_ABSENT","BLOCK_ID_FLAG_COMMIT","BLOCK_ID_FLAG_NIL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tendermintTypesBlockIdFlagEnum = append(tendermintTypesBlockIdFlagEnum, v)
	}
}

func (m TendermintTypesBlockIDFlag) validateTendermintTypesBlockIDFlagEnum(path, location string, value TendermintTypesBlockIDFlag) error {
	if err := validate.EnumCase(path, location, value, tendermintTypesBlockIdFlagEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this tendermint types block ID flag
func (m TendermintTypesBlockIDFlag) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTendermintTypesBlockIDFlagEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this tendermint types block ID flag based on context it is used
func (m TendermintTypesBlockIDFlag) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
