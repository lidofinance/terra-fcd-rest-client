// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/auth"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/bank"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/dashboard"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/distribution"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/governance"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/market"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/mint"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/oracle"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/query"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/service"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/slashing"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/staking"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/tendermint_rpc"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/terra_r_e_s_t"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/transactions"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/treasury"
	"github.com/lidofinance/terra-fcd-rest-client/columbus-5/client/wasm"
)

// Default terra r e s t apis HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new terra r e s t apis HTTP client.
func NewHTTPClient(formats strfmt.Registry) *TerraRESTApis {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new terra r e s t apis HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *TerraRESTApis {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new terra r e s t apis client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *TerraRESTApis {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(TerraRESTApis)
	cli.Transport = transport
	cli.Auth = auth.New(transport, formats)
	cli.Bank = bank.New(transport, formats)
	cli.Dashboard = dashboard.New(transport, formats)
	cli.Distribution = distribution.New(transport, formats)
	cli.Governance = governance.New(transport, formats)
	cli.Market = market.New(transport, formats)
	cli.Mint = mint.New(transport, formats)
	cli.Oracle = oracle.New(transport, formats)
	cli.Query = query.New(transport, formats)
	cli.Service = service.New(transport, formats)
	cli.Slashing = slashing.New(transport, formats)
	cli.Staking = staking.New(transport, formats)
	cli.TendermintRPC = tendermint_rpc.New(transport, formats)
	cli.Terrarest = terra_r_e_s_t.New(transport, formats)
	cli.Transactions = transactions.New(transport, formats)
	cli.Treasury = treasury.New(transport, formats)
	cli.Wasm = wasm.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// TerraRESTApis is a client for terra r e s t apis
type TerraRESTApis struct {
	Auth auth.ClientService

	Bank bank.ClientService

	Dashboard dashboard.ClientService

	Distribution distribution.ClientService

	Governance governance.ClientService

	Market market.ClientService

	Mint mint.ClientService

	Oracle oracle.ClientService

	Query query.ClientService

	Service service.ClientService

	Slashing slashing.ClientService

	Staking staking.ClientService

	TendermintRPC tendermint_rpc.ClientService

	Terrarest terra_r_e_s_t.ClientService

	Transactions transactions.ClientService

	Treasury treasury.ClientService

	Wasm wasm.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *TerraRESTApis) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Auth.SetTransport(transport)
	c.Bank.SetTransport(transport)
	c.Dashboard.SetTransport(transport)
	c.Distribution.SetTransport(transport)
	c.Governance.SetTransport(transport)
	c.Market.SetTransport(transport)
	c.Mint.SetTransport(transport)
	c.Oracle.SetTransport(transport)
	c.Query.SetTransport(transport)
	c.Service.SetTransport(transport)
	c.Slashing.SetTransport(transport)
	c.Staking.SetTransport(transport)
	c.TendermintRPC.SetTransport(transport)
	c.Terrarest.SetTransport(transport)
	c.Transactions.SetTransport(transport)
	c.Treasury.SetTransport(transport)
	c.Wasm.SetTransport(transport)
}
