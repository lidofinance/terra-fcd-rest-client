// Code generated by go-swagger; DO NOT EDIT.

package governance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetGovProposalsReader is a Reader for the GetGovProposals structure.
type GetGovProposalsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGovProposalsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGovProposalsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGovProposalsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGovProposalsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGovProposalsOK creates a GetGovProposalsOK with default headers values
func NewGetGovProposalsOK() *GetGovProposalsOK {
	return &GetGovProposalsOK{}
}

/* GetGovProposalsOK describes a response with status code 200, with default header values.

OK
*/
type GetGovProposalsOK struct {
	Payload []*GetGovProposalsOKBodyItems0
}

func (o *GetGovProposalsOK) Error() string {
	return fmt.Sprintf("[GET /gov/proposals][%d] getGovProposalsOK  %+v", 200, o.Payload)
}
func (o *GetGovProposalsOK) GetPayload() []*GetGovProposalsOKBodyItems0 {
	return o.Payload
}

func (o *GetGovProposalsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGovProposalsBadRequest creates a GetGovProposalsBadRequest with default headers values
func NewGetGovProposalsBadRequest() *GetGovProposalsBadRequest {
	return &GetGovProposalsBadRequest{}
}

/* GetGovProposalsBadRequest describes a response with status code 400, with default header values.

Invalid query parameters
*/
type GetGovProposalsBadRequest struct {
}

func (o *GetGovProposalsBadRequest) Error() string {
	return fmt.Sprintf("[GET /gov/proposals][%d] getGovProposalsBadRequest ", 400)
}

func (o *GetGovProposalsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGovProposalsInternalServerError creates a GetGovProposalsInternalServerError with default headers values
func NewGetGovProposalsInternalServerError() *GetGovProposalsInternalServerError {
	return &GetGovProposalsInternalServerError{}
}

/* GetGovProposalsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetGovProposalsInternalServerError struct {
}

func (o *GetGovProposalsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /gov/proposals][%d] getGovProposalsInternalServerError ", 500)
}

func (o *GetGovProposalsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetGovProposalsOKBodyItems0 get gov proposals o k body items0
swagger:model GetGovProposalsOKBodyItems0
*/
type GetGovProposalsOKBodyItems0 struct {

	// content
	Content *GetGovProposalsOKBodyItems0Content `json:"content,omitempty"`

	// deposit end time
	DepositEndTime string `json:"deposit_end_time,omitempty"`

	// final tally result
	FinalTallyResult *GetGovProposalsOKBodyItems0FinalTallyResult `json:"final_tally_result,omitempty"`

	// id
	// Example: 1
	ID string `json:"id,omitempty"`

	// status
	Status float64 `json:"status,omitempty"`

	// submit time
	SubmitTime string `json:"submit_time,omitempty"`

	// total deposit
	TotalDeposit []*GetGovProposalsOKBodyItems0TotalDepositItems0 `json:"total_deposit"`

	// voting end time
	VotingEndTime string `json:"voting_end_time,omitempty"`

	// voting start time
	VotingStartTime string `json:"voting_start_time,omitempty"`
}

// Validate validates this get gov proposals o k body items0
func (o *GetGovProposalsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateContent(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFinalTallyResult(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTotalDeposit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGovProposalsOKBodyItems0) validateContent(formats strfmt.Registry) error {
	if swag.IsZero(o.Content) { // not required
		return nil
	}

	if o.Content != nil {
		if err := o.Content.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("content")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("content")
			}
			return err
		}
	}

	return nil
}

func (o *GetGovProposalsOKBodyItems0) validateFinalTallyResult(formats strfmt.Registry) error {
	if swag.IsZero(o.FinalTallyResult) { // not required
		return nil
	}

	if o.FinalTallyResult != nil {
		if err := o.FinalTallyResult.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("final_tally_result")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("final_tally_result")
			}
			return err
		}
	}

	return nil
}

func (o *GetGovProposalsOKBodyItems0) validateTotalDeposit(formats strfmt.Registry) error {
	if swag.IsZero(o.TotalDeposit) { // not required
		return nil
	}

	for i := 0; i < len(o.TotalDeposit); i++ {
		if swag.IsZero(o.TotalDeposit[i]) { // not required
			continue
		}

		if o.TotalDeposit[i] != nil {
			if err := o.TotalDeposit[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("total_deposit" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("total_deposit" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get gov proposals o k body items0 based on the context it is used
func (o *GetGovProposalsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateContent(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateFinalTallyResult(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateTotalDeposit(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGovProposalsOKBodyItems0) contextValidateContent(ctx context.Context, formats strfmt.Registry) error {

	if o.Content != nil {
		if err := o.Content.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("content")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("content")
			}
			return err
		}
	}

	return nil
}

func (o *GetGovProposalsOKBodyItems0) contextValidateFinalTallyResult(ctx context.Context, formats strfmt.Registry) error {

	if o.FinalTallyResult != nil {
		if err := o.FinalTallyResult.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("final_tally_result")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("final_tally_result")
			}
			return err
		}
	}

	return nil
}

func (o *GetGovProposalsOKBodyItems0) contextValidateTotalDeposit(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.TotalDeposit); i++ {

		if o.TotalDeposit[i] != nil {
			if err := o.TotalDeposit[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("total_deposit" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("total_deposit" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetGovProposalsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGovProposalsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetGovProposalsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGovProposalsOKBodyItems0Content get gov proposals o k body items0 content
swagger:model GetGovProposalsOKBodyItems0Content
*/
type GetGovProposalsOKBodyItems0Content struct {

	// type
	// Example: gov/TextProposal
	Type string `json:"type,omitempty"`

	// value
	Value *GetGovProposalsOKBodyItems0ContentValue `json:"value,omitempty"`
}

// Validate validates this get gov proposals o k body items0 content
func (o *GetGovProposalsOKBodyItems0Content) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGovProposalsOKBodyItems0Content) validateValue(formats strfmt.Registry) error {
	if swag.IsZero(o.Value) { // not required
		return nil
	}

	if o.Value != nil {
		if err := o.Value.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("content" + "." + "value")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("content" + "." + "value")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get gov proposals o k body items0 content based on the context it is used
func (o *GetGovProposalsOKBodyItems0Content) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateValue(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGovProposalsOKBodyItems0Content) contextValidateValue(ctx context.Context, formats strfmt.Registry) error {

	if o.Value != nil {
		if err := o.Value.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("content" + "." + "value")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("content" + "." + "value")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetGovProposalsOKBodyItems0Content) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGovProposalsOKBodyItems0Content) UnmarshalBinary(b []byte) error {
	var res GetGovProposalsOKBodyItems0Content
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGovProposalsOKBodyItems0ContentValue get gov proposals o k body items0 content value
swagger:model GetGovProposalsOKBodyItems0ContentValue
*/
type GetGovProposalsOKBodyItems0ContentValue struct {

	// description
	Description string `json:"description,omitempty"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this get gov proposals o k body items0 content value
func (o *GetGovProposalsOKBodyItems0ContentValue) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get gov proposals o k body items0 content value based on context it is used
func (o *GetGovProposalsOKBodyItems0ContentValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetGovProposalsOKBodyItems0ContentValue) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGovProposalsOKBodyItems0ContentValue) UnmarshalBinary(b []byte) error {
	var res GetGovProposalsOKBodyItems0ContentValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGovProposalsOKBodyItems0FinalTallyResult get gov proposals o k body items0 final tally result
swagger:model GetGovProposalsOKBodyItems0FinalTallyResult
*/
type GetGovProposalsOKBodyItems0FinalTallyResult struct {

	// abstain
	// Example: 0.0000000000
	Abstain string `json:"abstain,omitempty"`

	// no
	// Example: 0.0000000000
	No string `json:"no,omitempty"`

	// no with veto
	// Example: 0.0000000000
	NoWithVeto string `json:"no_with_veto,omitempty"`

	// yes
	// Example: 0.0000000000
	Yes string `json:"yes,omitempty"`
}

// Validate validates this get gov proposals o k body items0 final tally result
func (o *GetGovProposalsOKBodyItems0FinalTallyResult) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get gov proposals o k body items0 final tally result based on context it is used
func (o *GetGovProposalsOKBodyItems0FinalTallyResult) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetGovProposalsOKBodyItems0FinalTallyResult) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGovProposalsOKBodyItems0FinalTallyResult) UnmarshalBinary(b []byte) error {
	var res GetGovProposalsOKBodyItems0FinalTallyResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGovProposalsOKBodyItems0TotalDepositItems0 get gov proposals o k body items0 total deposit items0
swagger:model GetGovProposalsOKBodyItems0TotalDepositItems0
*/
type GetGovProposalsOKBodyItems0TotalDepositItems0 struct {

	// amount
	// Example: 50
	Amount string `json:"amount,omitempty"`

	// denom
	// Example: uluna
	Denom string `json:"denom,omitempty"`
}

// Validate validates this get gov proposals o k body items0 total deposit items0
func (o *GetGovProposalsOKBodyItems0TotalDepositItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get gov proposals o k body items0 total deposit items0 based on context it is used
func (o *GetGovProposalsOKBodyItems0TotalDepositItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetGovProposalsOKBodyItems0TotalDepositItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGovProposalsOKBodyItems0TotalDepositItems0) UnmarshalBinary(b []byte) error {
	var res GetGovProposalsOKBodyItems0TotalDepositItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
