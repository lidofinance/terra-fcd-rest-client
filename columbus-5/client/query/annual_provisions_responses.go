// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AnnualProvisionsReader is a Reader for the AnnualProvisions structure.
type AnnualProvisionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AnnualProvisionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAnnualProvisionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAnnualProvisionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAnnualProvisionsOK creates a AnnualProvisionsOK with default headers values
func NewAnnualProvisionsOK() *AnnualProvisionsOK {
	return &AnnualProvisionsOK{}
}

/* AnnualProvisionsOK describes a response with status code 200, with default header values.

A successful response.
*/
type AnnualProvisionsOK struct {
	Payload *AnnualProvisionsOKBody
}

func (o *AnnualProvisionsOK) Error() string {
	return fmt.Sprintf("[GET /cosmos/mint/v1beta1/annual_provisions][%d] annualProvisionsOK  %+v", 200, o.Payload)
}
func (o *AnnualProvisionsOK) GetPayload() *AnnualProvisionsOKBody {
	return o.Payload
}

func (o *AnnualProvisionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AnnualProvisionsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAnnualProvisionsDefault creates a AnnualProvisionsDefault with default headers values
func NewAnnualProvisionsDefault(code int) *AnnualProvisionsDefault {
	return &AnnualProvisionsDefault{
		_statusCode: code,
	}
}

/* AnnualProvisionsDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type AnnualProvisionsDefault struct {
	_statusCode int

	Payload *AnnualProvisionsDefaultBody
}

// Code gets the status code for the annual provisions default response
func (o *AnnualProvisionsDefault) Code() int {
	return o._statusCode
}

func (o *AnnualProvisionsDefault) Error() string {
	return fmt.Sprintf("[GET /cosmos/mint/v1beta1/annual_provisions][%d] AnnualProvisions default  %+v", o._statusCode, o.Payload)
}
func (o *AnnualProvisionsDefault) GetPayload() *AnnualProvisionsDefaultBody {
	return o.Payload
}

func (o *AnnualProvisionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AnnualProvisionsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AnnualProvisionsDefaultBody annual provisions default body
swagger:model AnnualProvisionsDefaultBody
*/
type AnnualProvisionsDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*AnnualProvisionsDefaultBodyDetailsItems0 `json:"details"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this annual provisions default body
func (o *AnnualProvisionsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AnnualProvisionsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("AnnualProvisions default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("AnnualProvisions default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this annual provisions default body based on the context it is used
func (o *AnnualProvisionsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AnnualProvisionsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("AnnualProvisions default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("AnnualProvisions default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *AnnualProvisionsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AnnualProvisionsDefaultBody) UnmarshalBinary(b []byte) error {
	var res AnnualProvisionsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AnnualProvisionsDefaultBodyDetailsItems0 annual provisions default body details items0
swagger:model AnnualProvisionsDefaultBodyDetailsItems0
*/
type AnnualProvisionsDefaultBodyDetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this annual provisions default body details items0
func (o *AnnualProvisionsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this annual provisions default body details items0 based on context it is used
func (o *AnnualProvisionsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AnnualProvisionsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AnnualProvisionsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res AnnualProvisionsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AnnualProvisionsOKBody QueryAnnualProvisionsResponse is the response type for the
// Query/AnnualProvisions RPC method.
swagger:model AnnualProvisionsOKBody
*/
type AnnualProvisionsOKBody struct {

	// annual_provisions is the current minting annual provisions value.
	// Format: byte
	AnnualProvisions strfmt.Base64 `json:"annual_provisions,omitempty"`
}

// Validate validates this annual provisions o k body
func (o *AnnualProvisionsOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this annual provisions o k body based on context it is used
func (o *AnnualProvisionsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AnnualProvisionsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AnnualProvisionsOKBody) UnmarshalBinary(b []byte) error {
	var res AnnualProvisionsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
