// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ParamsReader is a Reader for the Params structure.
type ParamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ParamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewParamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewParamsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewParamsOK creates a ParamsOK with default headers values
func NewParamsOK() *ParamsOK {
	return &ParamsOK{}
}

/* ParamsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ParamsOK struct {
	Payload *ParamsOKBody
}

func (o *ParamsOK) Error() string {
	return fmt.Sprintf("[GET /cosmos/params/v1beta1/params][%d] paramsOK  %+v", 200, o.Payload)
}
func (o *ParamsOK) GetPayload() *ParamsOKBody {
	return o.Payload
}

func (o *ParamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ParamsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewParamsDefault creates a ParamsDefault with default headers values
func NewParamsDefault(code int) *ParamsDefault {
	return &ParamsDefault{
		_statusCode: code,
	}
}

/* ParamsDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type ParamsDefault struct {
	_statusCode int

	Payload *ParamsDefaultBody
}

// Code gets the status code for the params default response
func (o *ParamsDefault) Code() int {
	return o._statusCode
}

func (o *ParamsDefault) Error() string {
	return fmt.Sprintf("[GET /cosmos/params/v1beta1/params][%d] Params default  %+v", o._statusCode, o.Payload)
}
func (o *ParamsDefault) GetPayload() *ParamsDefaultBody {
	return o.Payload
}

func (o *ParamsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ParamsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ParamsDefaultBody params default body
swagger:model ParamsDefaultBody
*/
type ParamsDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*ParamsDefaultBodyDetailsItems0 `json:"details"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this params default body
func (o *ParamsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ParamsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Params default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("Params default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this params default body based on the context it is used
func (o *ParamsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ParamsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Params default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("Params default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ParamsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ParamsDefaultBody) UnmarshalBinary(b []byte) error {
	var res ParamsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ParamsDefaultBodyDetailsItems0 params default body details items0
swagger:model ParamsDefaultBodyDetailsItems0
*/
type ParamsDefaultBodyDetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this params default body details items0
func (o *ParamsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this params default body details items0 based on context it is used
func (o *ParamsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ParamsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ParamsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res ParamsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ParamsOKBody QueryParamsResponse is response type for the Query/Params RPC method.
swagger:model ParamsOKBody
*/
type ParamsOKBody struct {

	// param
	Param *ParamsOKBodyParam `json:"param,omitempty"`
}

// Validate validates this params o k body
func (o *ParamsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParam(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ParamsOKBody) validateParam(formats strfmt.Registry) error {
	if swag.IsZero(o.Param) { // not required
		return nil
	}

	if o.Param != nil {
		if err := o.Param.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("paramsOK" + "." + "param")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("paramsOK" + "." + "param")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this params o k body based on the context it is used
func (o *ParamsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateParam(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ParamsOKBody) contextValidateParam(ctx context.Context, formats strfmt.Registry) error {

	if o.Param != nil {
		if err := o.Param.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("paramsOK" + "." + "param")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("paramsOK" + "." + "param")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ParamsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ParamsOKBody) UnmarshalBinary(b []byte) error {
	var res ParamsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ParamsOKBodyParam param defines the queried parameter.
swagger:model ParamsOKBodyParam
*/
type ParamsOKBodyParam struct {

	// key
	Key string `json:"key,omitempty"`

	// subspace
	Subspace string `json:"subspace,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this params o k body param
func (o *ParamsOKBodyParam) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this params o k body param based on context it is used
func (o *ParamsOKBodyParam) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ParamsOKBodyParam) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ParamsOKBodyParam) UnmarshalBinary(b []byte) error {
	var res ParamsOKBodyParam
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
