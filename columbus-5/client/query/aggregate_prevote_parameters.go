// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewAggregatePrevoteParams creates a new AggregatePrevoteParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAggregatePrevoteParams() *AggregatePrevoteParams {
	return &AggregatePrevoteParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAggregatePrevoteParamsWithTimeout creates a new AggregatePrevoteParams object
// with the ability to set a timeout on a request.
func NewAggregatePrevoteParamsWithTimeout(timeout time.Duration) *AggregatePrevoteParams {
	return &AggregatePrevoteParams{
		timeout: timeout,
	}
}

// NewAggregatePrevoteParamsWithContext creates a new AggregatePrevoteParams object
// with the ability to set a context for a request.
func NewAggregatePrevoteParamsWithContext(ctx context.Context) *AggregatePrevoteParams {
	return &AggregatePrevoteParams{
		Context: ctx,
	}
}

// NewAggregatePrevoteParamsWithHTTPClient creates a new AggregatePrevoteParams object
// with the ability to set a custom HTTPClient for a request.
func NewAggregatePrevoteParamsWithHTTPClient(client *http.Client) *AggregatePrevoteParams {
	return &AggregatePrevoteParams{
		HTTPClient: client,
	}
}

/* AggregatePrevoteParams contains all the parameters to send to the API endpoint
   for the aggregate prevote operation.

   Typically these are written to a http.Request.
*/
type AggregatePrevoteParams struct {

	/* ValidatorAddr.

	   validator defines the validator address to query for.
	*/
	ValidatorAddr string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the aggregate prevote params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AggregatePrevoteParams) WithDefaults() *AggregatePrevoteParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the aggregate prevote params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AggregatePrevoteParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the aggregate prevote params
func (o *AggregatePrevoteParams) WithTimeout(timeout time.Duration) *AggregatePrevoteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the aggregate prevote params
func (o *AggregatePrevoteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the aggregate prevote params
func (o *AggregatePrevoteParams) WithContext(ctx context.Context) *AggregatePrevoteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the aggregate prevote params
func (o *AggregatePrevoteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the aggregate prevote params
func (o *AggregatePrevoteParams) WithHTTPClient(client *http.Client) *AggregatePrevoteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the aggregate prevote params
func (o *AggregatePrevoteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithValidatorAddr adds the validatorAddr to the aggregate prevote params
func (o *AggregatePrevoteParams) WithValidatorAddr(validatorAddr string) *AggregatePrevoteParams {
	o.SetValidatorAddr(validatorAddr)
	return o
}

// SetValidatorAddr adds the validatorAddr to the aggregate prevote params
func (o *AggregatePrevoteParams) SetValidatorAddr(validatorAddr string) {
	o.ValidatorAddr = validatorAddr
}

// WriteToRequest writes these params to a swagger request
func (o *AggregatePrevoteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param validator_addr
	if err := r.SetPathParam("validator_addr", o.ValidatorAddr); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
