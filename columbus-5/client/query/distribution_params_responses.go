// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DistributionParamsReader is a Reader for the DistributionParams structure.
type DistributionParamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DistributionParamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDistributionParamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDistributionParamsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDistributionParamsOK creates a DistributionParamsOK with default headers values
func NewDistributionParamsOK() *DistributionParamsOK {
	return &DistributionParamsOK{}
}

/* DistributionParamsOK describes a response with status code 200, with default header values.

A successful response.
*/
type DistributionParamsOK struct {
	Payload *DistributionParamsOKBody
}

func (o *DistributionParamsOK) Error() string {
	return fmt.Sprintf("[GET /cosmos/distribution/v1beta1/params][%d] distributionParamsOK  %+v", 200, o.Payload)
}
func (o *DistributionParamsOK) GetPayload() *DistributionParamsOKBody {
	return o.Payload
}

func (o *DistributionParamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DistributionParamsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDistributionParamsDefault creates a DistributionParamsDefault with default headers values
func NewDistributionParamsDefault(code int) *DistributionParamsDefault {
	return &DistributionParamsDefault{
		_statusCode: code,
	}
}

/* DistributionParamsDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type DistributionParamsDefault struct {
	_statusCode int

	Payload *DistributionParamsDefaultBody
}

// Code gets the status code for the distribution params default response
func (o *DistributionParamsDefault) Code() int {
	return o._statusCode
}

func (o *DistributionParamsDefault) Error() string {
	return fmt.Sprintf("[GET /cosmos/distribution/v1beta1/params][%d] DistributionParams default  %+v", o._statusCode, o.Payload)
}
func (o *DistributionParamsDefault) GetPayload() *DistributionParamsDefaultBody {
	return o.Payload
}

func (o *DistributionParamsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DistributionParamsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DistributionParamsDefaultBody distribution params default body
swagger:model DistributionParamsDefaultBody
*/
type DistributionParamsDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*DistributionParamsDefaultBodyDetailsItems0 `json:"details"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this distribution params default body
func (o *DistributionParamsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DistributionParamsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("DistributionParams default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("DistributionParams default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this distribution params default body based on the context it is used
func (o *DistributionParamsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DistributionParamsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("DistributionParams default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("DistributionParams default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DistributionParamsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DistributionParamsDefaultBody) UnmarshalBinary(b []byte) error {
	var res DistributionParamsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DistributionParamsDefaultBodyDetailsItems0 distribution params default body details items0
swagger:model DistributionParamsDefaultBodyDetailsItems0
*/
type DistributionParamsDefaultBodyDetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this distribution params default body details items0
func (o *DistributionParamsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this distribution params default body details items0 based on context it is used
func (o *DistributionParamsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DistributionParamsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DistributionParamsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res DistributionParamsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DistributionParamsOKBody QueryParamsResponse is the response type for the Query/Params RPC method.
swagger:model DistributionParamsOKBody
*/
type DistributionParamsOKBody struct {

	// params
	Params *DistributionParamsOKBodyParams `json:"params,omitempty"`
}

// Validate validates this distribution params o k body
func (o *DistributionParamsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DistributionParamsOKBody) validateParams(formats strfmt.Registry) error {
	if swag.IsZero(o.Params) { // not required
		return nil
	}

	if o.Params != nil {
		if err := o.Params.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("distributionParamsOK" + "." + "params")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("distributionParamsOK" + "." + "params")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this distribution params o k body based on the context it is used
func (o *DistributionParamsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DistributionParamsOKBody) contextValidateParams(ctx context.Context, formats strfmt.Registry) error {

	if o.Params != nil {
		if err := o.Params.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("distributionParamsOK" + "." + "params")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("distributionParamsOK" + "." + "params")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DistributionParamsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DistributionParamsOKBody) UnmarshalBinary(b []byte) error {
	var res DistributionParamsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DistributionParamsOKBodyParams params defines the parameters of the module.
swagger:model DistributionParamsOKBodyParams
*/
type DistributionParamsOKBodyParams struct {

	// base proposer reward
	BaseProposerReward string `json:"base_proposer_reward,omitempty"`

	// bonus proposer reward
	BonusProposerReward string `json:"bonus_proposer_reward,omitempty"`

	// community tax
	CommunityTax string `json:"community_tax,omitempty"`

	// withdraw addr enabled
	WithdrawAddrEnabled bool `json:"withdraw_addr_enabled,omitempty"`
}

// Validate validates this distribution params o k body params
func (o *DistributionParamsOKBodyParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this distribution params o k body params based on context it is used
func (o *DistributionParamsOKBodyParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DistributionParamsOKBodyParams) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DistributionParamsOKBodyParams) UnmarshalBinary(b []byte) error {
	var res DistributionParamsOKBodyParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
