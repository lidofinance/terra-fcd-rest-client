// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IBCTransferParamsReader is a Reader for the IBCTransferParams structure.
type IBCTransferParamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IBCTransferParamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIBCTransferParamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewIBCTransferParamsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIBCTransferParamsOK creates a IBCTransferParamsOK with default headers values
func NewIBCTransferParamsOK() *IBCTransferParamsOK {
	return &IBCTransferParamsOK{}
}

/* IBCTransferParamsOK describes a response with status code 200, with default header values.

A successful response.
*/
type IBCTransferParamsOK struct {
	Payload *IBCTransferParamsOKBody
}

func (o *IBCTransferParamsOK) Error() string {
	return fmt.Sprintf("[GET /ibc/apps/transfer/v1/params][%d] iBCTransferParamsOK  %+v", 200, o.Payload)
}
func (o *IBCTransferParamsOK) GetPayload() *IBCTransferParamsOKBody {
	return o.Payload
}

func (o *IBCTransferParamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(IBCTransferParamsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIBCTransferParamsDefault creates a IBCTransferParamsDefault with default headers values
func NewIBCTransferParamsDefault(code int) *IBCTransferParamsDefault {
	return &IBCTransferParamsDefault{
		_statusCode: code,
	}
}

/* IBCTransferParamsDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type IBCTransferParamsDefault struct {
	_statusCode int

	Payload *IBCTransferParamsDefaultBody
}

// Code gets the status code for the i b c transfer params default response
func (o *IBCTransferParamsDefault) Code() int {
	return o._statusCode
}

func (o *IBCTransferParamsDefault) Error() string {
	return fmt.Sprintf("[GET /ibc/apps/transfer/v1/params][%d] IBCTransferParams default  %+v", o._statusCode, o.Payload)
}
func (o *IBCTransferParamsDefault) GetPayload() *IBCTransferParamsDefaultBody {
	return o.Payload
}

func (o *IBCTransferParamsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(IBCTransferParamsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*IBCTransferParamsDefaultBody i b c transfer params default body
swagger:model IBCTransferParamsDefaultBody
*/
type IBCTransferParamsDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*IBCTransferParamsDefaultBodyDetailsItems0 `json:"details"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this i b c transfer params default body
func (o *IBCTransferParamsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *IBCTransferParamsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("IBCTransferParams default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("IBCTransferParams default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this i b c transfer params default body based on the context it is used
func (o *IBCTransferParamsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *IBCTransferParamsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("IBCTransferParams default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("IBCTransferParams default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *IBCTransferParamsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *IBCTransferParamsDefaultBody) UnmarshalBinary(b []byte) error {
	var res IBCTransferParamsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*IBCTransferParamsDefaultBodyDetailsItems0 i b c transfer params default body details items0
swagger:model IBCTransferParamsDefaultBodyDetailsItems0
*/
type IBCTransferParamsDefaultBodyDetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this i b c transfer params default body details items0
func (o *IBCTransferParamsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this i b c transfer params default body details items0 based on context it is used
func (o *IBCTransferParamsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *IBCTransferParamsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *IBCTransferParamsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res IBCTransferParamsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*IBCTransferParamsOKBody QueryParamsResponse is the response type for the Query/Params RPC method.
swagger:model IBCTransferParamsOKBody
*/
type IBCTransferParamsOKBody struct {

	// params
	Params *IBCTransferParamsOKBodyParams `json:"params,omitempty"`
}

// Validate validates this i b c transfer params o k body
func (o *IBCTransferParamsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *IBCTransferParamsOKBody) validateParams(formats strfmt.Registry) error {
	if swag.IsZero(o.Params) { // not required
		return nil
	}

	if o.Params != nil {
		if err := o.Params.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("iBCTransferParamsOK" + "." + "params")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("iBCTransferParamsOK" + "." + "params")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this i b c transfer params o k body based on the context it is used
func (o *IBCTransferParamsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *IBCTransferParamsOKBody) contextValidateParams(ctx context.Context, formats strfmt.Registry) error {

	if o.Params != nil {
		if err := o.Params.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("iBCTransferParamsOK" + "." + "params")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("iBCTransferParamsOK" + "." + "params")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *IBCTransferParamsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *IBCTransferParamsOKBody) UnmarshalBinary(b []byte) error {
	var res IBCTransferParamsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*IBCTransferParamsOKBodyParams params defines the parameters of the module.
swagger:model IBCTransferParamsOKBodyParams
*/
type IBCTransferParamsOKBodyParams struct {

	// receive_enabled enables or disables all cross-chain token transfers to this
	// chain.
	ReceiveEnabled bool `json:"receive_enabled,omitempty"`

	// send_enabled enables or disables all cross-chain token transfers from this
	// chain.
	SendEnabled bool `json:"send_enabled,omitempty"`
}

// Validate validates this i b c transfer params o k body params
func (o *IBCTransferParamsOKBodyParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this i b c transfer params o k body params based on context it is used
func (o *IBCTransferParamsOKBodyParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *IBCTransferParamsOKBodyParams) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *IBCTransferParamsOKBodyParams) UnmarshalBinary(b []byte) error {
	var res IBCTransferParamsOKBodyParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
