// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TaxRateReader is a Reader for the TaxRate structure.
type TaxRateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TaxRateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTaxRateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewTaxRateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTaxRateOK creates a TaxRateOK with default headers values
func NewTaxRateOK() *TaxRateOK {
	return &TaxRateOK{}
}

/* TaxRateOK describes a response with status code 200, with default header values.

A successful response.
*/
type TaxRateOK struct {
	Payload *TaxRateOKBody
}

func (o *TaxRateOK) Error() string {
	return fmt.Sprintf("[GET /terra/treasury/v1beta1/tax_rate][%d] taxRateOK  %+v", 200, o.Payload)
}
func (o *TaxRateOK) GetPayload() *TaxRateOKBody {
	return o.Payload
}

func (o *TaxRateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(TaxRateOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTaxRateDefault creates a TaxRateDefault with default headers values
func NewTaxRateDefault(code int) *TaxRateDefault {
	return &TaxRateDefault{
		_statusCode: code,
	}
}

/* TaxRateDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type TaxRateDefault struct {
	_statusCode int

	Payload *TaxRateDefaultBody
}

// Code gets the status code for the tax rate default response
func (o *TaxRateDefault) Code() int {
	return o._statusCode
}

func (o *TaxRateDefault) Error() string {
	return fmt.Sprintf("[GET /terra/treasury/v1beta1/tax_rate][%d] TaxRate default  %+v", o._statusCode, o.Payload)
}
func (o *TaxRateDefault) GetPayload() *TaxRateDefaultBody {
	return o.Payload
}

func (o *TaxRateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(TaxRateDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*TaxRateDefaultBody tax rate default body
swagger:model TaxRateDefaultBody
*/
type TaxRateDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*TaxRateDefaultBodyDetailsItems0 `json:"details"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this tax rate default body
func (o *TaxRateDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *TaxRateDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("TaxRate default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("TaxRate default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this tax rate default body based on the context it is used
func (o *TaxRateDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *TaxRateDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("TaxRate default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("TaxRate default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *TaxRateDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *TaxRateDefaultBody) UnmarshalBinary(b []byte) error {
	var res TaxRateDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*TaxRateDefaultBodyDetailsItems0 tax rate default body details items0
swagger:model TaxRateDefaultBodyDetailsItems0
*/
type TaxRateDefaultBodyDetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this tax rate default body details items0
func (o *TaxRateDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this tax rate default body details items0 based on context it is used
func (o *TaxRateDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *TaxRateDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *TaxRateDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res TaxRateDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*TaxRateOKBody QueryTaxRateResponse is response type for the
// Query/TaxRate RPC method.
swagger:model TaxRateOKBody
*/
type TaxRateOKBody struct {

	// tax rate
	TaxRate string `json:"tax_rate,omitempty"`
}

// Validate validates this tax rate o k body
func (o *TaxRateOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this tax rate o k body based on context it is used
func (o *TaxRateOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *TaxRateOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *TaxRateOKBody) UnmarshalBinary(b []byte) error {
	var res TaxRateOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
