// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewValidatorUnbondingDelegationsParams creates a new ValidatorUnbondingDelegationsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewValidatorUnbondingDelegationsParams() *ValidatorUnbondingDelegationsParams {
	return &ValidatorUnbondingDelegationsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewValidatorUnbondingDelegationsParamsWithTimeout creates a new ValidatorUnbondingDelegationsParams object
// with the ability to set a timeout on a request.
func NewValidatorUnbondingDelegationsParamsWithTimeout(timeout time.Duration) *ValidatorUnbondingDelegationsParams {
	return &ValidatorUnbondingDelegationsParams{
		timeout: timeout,
	}
}

// NewValidatorUnbondingDelegationsParamsWithContext creates a new ValidatorUnbondingDelegationsParams object
// with the ability to set a context for a request.
func NewValidatorUnbondingDelegationsParamsWithContext(ctx context.Context) *ValidatorUnbondingDelegationsParams {
	return &ValidatorUnbondingDelegationsParams{
		Context: ctx,
	}
}

// NewValidatorUnbondingDelegationsParamsWithHTTPClient creates a new ValidatorUnbondingDelegationsParams object
// with the ability to set a custom HTTPClient for a request.
func NewValidatorUnbondingDelegationsParamsWithHTTPClient(client *http.Client) *ValidatorUnbondingDelegationsParams {
	return &ValidatorUnbondingDelegationsParams{
		HTTPClient: client,
	}
}

/* ValidatorUnbondingDelegationsParams contains all the parameters to send to the API endpoint
   for the validator unbonding delegations operation.

   Typically these are written to a http.Request.
*/
type ValidatorUnbondingDelegationsParams struct {

	/* PaginationCountTotal.

	     count_total is set to true  to indicate that the result set should include
	a count of the total number of items available for pagination in UIs.
	count_total is only respected when offset is used. It is ignored when key
	is set.

	     Format: boolean
	*/
	PaginationCountTotal *bool

	/* PaginationKey.

	     key is a value returned in PageResponse.next_key to begin
	querying the next page most efficiently. Only one of offset or key
	should be set.

	     Format: byte
	*/
	PaginationKey *strfmt.Base64

	/* PaginationLimit.

	     limit is the total number of results to be returned in the result page.
	If left empty it will default to a value to be set by each app.

	     Format: uint64
	*/
	PaginationLimit *string

	/* PaginationOffset.

	     offset is a numeric offset that can be used when key is unavailable.
	It is less efficient than using key. Only one of offset or key should
	be set.

	     Format: uint64
	*/
	PaginationOffset *string

	/* PaginationReverse.

	   reverse is set to true if results are to be returned in the descending order.

	   Format: boolean
	*/
	PaginationReverse *bool

	/* ValidatorAddr.

	   validator_addr defines the validator address to query for.
	*/
	ValidatorAddr string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the validator unbonding delegations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ValidatorUnbondingDelegationsParams) WithDefaults() *ValidatorUnbondingDelegationsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the validator unbonding delegations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ValidatorUnbondingDelegationsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) WithTimeout(timeout time.Duration) *ValidatorUnbondingDelegationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) WithContext(ctx context.Context) *ValidatorUnbondingDelegationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) WithHTTPClient(client *http.Client) *ValidatorUnbondingDelegationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPaginationCountTotal adds the paginationCountTotal to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) WithPaginationCountTotal(paginationCountTotal *bool) *ValidatorUnbondingDelegationsParams {
	o.SetPaginationCountTotal(paginationCountTotal)
	return o
}

// SetPaginationCountTotal adds the paginationCountTotal to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) SetPaginationCountTotal(paginationCountTotal *bool) {
	o.PaginationCountTotal = paginationCountTotal
}

// WithPaginationKey adds the paginationKey to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) WithPaginationKey(paginationKey *strfmt.Base64) *ValidatorUnbondingDelegationsParams {
	o.SetPaginationKey(paginationKey)
	return o
}

// SetPaginationKey adds the paginationKey to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) SetPaginationKey(paginationKey *strfmt.Base64) {
	o.PaginationKey = paginationKey
}

// WithPaginationLimit adds the paginationLimit to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) WithPaginationLimit(paginationLimit *string) *ValidatorUnbondingDelegationsParams {
	o.SetPaginationLimit(paginationLimit)
	return o
}

// SetPaginationLimit adds the paginationLimit to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) SetPaginationLimit(paginationLimit *string) {
	o.PaginationLimit = paginationLimit
}

// WithPaginationOffset adds the paginationOffset to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) WithPaginationOffset(paginationOffset *string) *ValidatorUnbondingDelegationsParams {
	o.SetPaginationOffset(paginationOffset)
	return o
}

// SetPaginationOffset adds the paginationOffset to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) SetPaginationOffset(paginationOffset *string) {
	o.PaginationOffset = paginationOffset
}

// WithPaginationReverse adds the paginationReverse to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) WithPaginationReverse(paginationReverse *bool) *ValidatorUnbondingDelegationsParams {
	o.SetPaginationReverse(paginationReverse)
	return o
}

// SetPaginationReverse adds the paginationReverse to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) SetPaginationReverse(paginationReverse *bool) {
	o.PaginationReverse = paginationReverse
}

// WithValidatorAddr adds the validatorAddr to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) WithValidatorAddr(validatorAddr string) *ValidatorUnbondingDelegationsParams {
	o.SetValidatorAddr(validatorAddr)
	return o
}

// SetValidatorAddr adds the validatorAddr to the validator unbonding delegations params
func (o *ValidatorUnbondingDelegationsParams) SetValidatorAddr(validatorAddr string) {
	o.ValidatorAddr = validatorAddr
}

// WriteToRequest writes these params to a swagger request
func (o *ValidatorUnbondingDelegationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.PaginationCountTotal != nil {

		// query param pagination.count_total
		var qrPaginationCountTotal bool

		if o.PaginationCountTotal != nil {
			qrPaginationCountTotal = *o.PaginationCountTotal
		}
		qPaginationCountTotal := swag.FormatBool(qrPaginationCountTotal)
		if qPaginationCountTotal != "" {

			if err := r.SetQueryParam("pagination.count_total", qPaginationCountTotal); err != nil {
				return err
			}
		}
	}

	if o.PaginationKey != nil {

		// query param pagination.key
		var qrPaginationKey strfmt.Base64

		if o.PaginationKey != nil {
			qrPaginationKey = *o.PaginationKey
		}
		qPaginationKey := qrPaginationKey.String()
		if qPaginationKey != "" {

			if err := r.SetQueryParam("pagination.key", qPaginationKey); err != nil {
				return err
			}
		}
	}

	if o.PaginationLimit != nil {

		// query param pagination.limit
		var qrPaginationLimit string

		if o.PaginationLimit != nil {
			qrPaginationLimit = *o.PaginationLimit
		}
		qPaginationLimit := qrPaginationLimit
		if qPaginationLimit != "" {

			if err := r.SetQueryParam("pagination.limit", qPaginationLimit); err != nil {
				return err
			}
		}
	}

	if o.PaginationOffset != nil {

		// query param pagination.offset
		var qrPaginationOffset string

		if o.PaginationOffset != nil {
			qrPaginationOffset = *o.PaginationOffset
		}
		qPaginationOffset := qrPaginationOffset
		if qPaginationOffset != "" {

			if err := r.SetQueryParam("pagination.offset", qPaginationOffset); err != nil {
				return err
			}
		}
	}

	if o.PaginationReverse != nil {

		// query param pagination.reverse
		var qrPaginationReverse bool

		if o.PaginationReverse != nil {
			qrPaginationReverse = *o.PaginationReverse
		}
		qPaginationReverse := swag.FormatBool(qrPaginationReverse)
		if qPaginationReverse != "" {

			if err := r.SetQueryParam("pagination.reverse", qPaginationReverse); err != nil {
				return err
			}
		}
	}

	// path param validator_addr
	if err := r.SetPathParam("validator_addr", o.ValidatorAddr); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
