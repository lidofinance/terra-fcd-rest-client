// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RedelegationsReader is a Reader for the Redelegations structure.
type RedelegationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RedelegationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRedelegationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewRedelegationsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRedelegationsOK creates a RedelegationsOK with default headers values
func NewRedelegationsOK() *RedelegationsOK {
	return &RedelegationsOK{}
}

/* RedelegationsOK describes a response with status code 200, with default header values.

A successful response.
*/
type RedelegationsOK struct {
	Payload *RedelegationsOKBody
}

func (o *RedelegationsOK) Error() string {
	return fmt.Sprintf("[GET /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations][%d] redelegationsOK  %+v", 200, o.Payload)
}
func (o *RedelegationsOK) GetPayload() *RedelegationsOKBody {
	return o.Payload
}

func (o *RedelegationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RedelegationsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRedelegationsDefault creates a RedelegationsDefault with default headers values
func NewRedelegationsDefault(code int) *RedelegationsDefault {
	return &RedelegationsDefault{
		_statusCode: code,
	}
}

/* RedelegationsDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type RedelegationsDefault struct {
	_statusCode int

	Payload *RedelegationsDefaultBody
}

// Code gets the status code for the redelegations default response
func (o *RedelegationsDefault) Code() int {
	return o._statusCode
}

func (o *RedelegationsDefault) Error() string {
	return fmt.Sprintf("[GET /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations][%d] Redelegations default  %+v", o._statusCode, o.Payload)
}
func (o *RedelegationsDefault) GetPayload() *RedelegationsDefaultBody {
	return o.Payload
}

func (o *RedelegationsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RedelegationsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*RedelegationsDefaultBody redelegations default body
swagger:model RedelegationsDefaultBody
*/
type RedelegationsDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*RedelegationsDefaultBodyDetailsItems0 `json:"details"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this redelegations default body
func (o *RedelegationsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RedelegationsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Redelegations default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("Redelegations default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this redelegations default body based on the context it is used
func (o *RedelegationsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RedelegationsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Redelegations default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("Redelegations default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *RedelegationsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RedelegationsDefaultBody) UnmarshalBinary(b []byte) error {
	var res RedelegationsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RedelegationsDefaultBodyDetailsItems0 `Any` contains an arbitrary serialized protocol buffer message along with a
// URL that describes the type of the serialized message.
//
// Protobuf library provides support to pack/unpack Any values in the form
// of utility functions or additional generated methods of the Any type.
//
// Example 1: Pack and unpack a message in C++.
//
//     Foo foo = ...;
//     Any any;
//     any.PackFrom(foo);
//     ...
//     if (any.UnpackTo(&foo)) {
//       ...
//     }
//
// Example 2: Pack and unpack a message in Java.
//
//     Foo foo = ...;
//     Any any = Any.pack(foo);
//     ...
//     if (any.is(Foo.class)) {
//       foo = any.unpack(Foo.class);
//     }
//
//  Example 3: Pack and unpack a message in Python.
//
//     foo = Foo(...)
//     any = Any()
//     any.Pack(foo)
//     ...
//     if any.Is(Foo.DESCRIPTOR):
//       any.Unpack(foo)
//       ...
//
//  Example 4: Pack and unpack a message in Go
//
//      foo := &pb.Foo{...}
//      any, err := ptypes.MarshalAny(foo)
//      ...
//      foo := &pb.Foo{}
//      if err := ptypes.UnmarshalAny(any, foo); err != nil {
//        ...
//      }
//
// The pack methods provided by protobuf library will by default use
// 'type.googleapis.com/full.type.name' as the type URL and the unpack
// methods only use the fully qualified type name after the last '/'
// in the type URL, for example "foo.bar.com/x/y.z" will yield type
// name "y.z".
//
//
// JSON
// ====
// The JSON representation of an `Any` value uses the regular
// representation of the deserialized, embedded message, with an
// additional field `@type` which contains the type URL. Example:
//
//     package google.profile;
//     message Person {
//       string first_name = 1;
//       string last_name = 2;
//     }
//
//     {
//       "@type": "type.googleapis.com/google.profile.Person",
//       "firstName": <string>,
//       "lastName": <string>
//     }
//
// If the embedded message type is well-known and has a custom JSON
// representation, that representation will be embedded adding a field
// `value` which holds the custom JSON in addition to the `@type`
// field. Example (for message [google.protobuf.Duration][]):
//
//     {
//       "@type": "type.googleapis.com/google.protobuf.Duration",
//       "value": "1.212s"
//     }
swagger:model RedelegationsDefaultBodyDetailsItems0
*/
type RedelegationsDefaultBodyDetailsItems0 struct {

	// A URL/resource name that uniquely identifies the type of the serialized
	// protocol buffer message. This string must contain at least
	// one "/" character. The last segment of the URL's path must represent
	// the fully qualified name of the type (as in
	// `path/google.protobuf.Duration`). The name should be in a canonical form
	// (e.g., leading "." is not accepted).
	//
	// In practice, teams usually precompile into the binary all types that they
	// expect it to use in the context of Any. However, for URLs which use the
	// scheme `http`, `https`, or no scheme, one can optionally set up a type
	// server that maps type URLs to message definitions as follows:
	//
	// * If no scheme is provided, `https` is assumed.
	// * An HTTP GET on the URL must yield a [google.protobuf.Type][]
	//   value in binary format, or produce an error.
	// * Applications are allowed to cache lookup results based on the
	//   URL, or have them precompiled into a binary to avoid any
	//   lookup. Therefore, binary compatibility needs to be preserved
	//   on changes to types. (Use versioned type names to manage
	//   breaking changes.)
	//
	// Note: this functionality is not currently available in the official
	// protobuf release, and it is not used for type URLs beginning with
	// type.googleapis.com.
	//
	// Schemes other than `http`, `https` (or the empty scheme) might be
	// used with implementation specific semantics.
	TypeURL string `json:"type_url,omitempty"`

	// Must be a valid serialized protocol buffer of the above specified type.
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this redelegations default body details items0
func (o *RedelegationsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this redelegations default body details items0 based on context it is used
func (o *RedelegationsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RedelegationsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RedelegationsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res RedelegationsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RedelegationsOKBody QueryRedelegationsResponse is response type for the Query/Redelegations RPC
// method.
swagger:model RedelegationsOKBody
*/
type RedelegationsOKBody struct {

	// pagination
	Pagination *RedelegationsOKBodyPagination `json:"pagination,omitempty"`

	// redelegation responses
	RedelegationResponses []*RedelegationsOKBodyRedelegationResponsesItems0 `json:"redelegation_responses"`
}

// Validate validates this redelegations o k body
func (o *RedelegationsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePagination(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRedelegationResponses(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RedelegationsOKBody) validatePagination(formats strfmt.Registry) error {
	if swag.IsZero(o.Pagination) { // not required
		return nil
	}

	if o.Pagination != nil {
		if err := o.Pagination.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("redelegationsOK" + "." + "pagination")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("redelegationsOK" + "." + "pagination")
			}
			return err
		}
	}

	return nil
}

func (o *RedelegationsOKBody) validateRedelegationResponses(formats strfmt.Registry) error {
	if swag.IsZero(o.RedelegationResponses) { // not required
		return nil
	}

	for i := 0; i < len(o.RedelegationResponses); i++ {
		if swag.IsZero(o.RedelegationResponses[i]) { // not required
			continue
		}

		if o.RedelegationResponses[i] != nil {
			if err := o.RedelegationResponses[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("redelegationsOK" + "." + "redelegation_responses" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("redelegationsOK" + "." + "redelegation_responses" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this redelegations o k body based on the context it is used
func (o *RedelegationsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidatePagination(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateRedelegationResponses(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RedelegationsOKBody) contextValidatePagination(ctx context.Context, formats strfmt.Registry) error {

	if o.Pagination != nil {
		if err := o.Pagination.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("redelegationsOK" + "." + "pagination")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("redelegationsOK" + "." + "pagination")
			}
			return err
		}
	}

	return nil
}

func (o *RedelegationsOKBody) contextValidateRedelegationResponses(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.RedelegationResponses); i++ {

		if o.RedelegationResponses[i] != nil {
			if err := o.RedelegationResponses[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("redelegationsOK" + "." + "redelegation_responses" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("redelegationsOK" + "." + "redelegation_responses" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *RedelegationsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RedelegationsOKBody) UnmarshalBinary(b []byte) error {
	var res RedelegationsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RedelegationsOKBodyPagination pagination defines the pagination in the response.
swagger:model RedelegationsOKBodyPagination
*/
type RedelegationsOKBodyPagination struct {

	// next_key is the key to be passed to PageRequest.key to
	// query the next page most efficiently
	// Format: byte
	NextKey strfmt.Base64 `json:"next_key,omitempty"`

	// total is total number of results available if PageRequest.count_total
	// was set, its value is undefined otherwise
	Total string `json:"total,omitempty"`
}

// Validate validates this redelegations o k body pagination
func (o *RedelegationsOKBodyPagination) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this redelegations o k body pagination based on context it is used
func (o *RedelegationsOKBodyPagination) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RedelegationsOKBodyPagination) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RedelegationsOKBodyPagination) UnmarshalBinary(b []byte) error {
	var res RedelegationsOKBodyPagination
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RedelegationsOKBodyRedelegationResponsesItems0 RedelegationResponse is equivalent to a Redelegation except that its entries
// contain a balance in addition to shares which is more suitable for client
// responses.
swagger:model RedelegationsOKBodyRedelegationResponsesItems0
*/
type RedelegationsOKBodyRedelegationResponsesItems0 struct {

	// entries
	Entries []*RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0 `json:"entries"`

	// redelegation
	Redelegation *RedelegationsOKBodyRedelegationResponsesItems0Redelegation `json:"redelegation,omitempty"`
}

// Validate validates this redelegations o k body redelegation responses items0
func (o *RedelegationsOKBodyRedelegationResponsesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEntries(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRedelegation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RedelegationsOKBodyRedelegationResponsesItems0) validateEntries(formats strfmt.Registry) error {
	if swag.IsZero(o.Entries) { // not required
		return nil
	}

	for i := 0; i < len(o.Entries); i++ {
		if swag.IsZero(o.Entries[i]) { // not required
			continue
		}

		if o.Entries[i] != nil {
			if err := o.Entries[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("entries" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("entries" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *RedelegationsOKBodyRedelegationResponsesItems0) validateRedelegation(formats strfmt.Registry) error {
	if swag.IsZero(o.Redelegation) { // not required
		return nil
	}

	if o.Redelegation != nil {
		if err := o.Redelegation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("redelegation")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("redelegation")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this redelegations o k body redelegation responses items0 based on the context it is used
func (o *RedelegationsOKBodyRedelegationResponsesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateEntries(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateRedelegation(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RedelegationsOKBodyRedelegationResponsesItems0) contextValidateEntries(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Entries); i++ {

		if o.Entries[i] != nil {
			if err := o.Entries[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("entries" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("entries" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *RedelegationsOKBodyRedelegationResponsesItems0) contextValidateRedelegation(ctx context.Context, formats strfmt.Registry) error {

	if o.Redelegation != nil {
		if err := o.Redelegation.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("redelegation")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("redelegation")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RedelegationsOKBodyRedelegationResponsesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RedelegationsOKBodyRedelegationResponsesItems0) UnmarshalBinary(b []byte) error {
	var res RedelegationsOKBodyRedelegationResponsesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0 RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
// contains a balance in addition to shares which is more suitable for client
// responses.
swagger:model RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0
*/
type RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0 struct {

	// balance
	Balance string `json:"balance,omitempty"`

	// redelegation entry
	RedelegationEntry *RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0RedelegationEntry `json:"redelegation_entry,omitempty"`
}

// Validate validates this redelegations o k body redelegation responses items0 entries items0
func (o *RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRedelegationEntry(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0) validateRedelegationEntry(formats strfmt.Registry) error {
	if swag.IsZero(o.RedelegationEntry) { // not required
		return nil
	}

	if o.RedelegationEntry != nil {
		if err := o.RedelegationEntry.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("redelegation_entry")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("redelegation_entry")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this redelegations o k body redelegation responses items0 entries items0 based on the context it is used
func (o *RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateRedelegationEntry(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0) contextValidateRedelegationEntry(ctx context.Context, formats strfmt.Registry) error {

	if o.RedelegationEntry != nil {
		if err := o.RedelegationEntry.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("redelegation_entry")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("redelegation_entry")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0) UnmarshalBinary(b []byte) error {
	var res RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0RedelegationEntry RedelegationEntry defines a redelegation object with relevant metadata.
swagger:model RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0RedelegationEntry
*/
type RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0RedelegationEntry struct {

	// completion_time defines the unix time for redelegation completion.
	// Format: date-time
	CompletionTime strfmt.DateTime `json:"completion_time,omitempty"`

	// creation_height  defines the height which the redelegation took place.
	CreationHeight string `json:"creation_height,omitempty"`

	// initial_balance defines the initial balance when redelegation started.
	InitialBalance string `json:"initial_balance,omitempty"`

	// shares_dst is the amount of destination-validator shares created by redelegation.
	SharesDst string `json:"shares_dst,omitempty"`
}

// Validate validates this redelegations o k body redelegation responses items0 entries items0 redelegation entry
func (o *RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0RedelegationEntry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCompletionTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0RedelegationEntry) validateCompletionTime(formats strfmt.Registry) error {
	if swag.IsZero(o.CompletionTime) { // not required
		return nil
	}

	if err := validate.FormatOf("redelegation_entry"+"."+"completion_time", "body", "date-time", o.CompletionTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this redelegations o k body redelegation responses items0 entries items0 redelegation entry based on context it is used
func (o *RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0RedelegationEntry) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0RedelegationEntry) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0RedelegationEntry) UnmarshalBinary(b []byte) error {
	var res RedelegationsOKBodyRedelegationResponsesItems0EntriesItems0RedelegationEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RedelegationsOKBodyRedelegationResponsesItems0Redelegation Redelegation contains the list of a particular delegator's redelegating bonds
// from a particular source validator to a particular destination validator.
swagger:model RedelegationsOKBodyRedelegationResponsesItems0Redelegation
*/
type RedelegationsOKBodyRedelegationResponsesItems0Redelegation struct {

	// delegator_address is the bech32-encoded address of the delegator.
	DelegatorAddress string `json:"delegator_address,omitempty"`

	// entries are the redelegation entries.
	Entries []*RedelegationsOKBodyRedelegationResponsesItems0RedelegationEntriesItems0 `json:"entries"`

	// validator_dst_address is the validator redelegation destination operator address.
	ValidatorDstAddress string `json:"validator_dst_address,omitempty"`

	// validator_src_address is the validator redelegation source operator address.
	ValidatorSrcAddress string `json:"validator_src_address,omitempty"`
}

// Validate validates this redelegations o k body redelegation responses items0 redelegation
func (o *RedelegationsOKBodyRedelegationResponsesItems0Redelegation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEntries(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RedelegationsOKBodyRedelegationResponsesItems0Redelegation) validateEntries(formats strfmt.Registry) error {
	if swag.IsZero(o.Entries) { // not required
		return nil
	}

	for i := 0; i < len(o.Entries); i++ {
		if swag.IsZero(o.Entries[i]) { // not required
			continue
		}

		if o.Entries[i] != nil {
			if err := o.Entries[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("redelegation" + "." + "entries" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("redelegation" + "." + "entries" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this redelegations o k body redelegation responses items0 redelegation based on the context it is used
func (o *RedelegationsOKBodyRedelegationResponsesItems0Redelegation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateEntries(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RedelegationsOKBodyRedelegationResponsesItems0Redelegation) contextValidateEntries(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Entries); i++ {

		if o.Entries[i] != nil {
			if err := o.Entries[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("redelegation" + "." + "entries" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("redelegation" + "." + "entries" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *RedelegationsOKBodyRedelegationResponsesItems0Redelegation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RedelegationsOKBodyRedelegationResponsesItems0Redelegation) UnmarshalBinary(b []byte) error {
	var res RedelegationsOKBodyRedelegationResponsesItems0Redelegation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RedelegationsOKBodyRedelegationResponsesItems0RedelegationEntriesItems0 RedelegationEntry defines a redelegation object with relevant metadata.
swagger:model RedelegationsOKBodyRedelegationResponsesItems0RedelegationEntriesItems0
*/
type RedelegationsOKBodyRedelegationResponsesItems0RedelegationEntriesItems0 struct {

	// completion_time defines the unix time for redelegation completion.
	// Format: date-time
	CompletionTime strfmt.DateTime `json:"completion_time,omitempty"`

	// creation_height  defines the height which the redelegation took place.
	CreationHeight string `json:"creation_height,omitempty"`

	// initial_balance defines the initial balance when redelegation started.
	InitialBalance string `json:"initial_balance,omitempty"`

	// shares_dst is the amount of destination-validator shares created by redelegation.
	SharesDst string `json:"shares_dst,omitempty"`
}

// Validate validates this redelegations o k body redelegation responses items0 redelegation entries items0
func (o *RedelegationsOKBodyRedelegationResponsesItems0RedelegationEntriesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCompletionTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RedelegationsOKBodyRedelegationResponsesItems0RedelegationEntriesItems0) validateCompletionTime(formats strfmt.Registry) error {
	if swag.IsZero(o.CompletionTime) { // not required
		return nil
	}

	if err := validate.FormatOf("completion_time", "body", "date-time", o.CompletionTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this redelegations o k body redelegation responses items0 redelegation entries items0 based on context it is used
func (o *RedelegationsOKBodyRedelegationResponsesItems0RedelegationEntriesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RedelegationsOKBodyRedelegationResponsesItems0RedelegationEntriesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RedelegationsOKBodyRedelegationResponsesItems0RedelegationEntriesItems0) UnmarshalBinary(b []byte) error {
	var res RedelegationsOKBodyRedelegationResponsesItems0RedelegationEntriesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
