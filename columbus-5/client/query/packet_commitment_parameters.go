// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPacketCommitmentParams creates a new PacketCommitmentParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPacketCommitmentParams() *PacketCommitmentParams {
	return &PacketCommitmentParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPacketCommitmentParamsWithTimeout creates a new PacketCommitmentParams object
// with the ability to set a timeout on a request.
func NewPacketCommitmentParamsWithTimeout(timeout time.Duration) *PacketCommitmentParams {
	return &PacketCommitmentParams{
		timeout: timeout,
	}
}

// NewPacketCommitmentParamsWithContext creates a new PacketCommitmentParams object
// with the ability to set a context for a request.
func NewPacketCommitmentParamsWithContext(ctx context.Context) *PacketCommitmentParams {
	return &PacketCommitmentParams{
		Context: ctx,
	}
}

// NewPacketCommitmentParamsWithHTTPClient creates a new PacketCommitmentParams object
// with the ability to set a custom HTTPClient for a request.
func NewPacketCommitmentParamsWithHTTPClient(client *http.Client) *PacketCommitmentParams {
	return &PacketCommitmentParams{
		HTTPClient: client,
	}
}

/* PacketCommitmentParams contains all the parameters to send to the API endpoint
   for the packet commitment operation.

   Typically these are written to a http.Request.
*/
type PacketCommitmentParams struct {

	/* ChannelID.

	   channel unique identifier
	*/
	ChannelID string

	/* PortID.

	   port unique identifier
	*/
	PortID string

	/* Sequence.

	   packet sequence

	   Format: uint64
	*/
	Sequence string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the packet commitment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PacketCommitmentParams) WithDefaults() *PacketCommitmentParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the packet commitment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PacketCommitmentParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the packet commitment params
func (o *PacketCommitmentParams) WithTimeout(timeout time.Duration) *PacketCommitmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the packet commitment params
func (o *PacketCommitmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the packet commitment params
func (o *PacketCommitmentParams) WithContext(ctx context.Context) *PacketCommitmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the packet commitment params
func (o *PacketCommitmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the packet commitment params
func (o *PacketCommitmentParams) WithHTTPClient(client *http.Client) *PacketCommitmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the packet commitment params
func (o *PacketCommitmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChannelID adds the channelID to the packet commitment params
func (o *PacketCommitmentParams) WithChannelID(channelID string) *PacketCommitmentParams {
	o.SetChannelID(channelID)
	return o
}

// SetChannelID adds the channelId to the packet commitment params
func (o *PacketCommitmentParams) SetChannelID(channelID string) {
	o.ChannelID = channelID
}

// WithPortID adds the portID to the packet commitment params
func (o *PacketCommitmentParams) WithPortID(portID string) *PacketCommitmentParams {
	o.SetPortID(portID)
	return o
}

// SetPortID adds the portId to the packet commitment params
func (o *PacketCommitmentParams) SetPortID(portID string) {
	o.PortID = portID
}

// WithSequence adds the sequence to the packet commitment params
func (o *PacketCommitmentParams) WithSequence(sequence string) *PacketCommitmentParams {
	o.SetSequence(sequence)
	return o
}

// SetSequence adds the sequence to the packet commitment params
func (o *PacketCommitmentParams) SetSequence(sequence string) {
	o.Sequence = sequence
}

// WriteToRequest writes these params to a swagger request
func (o *PacketCommitmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param channel_id
	if err := r.SetPathParam("channel_id", o.ChannelID); err != nil {
		return err
	}

	// path param port_id
	if err := r.SetPathParam("port_id", o.PortID); err != nil {
		return err
	}

	// path param sequence
	if err := r.SetPathParam("sequence", o.Sequence); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
