// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CodeInfoReader is a Reader for the CodeInfo structure.
type CodeInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CodeInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCodeInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCodeInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCodeInfoOK creates a CodeInfoOK with default headers values
func NewCodeInfoOK() *CodeInfoOK {
	return &CodeInfoOK{}
}

/* CodeInfoOK describes a response with status code 200, with default header values.

A successful response.
*/
type CodeInfoOK struct {
	Payload *CodeInfoOKBody
}

func (o *CodeInfoOK) Error() string {
	return fmt.Sprintf("[GET /terra/wasm/v1beta1/codes/{code_id}][%d] codeInfoOK  %+v", 200, o.Payload)
}
func (o *CodeInfoOK) GetPayload() *CodeInfoOKBody {
	return o.Payload
}

func (o *CodeInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CodeInfoOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCodeInfoDefault creates a CodeInfoDefault with default headers values
func NewCodeInfoDefault(code int) *CodeInfoDefault {
	return &CodeInfoDefault{
		_statusCode: code,
	}
}

/* CodeInfoDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type CodeInfoDefault struct {
	_statusCode int

	Payload *CodeInfoDefaultBody
}

// Code gets the status code for the code info default response
func (o *CodeInfoDefault) Code() int {
	return o._statusCode
}

func (o *CodeInfoDefault) Error() string {
	return fmt.Sprintf("[GET /terra/wasm/v1beta1/codes/{code_id}][%d] CodeInfo default  %+v", o._statusCode, o.Payload)
}
func (o *CodeInfoDefault) GetPayload() *CodeInfoDefaultBody {
	return o.Payload
}

func (o *CodeInfoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CodeInfoDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CodeInfoDefaultBody code info default body
swagger:model CodeInfoDefaultBody
*/
type CodeInfoDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// details
	Details []*CodeInfoDefaultBodyDetailsItems0 `json:"details"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this code info default body
func (o *CodeInfoDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CodeInfoDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("CodeInfo default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("CodeInfo default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this code info default body based on the context it is used
func (o *CodeInfoDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CodeInfoDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("CodeInfo default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("CodeInfo default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CodeInfoDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CodeInfoDefaultBody) UnmarshalBinary(b []byte) error {
	var res CodeInfoDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CodeInfoDefaultBodyDetailsItems0 code info default body details items0
swagger:model CodeInfoDefaultBodyDetailsItems0
*/
type CodeInfoDefaultBodyDetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this code info default body details items0
func (o *CodeInfoDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this code info default body details items0 based on context it is used
func (o *CodeInfoDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CodeInfoDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CodeInfoDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res CodeInfoDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CodeInfoOKBody QueryCodeInfoResponse is response type for the
// QueryyCodeInfo RPC method.
swagger:model CodeInfoOKBody
*/
type CodeInfoOKBody struct {

	// code info
	CodeInfo *CodeInfoOKBodyCodeInfo `json:"code_info,omitempty"`
}

// Validate validates this code info o k body
func (o *CodeInfoOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCodeInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CodeInfoOKBody) validateCodeInfo(formats strfmt.Registry) error {
	if swag.IsZero(o.CodeInfo) { // not required
		return nil
	}

	if o.CodeInfo != nil {
		if err := o.CodeInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("codeInfoOK" + "." + "code_info")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("codeInfoOK" + "." + "code_info")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this code info o k body based on the context it is used
func (o *CodeInfoOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCodeInfo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CodeInfoOKBody) contextValidateCodeInfo(ctx context.Context, formats strfmt.Registry) error {

	if o.CodeInfo != nil {
		if err := o.CodeInfo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("codeInfoOK" + "." + "code_info")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("codeInfoOK" + "." + "code_info")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CodeInfoOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CodeInfoOKBody) UnmarshalBinary(b []byte) error {
	var res CodeInfoOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CodeInfoOKBodyCodeInfo CodeInfo is data for the uploaded contract WASM code
swagger:model CodeInfoOKBodyCodeInfo
*/
type CodeInfoOKBodyCodeInfo struct {

	// CodeHash is the unique identifier created by wasmvm
	// Format: byte
	CodeHash strfmt.Base64 `json:"code_hash,omitempty"`

	// CodeID is the sequentially increasing unique identifier
	CodeID string `json:"code_id,omitempty"`

	// Creator address who initially stored the code
	Creator string `json:"creator,omitempty"`
}

// Validate validates this code info o k body code info
func (o *CodeInfoOKBodyCodeInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this code info o k body code info based on context it is used
func (o *CodeInfoOKBodyCodeInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CodeInfoOKBodyCodeInfo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CodeInfoOKBodyCodeInfo) UnmarshalBinary(b []byte) error {
	var res CodeInfoOKBodyCodeInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
