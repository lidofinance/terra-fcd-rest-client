// Code generated by go-swagger; DO NOT EDIT.

package tendermint_rpc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetValidatorsetsLatestReader is a Reader for the GetValidatorsetsLatest structure.
type GetValidatorsetsLatestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetValidatorsetsLatestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetValidatorsetsLatestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetValidatorsetsLatestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetValidatorsetsLatestOK creates a GetValidatorsetsLatestOK with default headers values
func NewGetValidatorsetsLatestOK() *GetValidatorsetsLatestOK {
	return &GetValidatorsetsLatestOK{}
}

/* GetValidatorsetsLatestOK describes a response with status code 200, with default header values.

The validator set at the latest block height
*/
type GetValidatorsetsLatestOK struct {
	Payload *GetValidatorsetsLatestOKBody
}

func (o *GetValidatorsetsLatestOK) Error() string {
	return fmt.Sprintf("[GET /validatorsets/latest][%d] getValidatorsetsLatestOK  %+v", 200, o.Payload)
}
func (o *GetValidatorsetsLatestOK) GetPayload() *GetValidatorsetsLatestOKBody {
	return o.Payload
}

func (o *GetValidatorsetsLatestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetValidatorsetsLatestOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetValidatorsetsLatestInternalServerError creates a GetValidatorsetsLatestInternalServerError with default headers values
func NewGetValidatorsetsLatestInternalServerError() *GetValidatorsetsLatestInternalServerError {
	return &GetValidatorsetsLatestInternalServerError{}
}

/* GetValidatorsetsLatestInternalServerError describes a response with status code 500, with default header values.

Server internal error
*/
type GetValidatorsetsLatestInternalServerError struct {
}

func (o *GetValidatorsetsLatestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /validatorsets/latest][%d] getValidatorsetsLatestInternalServerError ", 500)
}

func (o *GetValidatorsetsLatestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetValidatorsetsLatestOKBody get validatorsets latest o k body
swagger:model GetValidatorsetsLatestOKBody
*/
type GetValidatorsetsLatestOKBody struct {

	// block height
	BlockHeight string `json:"block_height,omitempty"`

	// validators
	Validators []*GetValidatorsetsLatestOKBodyValidatorsItems0 `json:"validators"`
}

// Validate validates this get validatorsets latest o k body
func (o *GetValidatorsetsLatestOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateValidators(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetValidatorsetsLatestOKBody) validateValidators(formats strfmt.Registry) error {
	if swag.IsZero(o.Validators) { // not required
		return nil
	}

	for i := 0; i < len(o.Validators); i++ {
		if swag.IsZero(o.Validators[i]) { // not required
			continue
		}

		if o.Validators[i] != nil {
			if err := o.Validators[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getValidatorsetsLatestOK" + "." + "validators" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getValidatorsetsLatestOK" + "." + "validators" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get validatorsets latest o k body based on the context it is used
func (o *GetValidatorsetsLatestOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateValidators(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetValidatorsetsLatestOKBody) contextValidateValidators(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Validators); i++ {

		if o.Validators[i] != nil {
			if err := o.Validators[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getValidatorsetsLatestOK" + "." + "validators" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getValidatorsetsLatestOK" + "." + "validators" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetValidatorsetsLatestOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetValidatorsetsLatestOKBody) UnmarshalBinary(b []byte) error {
	var res GetValidatorsetsLatestOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetValidatorsetsLatestOKBodyValidatorsItems0 get validatorsets latest o k body validators items0
swagger:model GetValidatorsetsLatestOKBodyValidatorsItems0
*/
type GetValidatorsetsLatestOKBodyValidatorsItems0 struct {

	// bech32 encoded address
	// Example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
	Address string `json:"address,omitempty"`

	// proposer priority
	// Example: 1000
	ProposerPriority string `json:"proposer_priority,omitempty"`

	// pub key
	PubKey *GetValidatorsetsLatestOKBodyValidatorsItems0PubKey `json:"pub_key,omitempty"`

	// voting power
	// Example: 1000
	VotingPower string `json:"voting_power,omitempty"`
}

// Validate validates this get validatorsets latest o k body validators items0
func (o *GetValidatorsetsLatestOKBodyValidatorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePubKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetValidatorsetsLatestOKBodyValidatorsItems0) validatePubKey(formats strfmt.Registry) error {
	if swag.IsZero(o.PubKey) { // not required
		return nil
	}

	if o.PubKey != nil {
		if err := o.PubKey.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pub_key")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("pub_key")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get validatorsets latest o k body validators items0 based on the context it is used
func (o *GetValidatorsetsLatestOKBodyValidatorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidatePubKey(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetValidatorsetsLatestOKBodyValidatorsItems0) contextValidatePubKey(ctx context.Context, formats strfmt.Registry) error {

	if o.PubKey != nil {
		if err := o.PubKey.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pub_key")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("pub_key")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetValidatorsetsLatestOKBodyValidatorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetValidatorsetsLatestOKBodyValidatorsItems0) UnmarshalBinary(b []byte) error {
	var res GetValidatorsetsLatestOKBodyValidatorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetValidatorsetsLatestOKBodyValidatorsItems0PubKey get validatorsets latest o k body validators items0 pub key
swagger:model GetValidatorsetsLatestOKBodyValidatorsItems0PubKey
*/
type GetValidatorsetsLatestOKBodyValidatorsItems0PubKey struct {

	// type
	Type string `json:"type,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this get validatorsets latest o k body validators items0 pub key
func (o *GetValidatorsetsLatestOKBodyValidatorsItems0PubKey) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get validatorsets latest o k body validators items0 pub key based on context it is used
func (o *GetValidatorsetsLatestOKBodyValidatorsItems0PubKey) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetValidatorsetsLatestOKBodyValidatorsItems0PubKey) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetValidatorsetsLatestOKBodyValidatorsItems0PubKey) UnmarshalBinary(b []byte) error {
	var res GetValidatorsetsLatestOKBodyValidatorsItems0PubKey
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
