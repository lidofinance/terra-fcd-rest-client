// Code generated by go-swagger; DO NOT EDIT.

package staking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetStakingValidatorsValidatorAddrDelegationsReader is a Reader for the GetStakingValidatorsValidatorAddrDelegations structure.
type GetStakingValidatorsValidatorAddrDelegationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStakingValidatorsValidatorAddrDelegationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStakingValidatorsValidatorAddrDelegationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStakingValidatorsValidatorAddrDelegationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStakingValidatorsValidatorAddrDelegationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetStakingValidatorsValidatorAddrDelegationsOK creates a GetStakingValidatorsValidatorAddrDelegationsOK with default headers values
func NewGetStakingValidatorsValidatorAddrDelegationsOK() *GetStakingValidatorsValidatorAddrDelegationsOK {
	return &GetStakingValidatorsValidatorAddrDelegationsOK{}
}

/* GetStakingValidatorsValidatorAddrDelegationsOK describes a response with status code 200, with default header values.

OK
*/
type GetStakingValidatorsValidatorAddrDelegationsOK struct {
	Payload []*GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0
}

func (o *GetStakingValidatorsValidatorAddrDelegationsOK) Error() string {
	return fmt.Sprintf("[GET /staking/validators/{validatorAddr}/delegations][%d] getStakingValidatorsValidatorAddrDelegationsOK  %+v", 200, o.Payload)
}
func (o *GetStakingValidatorsValidatorAddrDelegationsOK) GetPayload() []*GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0 {
	return o.Payload
}

func (o *GetStakingValidatorsValidatorAddrDelegationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStakingValidatorsValidatorAddrDelegationsBadRequest creates a GetStakingValidatorsValidatorAddrDelegationsBadRequest with default headers values
func NewGetStakingValidatorsValidatorAddrDelegationsBadRequest() *GetStakingValidatorsValidatorAddrDelegationsBadRequest {
	return &GetStakingValidatorsValidatorAddrDelegationsBadRequest{}
}

/* GetStakingValidatorsValidatorAddrDelegationsBadRequest describes a response with status code 400, with default header values.

Invalid validator address
*/
type GetStakingValidatorsValidatorAddrDelegationsBadRequest struct {
}

func (o *GetStakingValidatorsValidatorAddrDelegationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /staking/validators/{validatorAddr}/delegations][%d] getStakingValidatorsValidatorAddrDelegationsBadRequest ", 400)
}

func (o *GetStakingValidatorsValidatorAddrDelegationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStakingValidatorsValidatorAddrDelegationsInternalServerError creates a GetStakingValidatorsValidatorAddrDelegationsInternalServerError with default headers values
func NewGetStakingValidatorsValidatorAddrDelegationsInternalServerError() *GetStakingValidatorsValidatorAddrDelegationsInternalServerError {
	return &GetStakingValidatorsValidatorAddrDelegationsInternalServerError{}
}

/* GetStakingValidatorsValidatorAddrDelegationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetStakingValidatorsValidatorAddrDelegationsInternalServerError struct {
}

func (o *GetStakingValidatorsValidatorAddrDelegationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /staking/validators/{validatorAddr}/delegations][%d] getStakingValidatorsValidatorAddrDelegationsInternalServerError ", 500)
}

func (o *GetStakingValidatorsValidatorAddrDelegationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0 get staking validators validator addr delegations o k body items0
swagger:model GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0
*/
type GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0 struct {

	// balance
	Balance *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Balance `json:"balance,omitempty"`

	// delegation
	Delegation *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Delegation `json:"delegation,omitempty"`
}

// Validate validates this get staking validators validator addr delegations o k body items0
func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBalance(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDelegation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0) validateBalance(formats strfmt.Registry) error {
	if swag.IsZero(o.Balance) { // not required
		return nil
	}

	if o.Balance != nil {
		if err := o.Balance.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("balance")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("balance")
			}
			return err
		}
	}

	return nil
}

func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0) validateDelegation(formats strfmt.Registry) error {
	if swag.IsZero(o.Delegation) { // not required
		return nil
	}

	if o.Delegation != nil {
		if err := o.Delegation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("delegation")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("delegation")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get staking validators validator addr delegations o k body items0 based on the context it is used
func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateBalance(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateDelegation(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0) contextValidateBalance(ctx context.Context, formats strfmt.Registry) error {

	if o.Balance != nil {
		if err := o.Balance.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("balance")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("balance")
			}
			return err
		}
	}

	return nil
}

func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0) contextValidateDelegation(ctx context.Context, formats strfmt.Registry) error {

	if o.Delegation != nil {
		if err := o.Delegation.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("delegation")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("delegation")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Balance get staking validators validator addr delegations o k body items0 balance
swagger:model GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Balance
*/
type GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Balance struct {

	// amount
	// Example: 50
	Amount string `json:"amount,omitempty"`

	// denom
	// Example: uluna
	Denom string `json:"denom,omitempty"`
}

// Validate validates this get staking validators validator addr delegations o k body items0 balance
func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Balance) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get staking validators validator addr delegations o k body items0 balance based on context it is used
func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Balance) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Balance) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Balance) UnmarshalBinary(b []byte) error {
	var res GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Balance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Delegation get staking validators validator addr delegations o k body items0 delegation
swagger:model GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Delegation
*/
type GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Delegation struct {

	// delegator address
	DelegatorAddress string `json:"delegator_address,omitempty"`

	// shares
	Shares string `json:"shares,omitempty"`

	// validator address
	ValidatorAddress string `json:"validator_address,omitempty"`
}

// Validate validates this get staking validators validator addr delegations o k body items0 delegation
func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Delegation) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get staking validators validator addr delegations o k body items0 delegation based on context it is used
func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Delegation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Delegation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Delegation) UnmarshalBinary(b []byte) error {
	var res GetStakingValidatorsValidatorAddrDelegationsOKBodyItems0Delegation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
