// Code generated by go-swagger; DO NOT EDIT.

package bank

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetBankTotalDenominationParams creates a new GetBankTotalDenominationParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetBankTotalDenominationParams() *GetBankTotalDenominationParams {
	return &GetBankTotalDenominationParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetBankTotalDenominationParamsWithTimeout creates a new GetBankTotalDenominationParams object
// with the ability to set a timeout on a request.
func NewGetBankTotalDenominationParamsWithTimeout(timeout time.Duration) *GetBankTotalDenominationParams {
	return &GetBankTotalDenominationParams{
		timeout: timeout,
	}
}

// NewGetBankTotalDenominationParamsWithContext creates a new GetBankTotalDenominationParams object
// with the ability to set a context for a request.
func NewGetBankTotalDenominationParamsWithContext(ctx context.Context) *GetBankTotalDenominationParams {
	return &GetBankTotalDenominationParams{
		Context: ctx,
	}
}

// NewGetBankTotalDenominationParamsWithHTTPClient creates a new GetBankTotalDenominationParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetBankTotalDenominationParamsWithHTTPClient(client *http.Client) *GetBankTotalDenominationParams {
	return &GetBankTotalDenominationParams{
		HTTPClient: client,
	}
}

/* GetBankTotalDenominationParams contains all the parameters to send to the API endpoint
   for the get bank total denomination operation.

   Typically these are written to a http.Request.
*/
type GetBankTotalDenominationParams struct {

	/* Denomination.

	   Coin denomination
	*/
	Denomination string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get bank total denomination params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBankTotalDenominationParams) WithDefaults() *GetBankTotalDenominationParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get bank total denomination params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBankTotalDenominationParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get bank total denomination params
func (o *GetBankTotalDenominationParams) WithTimeout(timeout time.Duration) *GetBankTotalDenominationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get bank total denomination params
func (o *GetBankTotalDenominationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get bank total denomination params
func (o *GetBankTotalDenominationParams) WithContext(ctx context.Context) *GetBankTotalDenominationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get bank total denomination params
func (o *GetBankTotalDenominationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get bank total denomination params
func (o *GetBankTotalDenominationParams) WithHTTPClient(client *http.Client) *GetBankTotalDenominationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get bank total denomination params
func (o *GetBankTotalDenominationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDenomination adds the denomination to the get bank total denomination params
func (o *GetBankTotalDenominationParams) WithDenomination(denomination string) *GetBankTotalDenominationParams {
	o.SetDenomination(denomination)
	return o
}

// SetDenomination adds the denomination to the get bank total denomination params
func (o *GetBankTotalDenominationParams) SetDenomination(denomination string) {
	o.Denomination = denomination
}

// WriteToRequest writes these params to a swagger request
func (o *GetBankTotalDenominationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param denomination
	if err := r.SetPathParam("denomination", o.Denomination); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
