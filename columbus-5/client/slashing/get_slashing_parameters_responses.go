// Code generated by go-swagger; DO NOT EDIT.

package slashing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetSlashingParametersReader is a Reader for the GetSlashingParameters structure.
type GetSlashingParametersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSlashingParametersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSlashingParametersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetSlashingParametersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSlashingParametersOK creates a GetSlashingParametersOK with default headers values
func NewGetSlashingParametersOK() *GetSlashingParametersOK {
	return &GetSlashingParametersOK{}
}

/* GetSlashingParametersOK describes a response with status code 200, with default header values.

OK
*/
type GetSlashingParametersOK struct {
	Payload *GetSlashingParametersOKBody
}

func (o *GetSlashingParametersOK) Error() string {
	return fmt.Sprintf("[GET /slashing/parameters][%d] getSlashingParametersOK  %+v", 200, o.Payload)
}
func (o *GetSlashingParametersOK) GetPayload() *GetSlashingParametersOKBody {
	return o.Payload
}

func (o *GetSlashingParametersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetSlashingParametersOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSlashingParametersInternalServerError creates a GetSlashingParametersInternalServerError with default headers values
func NewGetSlashingParametersInternalServerError() *GetSlashingParametersInternalServerError {
	return &GetSlashingParametersInternalServerError{}
}

/* GetSlashingParametersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetSlashingParametersInternalServerError struct {
}

func (o *GetSlashingParametersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /slashing/parameters][%d] getSlashingParametersInternalServerError ", 500)
}

func (o *GetSlashingParametersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetSlashingParametersOKBody get slashing parameters o k body
swagger:model GetSlashingParametersOKBody
*/
type GetSlashingParametersOKBody struct {

	// downtime jail duration
	DowntimeJailDuration string `json:"downtime_jail_duration,omitempty"`

	// min signed per window
	MinSignedPerWindow string `json:"min_signed_per_window,omitempty"`

	// signed blocks window
	SignedBlocksWindow string `json:"signed_blocks_window,omitempty"`

	// slash fraction double sign
	SlashFractionDoubleSign string `json:"slash_fraction_double_sign,omitempty"`

	// slash fraction downtime
	SlashFractionDowntime string `json:"slash_fraction_downtime,omitempty"`
}

// Validate validates this get slashing parameters o k body
func (o *GetSlashingParametersOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get slashing parameters o k body based on context it is used
func (o *GetSlashingParametersOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetSlashingParametersOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSlashingParametersOKBody) UnmarshalBinary(b []byte) error {
	var res GetSlashingParametersOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
