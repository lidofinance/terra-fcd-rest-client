// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TerraWasmV1beta1QueryContractInfoResponse QueryContractInfoResponse is response type for the
// Query/ContractInfo RPC method.
//
// swagger:model terra.wasm.v1beta1.QueryContractInfoResponse
type TerraWasmV1beta1QueryContractInfoResponse struct {

	// contract info
	ContractInfo *TerraWasmV1beta1QueryContractInfoResponseContractInfo `json:"contract_info,omitempty"`
}

// Validate validates this terra wasm v1beta1 query contract info response
func (m *TerraWasmV1beta1QueryContractInfoResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContractInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TerraWasmV1beta1QueryContractInfoResponse) validateContractInfo(formats strfmt.Registry) error {
	if swag.IsZero(m.ContractInfo) { // not required
		return nil
	}

	if m.ContractInfo != nil {
		if err := m.ContractInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("contract_info")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("contract_info")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this terra wasm v1beta1 query contract info response based on the context it is used
func (m *TerraWasmV1beta1QueryContractInfoResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateContractInfo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TerraWasmV1beta1QueryContractInfoResponse) contextValidateContractInfo(ctx context.Context, formats strfmt.Registry) error {

	if m.ContractInfo != nil {
		if err := m.ContractInfo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("contract_info")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("contract_info")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TerraWasmV1beta1QueryContractInfoResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TerraWasmV1beta1QueryContractInfoResponse) UnmarshalBinary(b []byte) error {
	var res TerraWasmV1beta1QueryContractInfoResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// TerraWasmV1beta1QueryContractInfoResponseContractInfo ContractInfo stores a WASM contract instance
//
// swagger:model TerraWasmV1beta1QueryContractInfoResponseContractInfo
type TerraWasmV1beta1QueryContractInfoResponseContractInfo struct {

	// Address is the address of the contract
	Address string `json:"address,omitempty"`

	// Admin is who can execute the contract migration
	Admin string `json:"admin,omitempty"`

	// CodeID is the reference to the stored Wasm code
	CodeID string `json:"code_id,omitempty"`

	// Creator is the contract creator address
	Creator string `json:"creator,omitempty"`

	// InitMsg is the raw message used when instantiating a contract
	// Format: byte
	InitMsg strfmt.Base64 `json:"init_msg,omitempty"`
}

// Validate validates this terra wasm v1beta1 query contract info response contract info
func (m *TerraWasmV1beta1QueryContractInfoResponseContractInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this terra wasm v1beta1 query contract info response contract info based on context it is used
func (m *TerraWasmV1beta1QueryContractInfoResponseContractInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TerraWasmV1beta1QueryContractInfoResponseContractInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TerraWasmV1beta1QueryContractInfoResponseContractInfo) UnmarshalBinary(b []byte) error {
	var res TerraWasmV1beta1QueryContractInfoResponseContractInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
