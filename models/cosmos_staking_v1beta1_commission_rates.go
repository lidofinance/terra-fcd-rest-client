// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CosmosStakingV1beta1CommissionRates CommissionRates defines the initial commission rates to be used for creating
// a validator.
//
// swagger:model cosmos.staking.v1beta1.CommissionRates
type CosmosStakingV1beta1CommissionRates struct {

	// max_change_rate defines the maximum daily increase of the validator commission, as a fraction.
	MaxChangeRate string `json:"max_change_rate,omitempty"`

	// max_rate defines the maximum commission rate which validator can ever charge, as a fraction.
	MaxRate string `json:"max_rate,omitempty"`

	// rate is the commission rate charged to delegators, as a fraction.
	Rate string `json:"rate,omitempty"`
}

// Validate validates this cosmos staking v1beta1 commission rates
func (m *CosmosStakingV1beta1CommissionRates) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cosmos staking v1beta1 commission rates based on context it is used
func (m *CosmosStakingV1beta1CommissionRates) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CosmosStakingV1beta1CommissionRates) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CosmosStakingV1beta1CommissionRates) UnmarshalBinary(b []byte) error {
	var res CosmosStakingV1beta1CommissionRates
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
