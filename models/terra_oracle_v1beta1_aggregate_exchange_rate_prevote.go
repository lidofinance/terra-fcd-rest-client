// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TerraOracleV1beta1AggregateExchangeRatePrevote struct for aggregate prevoting on the ExchangeRateVote.
// The purpose of aggregate prevote is to hide vote exchange rates with hash
// which is formatted as hex string in SHA256("{salt}:{exchange rate}{denom},...,{exchange rate}{denom}:{voter}")
//
// swagger:model terra.oracle.v1beta1.AggregateExchangeRatePrevote
type TerraOracleV1beta1AggregateExchangeRatePrevote struct {

	// hash
	Hash string `json:"hash,omitempty"`

	// submit block
	SubmitBlock string `json:"submit_block,omitempty"`

	// voter
	Voter string `json:"voter,omitempty"`
}

// Validate validates this terra oracle v1beta1 aggregate exchange rate prevote
func (m *TerraOracleV1beta1AggregateExchangeRatePrevote) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this terra oracle v1beta1 aggregate exchange rate prevote based on context it is used
func (m *TerraOracleV1beta1AggregateExchangeRatePrevote) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TerraOracleV1beta1AggregateExchangeRatePrevote) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TerraOracleV1beta1AggregateExchangeRatePrevote) UnmarshalBinary(b []byte) error {
	var res TerraOracleV1beta1AggregateExchangeRatePrevote
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
